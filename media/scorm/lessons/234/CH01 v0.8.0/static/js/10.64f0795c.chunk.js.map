{"version":3,"sources":["components/login/Input/Input.styled.ts","components/login/Input/Input.tsx","components/login/Input/index.ts","assets/figures/TimeOut.tsx","components/popups/timedOut/TimedOut.styled.ts","components/popups/timedOut/TimedOut.tsx","utils/localization.ts","components/sections/SectionContent/SectionContent.styled.ts","components/sections/SectionsList/SectionsList.styled.ts","components/sections/SectionLearningObjective/SectionLearningObjective.styled.ts","components/sections/SectionLearningObjective/SectionLearningObjective.tsx","utils/image.ts","components/sections/SectionImage/SectionImage.styled.ts","components/sections/SectionImage/SectionImage.tsx","components/sections/SectionContent/SectionContent.tsx","components/sections/SectionsList/SectionsList.tsx","components/sections/CourseInformation/CourseInformation.styled.ts","components/sections/CourseInformation/CourseInformation.tsx","components/sections/QuestionPool/QuestionPool.styled.ts","components/sections/QuestionPool/QuestionPoolOptionItem.tsx","components/sections/QuestionPool/QuestionPool.tsx","pages/course/sections/SectionsPage.styled.ts","pages/course/sections/SectionsPage.tsx","components/submitOnce/SubmitOnceButton.styled.ts","components/submitOnce/SubmitOnceButton.tsx","components/remainingAttemptsBlock/RemainingAttemptsBlock.styled.ts","components/remainingAttemptsBlock/RemainingAttemptsBlock.tsx","components/treeOfContent/ResultsBlock/ResultsBlock.styled.ts","components/treeOfContent/ResultsBlock/ResultsBlock.tsx","components/treeOfContent/Header/Header.styled.ts","components/treeOfContent/Header/Header.tsx","components/treeOfContent/QuestionTreeNode/QuestionTreeNode.styled.ts","components/treeOfContent/QuestionTreeNode/QuestionTreeNode.tsx","components/treeOfContent/QuestionTreeNode/QuestionTreeNodeSubmitOnce.tsx","components/treeOfContent/ExpandedTocItems/ExpandedTocItems.tsx","components/common/ProgressPopover/ProgressPopover.styled.ts","components/common/ProgressPopover/ProgressPopover.tsx","components/treeOfContent/SectionTreeNode/SectionTreeNode.styled.ts","components/treeOfContent/SectionTreeNode/SectionTreeNode.tsx","components/treeOfContent/LearningObjectiveTreeNode/LearningObjectiveTreeNode.styled.ts","components/treeOfContent/LearningObjectiveTreeNode/LearningObjectiveTreeNode.tsx","components/treeOfContent/PoolTreeNode/PoolTreeNode.tsx","components/treeOfContent/ExpandedTocPoolSection/ExpandedTocPoolSection.tsx","components/treeOfContent/ExpandedToc/ExpandedToc.styled.ts","components/treeOfContent/ExpandedToc/ExpandedToc.tsx","components/treeOfContent/NavigationItem/NavigationItem.styled.ts","components/treeOfContent/NavigationBlock/NavigationBlock.styled.ts","components/treeOfContent/NavigationBlock/NavigationBlock.tsx","components/treeOfContent/NavigationItem/NavigationItem.tsx","components/treeOfContent/CollapsedTocPoolSection/CollapsedTocPoolSection.tsx","components/treeOfContent/CollapsedToc/CollapsedToc.styled.ts","components/treeOfContent/CollapsedToc/CollapsedToc.tsx","components/treeOfContent/TreeOfContent.styled.ts","components/treeOfContent/TreeOfContent.tsx","pages/course/learningObjective/LearningObjective.styled.ts","components/hocs/withFallbackToNotFound.tsx","pages/course/learningObjective/LearningObjective.tsx","assets/figures/Rocket.tsx","assets/figures/SadResult.tsx","components/popups/startNewAttempt/StartNewAttempt.styled.ts","components/popups/startNewAttempt/StartNewAttempt.tsx","components/common/CourseProgressResult/CourseProgressResult.styled.ts","components/common/CourseProgressResult/Figure.styled.ts","components/common/CourseProgressResult/CoursePassedBackground.tsx","components/common/CourseProgressResult/CourseFailedBackground.tsx","components/common/CourseProgressResult/CourseProgressResult.tsx","core/documentLoaders/fileLoader.ts","core/documentLoaders/certificateLoader.ts","components/common/courseAfterword/courseAfterword.styled.ts","components/common/courseAfterword/courseAfterword.tsx","pages/course/results/ResultsPage.styled.ts","pages/course/results/ResultsPage.tsx","pages/course/courseOverview/CourseOverview.styled.ts","pages/course/courseOverview/RouteTransition.tsx","store/questions/multipleChoice/actions.ts","components/questions/MultipleChoice/MultipleChoice.tsx","components/questions/SingleChoiceImage/SingleChoiceImage.tsx","components/questions/Question.styled.ts","store/questions/statementChoice/actions.ts","components/questions/Statement/Switch/Switch.styled.ts","components/questions/Statement/Switch/Switch.tsx","components/common/helpers/AuxWrapper.ts","components/questions/Statement/Option/Option.styled.ts","components/questions/Statement/Option/Option.tsx","components/questions/Statement/MobileAnswerSeparator.tsx","components/questions/Statement/Statement.styled.ts","components/questions/Statement/Statement.tsx","store/questions/openQuestion/actions.ts","components/questions/OpenQuestion/OpenQuestion.styled.ts","components/questions/OpenQuestion/OpenQuestion.tsx","store/questions/rankingText/actions.ts","components/questions/RankingText/RankingText.tsx","store/questions/scenario/actions.ts","components/questions/Scenario/BranchTrackProvider/branchtrackProviderPlugin.ts","components/questions/Scenario/Scenario.styled.ts","components/questions/Scenario/Scenario.tsx","store/questions/fillInTheBlank/actions.ts","components/questions/FillInTheBlank/FillInTheBlank.styled.ts","components/questions/FillInTheBlank/FillInTheBlank.tsx","core/http/imageLoader.ts","store/questions/dragAndDropText/actions.ts","components/questions/DragAndDropText/DragAndDropText.styles.ts","components/questions/DragAndDropText/DragAndDropMobile.tsx","components/questions/DragAndDropText/DragAndDropText.tsx","store/questions/textMatching/actions.ts","components/questions/TextMatching/TextMatching.styled.ts","components/questions/TextMatching/TextMatching.tsx","store/questions/hotspot/actions.ts","components/questions/Hotspot/Hotspot.styled.ts","components/questions/Hotspot/Hotspot.tsx","components/questions/Question.tsx","components/question/PageCounter/PageCounter.tsx","components/question/PoolCounter/PoolCounter.styled.ts","components/question/PoolCounter/PoolCounter.tsx","components/common/helpers/containerComponentCreator.ts","components/contents/ContentBlock/ContentBlock.styled.ts","components/contents/ContentBlock/ContentBlock.tsx","components/question/Feedback/Feedback.tsx","components/question/Hint/Hint.styled.ts","components/question/Hint/Hint.tsx","components/question/VoiceOver/VoiceOver.styled.ts","components/question/VoiceOver/VoiceOver.tsx","utils/dom.ts","pages/course/question/actionsBlock/ActionsBlock.styled.ts","pages/course/question/actionsBlock/ActionsBlock.tsx","pages/course/question/QuestionPage.styled.ts","pages/course/question/QuestionPage.tsx","pages/course/question/actionsBlock/ActionsBlockSubmitOnce.tsx","pages/course/question/QuestionPageSubmitOnce.tsx","pages/course/courseLayout/defaultLayout/DefaultLayout.tsx","pages/course/courseLayout/singlePageLayout/OnePageCourse.styled.ts","pages/course/courseLayout/singlePageLayout/OnePageCourse.tsx","pages/course/courseLayout/CourseLayout.tsx","pages/course/courseOverview/CourseOverview.tsx","components/login/AuthForm/AuthForm.styled.ts","components/login/AuthForm/AuthForm.tsx","components/login/AuthForm/EmailInput.tsx","components/login/AuthForm/NameInput.tsx","components/login/AuthForm/PasswordInput.tsx","components/login/SignUpForm/SignUpForm.styled.ts","components/login/LoginForm/LoginForm.styled.ts","components/login/LoginForm/LoginForm.tsx","components/login/SocialLogin/SocialLogin.styled.ts","components/login/SocialLogin/SocialLogin.tsx","components/login/SwitcherForm/SwitcherForm.styled.ts","components/login/SwitcherForm/SwitcherForm.tsx","components/login/MobileFooter/MobileFooter.styled.ts","components/login/MobileFooter/MobileFooter.tsx","components/login/LearnerAgreements/LearnerAgreements.styled.tsx","components/login/LearnerAgreements/LearnerAgreements.tsx","pages/auth/auth.styled.ts","pages/login/LoginPage.styled.ts","pages/login/LoginPage.tsx","components/login/SignUpForm/SignUpForm.tsx","pages/signUp/SignUpPage.styled.ts","pages/signUp/SignUpPage.tsx","assets/figures/StartOver.tsx","components/popups/startOver/StartOver.styled.ts","components/popups/startOver/StartOver.tsx","components/errorBoundary/ErrorBoundary.tsx","pages/course/Course.tsx"],"names":["InputElement","styled","input","attrs","props","type","name","placeholder","tabIndex","id","onInvalid","autoComplete","pattern","required","secondaryFont","transparentize","theme","colors","textColor","mainColor","contentBodyColor","media","mobile","isBlur","css","incorrectColor","bounce","correctColor","validationStatusBeforeSubmit","InputLabel","label","transition","ValidIcon","Icon","ValidationMessageBlock","div","TextError","Text","EyeIcon","role","ariaLabel","buttonDefaultStyle","InputContainer","isUserExist","Input","validationPassword","event","onChange","isSpaceInPass","test","target","value","isPatternPass","RegExp","setState","startInputPass","showErrorText","state","validValue","hasValue","showPassword","showPassValidationBlock","this","defaultValue","onBlur","classList","remove","validity","typeMismatch","patternMismatch","length","INPUT_TYPE","TEXT","PASSWORD","idInput","labelText","validIcon","textError","refInput","showValidationMessage","onFocus","ref","setTypePassword","className","onBlurValidationInput","onInputFocus","htmlFor","size","localize","onClick","showHidePassword","onKeyDown","KEYS","ENTER","toLowerCase","SPACEBAR","includes","key","preventDefault","React","defaultProps","withTheme","width","height","viewBox","version","xmlns","SVG_XML_NAMESPACE","arialabel","x","y","filterUnits","in","d","fill","fillRule","transform","filter","opacity","cx","cy","rx","ry","r","xlinkHref","fillOpacity","TimedOutWrapper","section","TitleElement","h1","secondaryFontH1","DescriptionWrapper","p","secondaryFontSmallText","xlarge","ButtonElement","Button","updateUnAnsweredQuestions","submitAllQuestionsEnabled","unansweredQuestions","questionActions","tocActions","courseStructure","submitAllAnswerOnce","sections","forEach","answer","withRouter","withNavigation","connect","shouldSubmitAllQuestions","getCourseStructure","getUnansweredQuestions","dispatch","timerActions","bindActionCreators","courseTimerActions","treeOfContentActions","courseQuestionActions","closePopup","navigateToUrl","CssAnimation","AnimationType","fadeInDown","layout","BUTTON","LAYOUT","PRIMARY","a","async","setTimerStatus","TimerStatus","STOPPED","RESULTS_PATH","verbsObject","ProgressStatus","PASSED","FAILED","IN_PROGRESS","getProgressStatusLocalizationKey","status","ProgressBar","ProgressComponent","SectionContentWrapper","large","SectionTitle","mainFontText","medium","SectionSubText","IconArrowRight","Footer","footer","getColor","isPassed","isOverallMasteryScore","SectionProgressStatusWrapper","SectionProgressStatusIconWrapper","span","buttonTextColor","SectionsList","ul","SectionsListItem","li","isDummy","defaultBoxShadowColor","SectionsButton","button","disabled","CollapseWrapper","typography","CollapseInnerWrapper","CollapseButton","tablet","ButtonText","fonts","fontFamily","IconClose","IconCircleObjective","LearningObjectiveText","CollapseContent","SectionLearningObjective","toggleExpanded","prevState","isExpanded","learningObjective","color","appearance","getImageDimensions","url","Promise","resolve","reject","img","Image","onload","onerror","Error","src","getThumbnailUrl","Container","figure","MEDIA_XSMALL","BackgroundImage","bgSize","SectionImage","isUnmounted","imageDimensions","supportedBgSizes","initial","isImageLoading","imageUrl","originalImage","coincidences","imageResizerQueryPattern","exec","substring","index","_getOriginalImageUrl","getBgProps","isBgColorTransparent","renderSubmitOnceSectionText","isCourseProgress","isCourseSubmitted","correctlyAffectProgressQuestionsCountInSection","affectProgressQuestionsCountInSection","answeredSectionQuestionsCount","countCorrectlyAnsweredQuestionsInSection","countQuestionsInSection","countAnsweredQuestionsInSection","renderSectionText","isSubmitAtOnce","isAttemptSubmitted","title","progress","affectsProgress","sectionProgress","isSectionPassed","isSectionFailed","isFailed","maxLength","shapeColor","progressColor","navigateToQuestion","navigateToLearningObjective","isCourseOnOnePage","setSectionRefs","dummyElements","Array","from","v","getDummyElements","map","questionId","questions","score","Reviewable","context","REVIEW_COMMENT_TYPES","SECTION","property","REVIEW_COMMENT_PROPERTIES","TITLE","dummy","getCustomScrollbars","coverBgOverlayTextColor","MEDIA_MEDIUM","CourseInfoContainer","CourseInfoWrapper","mainFontH1","ContentsContainer","LogoWrapper","CourseLogo","logoUrl","alt","ProgressSectionsWrapper","ProgressPerSection","ProgressMasteryScore","ProgressResult","ProgressCaption","TimerInfoWrapper","TimerIcon","CourseInformation","refContainer","renderCourseTimerInfo","timeLimit","inverted","data-test","renderProgressCaption","courseProgress","affectAnsweredQuestionsCount","affectProgressQuestionsCount","percentSuccess","countAnsweredQuestions","countQuestions","getProgress","answeredQuestionsProgress","getBackgroundSettings","renderMasteryScoreSectionProgress","masteryScore","forwardedRef","passedMark","introductions","alternativeLogoUrl","sectionsPassedCount","affectProgressSectionsCount","answeredSectionsCount","isTimerEnabled","isQuestionPool","COURSE","hintName","HINT_FOR_SPOT_COMMENT","ignoreFocus","renderSubmitAtOnceProgressPerSection","renderSectionProgress","countSectionsSuccess","countSections","margin","isArray","INTRODUCTION","Contents","items","linkTabIndex","renderCourseIntroduction","isSectionAnswered","getAlternativeLogo","getCourseTitle","getCourseIntroductions","getScore","getMasteryScoreValue","getAffectProgressSectionsCount","getSectionsPassedCount","getAnsweredSectionsCount","getAffectProgressQuestionsCount","getAnsweredAffectProgressQuestionsCount","getAnsweredQuestionsProgress","getTimerEnabled","getTimeFromMilliseconds","getTimerLimit","isQuestionPoolEnabled","QuestionPoolWrapper","CourseUserTitle","h3","CourseIntroductionText","secondaryFontText","QuestionPoolOptionsList","QuestionPoolOptionListItem","QuestionPoolOptionIcon","QuestionPoolOptionText","QuestionPoolSubText","strong","CourseStartButton","QuestionPoolOptionItem","text","iconName","optionText","optionValue","optionSubText","HTML_INFINITY_SYMBOL","dangerouslySetInnerHTML","__html","QuestionPool","getTimerText","getTimer","continueCourse","isCourseInProgress","isPreviousPageResults","navigateToPreviousPage","getLastOpenedQuestion","sectionId","startCourse","renderCourseIntroductionText","remainedAttempts","isLimitedAttempts","questionPoolSize","hasCourseStarted","introWithoutTimerAndAttempts","introWithTimerAndAttempts","timer","introWithTimer","introWithAttempts","timerWillStart","goodLuck","userName","limitedAttemptsNumber","courseAttempts","isSubmitAllQuestions","getRemainingAttempts","SKIP_TO_CONTENT_IDS","QUESTION_POOL_START_BUTTON","getQuestions","getQuestionPoolSize","hasCourseBeenStarted","isInProgress","getName","isAttemptsLimited","getLimitedAttemptsNumber","getCourseAttempt","SectionsPageContainer","SectionsPageSidebar","BasicStyledSidebar","SectionsPageContent","PageContent","bodyBackground","background","body","SectionListContainer","small","Sections","sectionRefs","questionPoolButtonRef","push","focusFirstSection","focus","focusQuestionPoolButton","element","document","getElementById","focusElement","timeElapsed","timerStatus","NOT_STARTED","RESET","startTimer","setTimerElapsed","getQuestionUrl","scrollToId","markAsOpened","getLearningObjectiveUrl","navigateToPrevPage","renderQuestionPoolComponent","renderSectionsListComponent","popupExpanded","SkipToContent","getSections","getAffectProgressQuestionsCountInSection","getAnsweredSectionQuestionsCount","getCorrectlyAffectProgressQuestionsCountInSection","getBackground","isAllQuestionsOnOnePage","getTimerStatus","getTimerElapsed","getPopupVisibility","navigationActions","PopoverContentWrapper","SubmitMessageWrapper","PopoverContent","ClosePopoverIcon","PopoverButton","PopoverContentHeader","PopoverContentMessage","mainFont","SubmitOnceButton","popoverRef","popoverContentRef","setTooltipAction","option","open","setTimeout","current","children","submitAllAnswersText","handleKeyDown","evt","ESCAPE","viewAction","remainingQuestions","submitOnce","toggle","renderPopoverContent","templateTheme","ariaModal","SECONDARY","isActive","showSubmitButton","style","display","trigger","onRequestClose","position","tooltipTheme","arrow","interactive","html","getColors","RemainingAttemptsBlockText","RemainingAttemptsBlock","remainingAttempts","allowedAttempts","usedAttempts","Component","Title","pointerOnHover","ResultsIcon","isCollapsed","ResultsBlock","navigateToResults","show","collapsed","ellipsis","colored","CourseBackIcon","CourseTitleText","CourseBackButton","TOC","EXPANDED_WIDTH","TAIL_WIDTH","Header","navigateToIndex","courseTitle","highlighted","QuestionIcon","ShapedIcon","IconElement","iconColor","TitleText","QuestionItem","fullColor","QuestionTreeNode","isAnswered","isAnsweredCorrectly","question","isInformationContent","isSurvey","hasBeenOpened","INFORMATION_CONTENT","getTitleQuestion","SIZES","SMALL","shape","ICON","SHAPES","ROUND_FULL_COLOR","fontSize","renderQuestionIcon","QuestionTreeNodeSubmitOnce","questionIconText","getIconName","questionTextColor","getShapeColor","shapeOpacity","ExpandedTocItems","activeQuestionId","navigateWithKeyEvent","getTabindex","questionIndex","QuestionsProgress","CongratsMessageWrapper","CongratsMessageTitle","NotPassedMessageWrapper","FailedMessageWrapper","FailedMessageTitle","QuestionProgressText","centerAbsoluteElement","ProgressPopover","toggleOnClick","handleClosePopupKeyDown","getCircularProgressbarStroke","renderSubmitOnceQuestionProgress","strokeWidth","percentage","styles","path","stroke","strokeLinecap","trail","renderPopoverMessageContent","renderQuestionProgress","affectCorrectlyAnsweredQuestionsCount","correctQuestionsCount","totalQuestionsCount","nextProps","nextState","popoverPosition","ariaLabelledby","top","left","right","bottom","aria-labelledby","ownProps","getAffectCorrectlyAnsweredQuestionsCount","getSectionProgress","ProgressPopoverWrapper","SectionItem","TitleIcon","QuestionList","ariaExpanded","StatusIcon","SectionText","StatusText","Status","SectionTreeNode","toggleIsExpanded","renderSubmitOnceSectionProgress","sectionStatusId","statusText","prevProps","sectionIndex","aria-haspopup","animateAppear","duration","opacityDuration","LearningObjectiveItem","ItemTitle","LearningObjectiveTreeNode","PureComponent","PoolTreeNode","courseStatusText","questionsForPool","answeredPoolQuestionsCount","objectToArray","item","getTabIndex","ExpandedTocPoolItems","ExpandedTocPoolSection","ExpandedTocContainer","nav","ProgressMasteryScoreWrapper","SubmitAllAnswersButtonContainer","TocWrapper","ExpandedTocSection","activeSectionId","isLearningObjectiveView","scrollToQuestion","ExpandedToc","renderSubmitOnceMasteryScoreProgress","isCoursePassed","OPACITY","PERCENT_100","PERCENT_30","passedMarkStyles","createRef","isResultsActive","Fragment","aria-hidden","scaleAnimation","keyframes","NavigationItemIcon","MEDIA_SMALL","ItemsLimiter","NavButton","solidColor","prev","next","Items","topShift","NavigationBlock","windowResizeHandler","throttle","windowHeight","window","innerHeight","setTocNavigationElements","countTocNavigationElements","minCountTocNavigationElements","maxCountTocNavigationElements","isIndexInView","startIndex","endIndex","nextPage","totalItems","navigationElementsCount","updatePagingState","prevPage","range","start","end","postDelta","pre","getRange","hasPrevPage","hasNextPage","calculatePaging","addEventListener","activeItemIndex","removeEventListener","limiterHeight","NavigationLearningItem","sectionTitle","getNavigationItemIcon","MEDIUM","getContentIconProps","configs","ROUND_SHADED","getDefaultQuestionColor","getHoverColor","hoverShape","getAnsweredOnceIconName","getAnsweredQuestionColor","NavigationItem","iconProps","ROUND_OUTLINED","getQuestionIconProps","getSubmitOnceShapeColor","getSubmitOnceQuestionIconProps","CollapsedTocPoolSection","activeQuestionIndex","itemIndex","correctlyAnsweredQuestionsCount","getCorrectlyAnsweredQuestionsCount","CollapsedTocContainer","ariaHidden","COLLAPSED_WIDTH","Z_INDEX","COLLAPSED_TOC","mainBackground","SectionProgress","isNavigationExist","constants","CollapsedToc","showProgressScore","isPassedSection","getSectionData","activeSectionIndex","find","findIndex","renderCircularProgressbar","TailIcon","Tail","TOC_TAIL","TreeOfContent","navigate","scrollNavigate","INDEX_PATH","updateTimerProgress","actions","isAppInLowResolution","toggleTreeOfContentVisibility","tocProps","course","isNextPageResults","params","getLocationParams","QUESTION_PATH","learningObjectiveParams","LEARNING_OBJECTIVE_PATH","getTreeOfContentVisibility","isLowResolution","getCurrentLocationHash","replace","getPoolQuestions","isSectionsPassed","PageTitle","LearningObjectiveSectionTitle","LearningObjectiveWrapper","LearningObjectiveContent","LearningObjectiveTitle","bold","LearningObjectiveResult","LearningObjectiveIcon","withFallbackToNotFound","WrappedComponent","predicateForNotFound","NotFound","LearningObjective","navigateToNextPage","scrollToNextPage","logoShown","affectedProgressCount","affectedProgressCorrectlyAnsweredQuestionsCount","LEARNING_OBJECTIVE_PAGE","suffixIcon","match","sectionSelectors","getLogo","isMainLogoShown","stdDeviation","strokeOpacity","ContinueLaterWrapper","StartNewAttempt","restoreAttemptStarted","setRestoreAttemptStarted","iconSize","descriptionText","popupSettings","newAttempt","LINK","FORM","CourseProgress","CourseProgressText","CourseProgressCircle","Figure","svg","fill-rule","courseSelectors","CIRCLE_DEGREES","downloadUrl","fileName","fetch","catch","er","console","error","response","blob","isChrome","navigator","userAgent","isFirefox","download","reader","FileReader","out","Blob","write","result","readAsDataURL","data","learnStorageUrl","selectedLanguage","headers","progressStorage","getHeaders","contentType","CONTENT_TYPES","JSON","bearerToken","getToken","courseId","templateId","logo","getNewLogoUrl","requester","get","IdToUuid","query","json","message","responseData","getCertificateUrl","fileLoader","AfterwordContainer","passedAfterwordsIds","failedAfterwordsIds","afterWordsIds","StyledText","ButtonWrapper","SeparatorElement","Separator","WidthLimiterContainer","ResultsPage","checkHasPrevPage","startNewAttempt","courseActions","openStartNewAttemptPopup","popupActions","openPopup","popupId","POPUP_ID_START_NEW_ATTEMPT","popupAriaLabelKey","component","disablePopupClosing","disableBottomLine","submitResults","finished","isNpsEnabled","POPUP_ID_CLOSE_COURSE","CloseCoursePopup","finalized","openNpsPopup","downloadCertificate","isCertificateLoading","certificateLoader","isCertificateDownloaded","certificateDownloaded","showCertificateLoadedError","npsPopupWasOpened","certificateButton","closeCourse","userAuthorized","POPUP_ID_NPS_POPUP","NpsPopup","hidePopover","mainFigure","Trophy","headerText","RESULT_PAGE","coursePassStatusText","canNavigateToMyCourses","isAnonymous","isScormMode","isPreviewMode","isLti","fromDownloadCertificateButton","attemptsUsed","submitAtOnceStartNewAttemptButton","renderCloseCourseButton","isReviewMode","hasReanswerableQuestions","isTimerStopped","renderContinueCourseButton","renderStartNewAttemptButton","courseHasBeenContinued","TOOLTIP","INCORRECT","showTooltip","popoverButton","isLoading","goToUrl","isAllowedDownloadCertificate","isCrossDeviceSavingEnabled","correctSectionsCount","totalSectionsCount","renderDownloadCertificateButton","renderQuestionSubmitButton","renderMyCourseButton","renderSubmitAtOnceButton","renderSubmitResultsButton","settingSelectors","getCorrectlyAffectProgressAnsweredQuestionsCount","isLtiInitialized","isAuthorized","hasReAnswerableQuestions","Blockout","BLOCKOUT","isTreeOfContentExpanded","CourseOverviewSidebar","PageSidebar","xsmall","CourseOverviewContent","PageContentChild","PageContainer","ContentContainer","isOnOnePageView","dynamicHeight","MEDIA_XLARGE","MEDIA_LARGE","MEDIA_TABLET","secondaryColor","CourseOverviewRouteTransition","prevUrl","unlistenHistory","getTransitionKey","pathname","isQuestionView","onEnter","node","isAppearing","location","urlsChain","indexOf","TweenMax","fromTo","delay","clearProps","onExit","history","listen","listenLocation","TransitionGroup","Transition","appear","timeout","getChain","toggleAnswerIsSelected","answerId","ActionTypes","QUESTION_MULTIPLECHOICE_TOGGLE_ANSWER_IS_SELECTED","payload","setSingleAnswerSelected","questionType","QUESTION_MULTIPLECHOICE_SET_SINGLE_ANSWER_SELECTED","SET_SINGLE_ANSWER_SELECTED","MultipleChoice","selectItem","itemId","isMultiple","allowSubmit","answerBeforeSubmit","answers","isSingleAnswer","ariaDisabled","getUserAnswers","SingleChoiceImage","imageQuestion","QuestionContainer","QuestionContainerOverlay","isShown","statementAnswerIsSelected","isCorrect","QUESTION_STATEMENT_ANSWER_IS_SELECTED","SwitchBlock","SwitchContainer","aux","SwitchOption","ariaDisable","ariaChecked","selected","Option","ariaRole","DEFAULT_PROPS","MobileAnswerSeparator","ctaButtonColor","AnswerText","CaptionMobileContainer","CaptionWrapper","Caption","TextWrapper","AnswersList","CaptionContainer","AnswerListItem","Switch","StatementChoice","isTrue","userSelected","trueText","falseText","undefined","openQuestionAnswerIsSelected","answeredText","OPEN_QUESTION_ANSWER_IS_SELECTED","EditableContainer","OpenQuestion","EditableTextarea","onResize","onFocusOutTextArea","e","onChangeHandler","rankingAnswersAreSelected","QUESTION_RANKING_ANSWERS_ARE_SELECTED","RankingText","action","questionAction","initialLoading","randomizeAnswersEnabled","shuffleAnswerOptions","listsOfItems","getElements","moveItem","isMultipleList","getUserResponse","isRandomizeAnswersEnabled","scenarioBranchtrackData","isFinished","QUESTION_SCENARIO_BRANCHTRACK_DATA","BranchtrackProvider","instances","messageProvider","eventOrigin","supportedMessageTypes","init","scene","choice","finish","success","projectId","isEmpty","subscribeMessageEvent","branchtrack","BranchtrackInstance","instance","unsubscribeMessageEvent","messageEventHadler","origin","parse","provider","messageDataType","details","project","token","branchtrackInstance","playlog","err","obj","Object","prototype","hasOwnProperty","call","ScenarioIframeSection","ScenarioResults","IconContainer","Scenario","refFrameScenario","instanceId","embedCode","branchTrackEventHandler","getScoreBranchtrack","createInstance","initBranchtrack","getElementsByTagName","setAttribute","resetInstace","destroyInstance","getEmbedHtml","getEmbedCode","getProjectId","fillInTheBlankAnswer","FILL_IN_THE_BLANK_ANSWER","AnswerContentWrapper","AnswerContainer","FillInTheBlank","addTabIndexToLinks","links","querySelectorAll","wrappTables","el","i","wrapper","createElement","parentNode","insertBefore","appendChild","answerGroups","userAnswers","String","trim","parseSelect","attribs","dataId","answerValue","class","DropdownInput","onSelectChange","answeredPlaceholder","domToReact","TextInput","onInputFocusOut","questionContent","Parser","getImage","relativeUrl","mode","noCache","getImageCheckUrl","imageName","getImageNameByUrl","imageFolderUrl","IMAGE_DEFAULT_DOMAIN","requestUrl","dragAndDropAnswersAreSelected","QUESTION_DRAG_AND_DROP_ANSWERS_ARE_SELECTED","DragDropMobileWrapper","isImageLoaded","isImageNotFound","DragDropMobile","DragAndDropMobile","imageRefs","onSelectElement","droppableElement","destination","list","splice","retries","dropspots","originalDropspots","dropspot","listsOfItemsMobile","NO_SELECTED_ID","isDropDisabled","isMatching","matchingAnswer","CircleLoader","onLoad","handleImageLoaded","DragAndDropText","getPositionDependingImageScale","image","originalListPosition","scale","naturalWidth","isTouchScreenDevice","Math","round","setPositionDependingImageScale","changeImageState","imageLoader","isImageExists","imageNotFound","shouldShowPreviousAnswers","cloneDeep","DragDrop","isAnswersFromPreviousAttemptEnabled","getQuestionRetries","dragAndDropActions","matchingAnswersAreSelected","QUESTION_MATCHING_ANSWERS_ARE_SELECTED","TextMatchingItem","TextMatchingItemKey","TextMatchingItemSelected","shownSelectedValue","DropdownInputWrapper","DropdownInputContainer","TextMatching","getResponseOptionById","getOptionsWithAnswerKeys","selectedKey","markItemInList","newList","shuffleAnswersKey","shuffle","activeElem","activeElement","blur","some","previousProps","previousState","inputData","buttonAnimation","isMatchingOption","onSelectMatching","mapAnswersToOptions","isAnyValueSelected","placeholders","plus","matchingOption","renderDropdownInput","hotspotQuestionAnswer","HOTSPOT_QUESTION_ANSWER","Wrapper","ImageSpotsWrapper","CloseIcon","Spot","SpotWrapper","Hotspot","getCoordinates","tagName","rect","getBoundingClientRect","clientX","clientY","markers","addMarker","marker","newMarkers","removeMarker","Question","hasRandomizedOptionsLoaded","renderQuestion","SINGLE_CHOICE","SINGLE_CHOICE_IMAGE","MULTIPLE_CHOICE","STATEMENT_CHOICE","Statement","OPEN_QUESTION","RANKING_TEXT","SCENARIO","FILL_IN_THE_BLANK","DRAG_AND_DROP_TEXT","TEXT_MATCHING","HOTSPOT","isRandomizedOptionsLoaded","PageCounter","total","PoolCounter","createContainer","typeName","propTypes","PropTypes","isRequired","Body","ContentBlock","contentRef","getChildrenObject","Content","child","childrenObj","validationChildren","typeNames","toArray","reduce","acc","Feedback","refFeedback","onShown","animate","animateFeedback","isAnimating","onHidden","questionPageRef","renderContent","isOpenQuestionType","feedbackContentItems","getTitle","LARGE","wait","delayOpacityTransition","onExpanded","onCollapsed","scrollIntoView","correctFeedback","incorrectFeedback","isGeneralFeedback","questionResponse","currentAnswer","explanationBlocks","block","isQuestionAnswered","isQuestionAnsweredCorrectly","getQuestionResponse","ControlContainer","visible","ButtonComponent","ButtonSeparator","SeparatorComponent","ContainerHint","Hint","componentWillUnmount","clearTimeout","recalculateScrollLocation","shouldRecalculateScrollLocation","RECALCULATE_LOCATION_TIME_MS","textTransform","aria-expanded","IframeElement","iframe","allow","audioid","VoiceOver","addQueryStringParameter","encodeURIComponent","getStyles","iframeNode","DOMParser","parseFromString","firstChild","attrName","elem","attributes","getAttributesNodeElement","iframeAttr","nodeValue","getIframeSrcWithStyleVariable","clonedUrl","URL","urlParams","searchParams","set","search","toString","disableAutoPlay","renderIframeElement","ActionButtonsContainer","isHidden","NavButtonsBlock","SurveyHint","RemainingAttemptsReminderText","RemainingAttemptsReminder","SubmitOnceButtonWrapper","ActionBlocks","submit","isJustSubmitted","canGoNext","canGoToNextQuestion","getNextNavigationText","isLastPageInSection","tryAgain","resetProgress","updateRetries","feedbackAnimated","isAttemptAllowed","slideInDown","renderNavButtonsBlock","questionCountInSection","canTryAgainQuestion","renderNextButton","nextButtonLayout","goToNextPage","attemptNumber","isFeedbackAnimating","QuestionTitleWrapper","QuestionTitle","QuestionPage","setTitlePage","getQuestionIndex","poolQuestionIndex","onePageQuestionIndex","getTotalQuestionCount","questionCountInOnePage","renderQuestionHeader","QUESTION_PAGE","renderInstructions","feedbackContentList","loadFeedback","currentScrollLocationId","isLastBlock","renderInformationContentOrHints","renderFeedback","renderVoiceOver","showLearningHints","hints","QUESTION","LEARNING_CONTENT","instructions","voiceOver","isVoiceOver","VOICE_OVER","getSection","getQuestionCount","getQuestion","sectionExists","questionExists","getPoolQuestionIndex","isShowLearningHintsEnabled","ActionsBlockSubmitOnce","courseQuestionIndex","overallNumberOfQuestions","submitAllAtOnce","submitAllAnswers","isLastPage","questionNextButtonLayout","renderSubmitAtOnceButtonWrapper","isEveryAffectedQuestionsAnswered","isLastQuestion","isAllAffectedQuestionsAnswered","QuestionPageSubmitOnce","getCourseQuestionIndex","getCourseQuestionCount","DefaultLayout","altText","StickyContainer","StickyHead","StickyBody","SectionNumber","SectionName","ProgressContainer","Progress","LearningObjectiveBlock","QuestionBlock","isFirstElement","SectionSeparator","SectionCounter","SectionHeader","calculateLocationMap","locationMap","populateLocationMap","elementEndPosition","offsetTop","answeredAffectProgressQuestionsCountInSection","SectionBreaker","nonInfoContentQuestions","questionProps","theLastID","onePageIndex","innerElement","shift","renderQuestionBlock","setShouldRecalculateScrollLocation","getNonInfoContentQuestions","elementIdInViewport","getElementIDInViewPort","getSectionId","getSectionById","getAnsweredAffectProgressQuestionsCountInSection","getSectionIndex","isLearningObjective","useState","setLocationMap","scrollPosition","setScrollPosition","learningObjectiveQuestion","setLearningObjectiveQuestion","elementInViewportRef","useRef","firstSection","getFirstElementId","useEffect","isFirstSection","elementId","newLocationMap","useCallback","debounce","currentPathname","DEBOUNCE_SCROLL_WAIT_TIME_MS","stickyContainerOnScroll","currentScrollPosition","scrollTop","currentComponentId","currentPosition","blockEndPositions","keys","parseFloat","scrollableContainer","lastPosition","floor","scrollHeight","clientHeight","startPosition","val","pageTop","selectedElement","getIdInViewport","learningObjectiveDiv","learningObjectiveTitle","getLearningObjectiveTitlePosition","renderStickyBody","renderLearningObjective","innerIndex","ONE_PAGE_COURSE","onScroll","poolQuestion","CourseLayout","CourseOverview","getElement","getElementHeader","focusContentId","isResultsView","render","documentElement","exact","app","Form","form","idElement","FormContentWrapper","AuthForm","fieldRefs","add","beforeSubmitValidation","onSubmit","hideMessage","returnValidationStatusElem","email","shortTermAccess","valid","setValidationStatusElem","elemValid","setRefs","setFieldRefs","password","agreement","agreementAccepted","userEmail","formId","resetPasswordSendMessage","isEmailPasswordCombinationNotExists","isUnknownError","refEmail","noValidate","getEmail","EmailInput","checkIsUserExist","EMAIL","NameInput","PasswordInput","ButtonSubmitSingUp","AgreementCheckBox","AgreementLabel","CheckboxContainer","shake","isChecked","CheckIcon","TextElement","ButtonSubmit","MessageText","MessageTextWrapper","LinkWrapper","LoginForm","onPasswordRestore","emailValid","resetPassword","STATUS_OK","saveCrossDevice","resetStatuses","renderWithTooltip","CORRECT","renderForgotPasswordLink","multiple","aria-checked","credentialsCombinationNotExistsMessage","renderLoginButton","actionElement","transitionDuration","eventHandler","shouldSaveCrossDevice","variables","facebook","linkedin","google","LinkElement","href","SocialLoginContainer","TextSocial","SeparatorContainer","SocialLogin","getSocialNetworkAuthLink","ListItemElements","ariaCurrent","ListElement","LinksWrapper","SwitcherForm","signUp","logIn","Link","to","SIGNUP_PATH","LOGIN_PATH","MobileFooterContainer","LinkToPageContainer","LinkToPageText","MobileFooter","navigationTextKey","navigateTo","navigationToTextKey","LearnerAgreementText","EulaLinkText","LearnerAgreements","shouldDisplayAgreement","setShouldDisplayAgreement","isSignUpPage","EULA_PDF_LINK","PdfDocument","AuthPageSidebar","AuthPageContent","AuthContainer","AuthSection","CourseLogoSidebarWrapper","CourseLogoSidebar","FormHeading","AuthTextForm","AuthSocialLoginContainer","SwitcherFormContainer","Gdpr","isSignupPage","addTopMargin","AgreementIcon","GdprText","LoginSection","LoginContainer","TextForm","SkipLinkContainer","LoginPage","loginFormFieldRefs","signInData","userActions","authorizeUser","launch","EMAIL_PASSWORD_COMBINATION_NOT_EXISTS","UNKNOWN_ERROR","onAuthorizationSkip","skipAuthentication","setEmailFocus","appActions","launchMaterial","urlToNavigate","loginViaSocialMediaEnabled","allowToSkipTrackingAndTracingEnabled","accessLimitationEnable","isLoginViaSocialMediaEnabled","isAccessLimited","isAllowToSkipTrackingAndTracingEnabled","allowedUsers","getAllowedUsers","SignUp","EMAIL_REGEX","userExists","exists","signUpCommonErrorMessage","renderSignUpButton","resetErrorStatus","source","PASSWORD_REGEX","checked","SignupSection","SignupContainer","FootNoteText","SignUpPage","signupFormFieldRefs","signUpData","registerUser","setNameFocus","isUserAuthenticated","SignUpForm","isAuthenticated","StartOver","Description","ErrorBoundary","errorInfo","popup","isCourseProgressRestoreFailed","isProgressRestoreFailed","isTocExpanded","userAccessIsLimited","typeAccess","IS_SUCCESSFUL_ACCESS","IS_NO_ACCESS","IS_NOT_AUTHORIZED","openStartOverPopup","POPUP_ID_START_OVER","StartOverPopup","TIMED_OUT","POPUP_ID_TIMED_OUT","TimedOut","Route","RouteTransition","Layout","componentNoAccess","NoAccess","materialType","MATERIAL_TYPES","SECTIONS_PATH","SECTION_PATH","shouldRedirect","Login","NotFoundPage"],"mappings":"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","file":"static/js/10.64f0795c.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\nimport { transition, bounce } from 'components/mixins/interactivity';\nimport { transparentize } from 'utils/color';\nimport media from 'components/mixins/media';\nimport Icon from 'components/common/Icon';\nimport Text from 'components/common/Text';\nimport buttonDefaultStyle from 'components/mixins/normalize';\nimport { secondaryFont } from 'components/mixins/typography';\n\ntype InputElement = {\n  type: string;\n  name: string;\n  placeholder: string;\n  tabIndex: number;\n  id: string;\n  onInvalid(): void;\n  autoComplete: string;\n  pattern?: string;\n  validationStatusBeforeSubmit: boolean;\n  isBlur: boolean;\n};\nexport const InputElement = styled.input.attrs((props: InputElement) => ({\n  type: props.type,\n  name: props.name,\n  placeholder: props.placeholder,\n  tabIndex: props.tabIndex,\n  id: props.id,\n  onInvalid: props.onInvalid,\n  autoComplete: props.autoComplete,\n  pattern: props.pattern,\n  required: 'required'\n}))<InputElement>`\n  ${secondaryFont};\n  position: relative;\n  top: 0;\n  left: 0;\n  border-radius: 30px;\n  font-weight: normal;\n  font-size: 14px;\n  width: 320px;\n  height: 50px;\n  border-radius: 30px;\n  box-shadow: inset 0 2px 0 0 ${props => transparentize(props.theme.colors.textColor, 0.08)};\n  background-color: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n  padding: 16px 40px 16px 24px;\n  border: none;\n  color: ${props => props.theme.colors.textColor};\n  &::placeholder {\n    color: transparent;\n  }\n  &:focus {\n    box-shadow: inset 0 2px 0 0 ${props => transparentize(props.theme.colors.mainColor, 0.1)};\n    border: solid 1px ${props => props.theme.colors.mainColor};\n    background-color: ${props => props.theme.colors.contentBodyColor};\n    outline: none;\n  }\n  &:focus::placeholder {\n    color: ${props => transparentize(props.theme.colors.textColor, 0.7)};\n  }\n  ${media.mobile`\n    width: 260px;\n    height: 44px;\n  `};\n  &.full:invalid {\n    ${props =>\n      props.isBlur === true &&\n      css`\n        background-color: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n        box-shadow: inset 0 2px 0 0\n          ${props => transparentize(props.theme.colors.incorrectColor, 0.06)};\n        border: solid 1px ${props => props.theme.colors.incorrectColor};\n        ${bounce};\n      `};\n  }\n  &.full:valid {\n    ${props =>\n      props.isBlur === true &&\n      css`\n        background-color: ${props => props.theme.colors.contentBodyColor};\n        box-shadow: inset 0 2px 0 0\n          ${props => transparentize(props.theme.colors.incorrectColor, 0.1)};\n        border: solid 1px ${props => props.theme.colors.correctColor};\n      `};\n  }\n  ${props =>\n    props.validationStatusBeforeSubmit === false &&\n    css`\n      & {\n        background-color: ${transparentize(props.theme.colors.textColor, 0.02)};\n        box-shadow: inset 0 2px 0 0 ${transparentize(props.theme.colors.incorrectColor, 0.06)};\n        border: solid 1px ${props.theme.colors.incorrectColor};\n        ${bounce};\n      }\n    `};\n`;\n\nexport const InputLabel = styled.label`\n  box-sizing: border-box;\n  line-height: 1;\n  position: absolute;\n  padding: 16px 24px;\n  top: -30px;\n  left: 0;\n  font-size: 10px;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.7)};\n  ${InputElement}.is-empty + & {\n    top: 0;\n    font-size: 14px;\n  }\n  ${transition('top')};\n  ${InputElement}.changed + &,\n  ${InputElement}:focus + &,\n  ${InputElement}:valid + & {\n    top: -30px;\n    font-size: 10px;\n  }\n\n  ${InputElement}:-webkit-autofill + &{\n    top: -30px;\n    font-size: 10px;\n  }\n`;\n\nexport const ValidIcon = styled(Icon)`\n  color: ${props => props.theme.colors.correctColor};\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  right: 22px;\n  visibility: hidden;\n  ${InputElement}:invalid ~ & {\n    ${props =>\n      props.isBlur === true &&\n      css`\n        visibility: hidden;\n      `};\n  }\n  ${InputElement}:valid ~ & {\n    ${props =>\n      props.isBlur === true &&\n      css`\n        visibility: visible;\n      `};\n  }\n`;\n\nexport const ValidationMessageBlock = styled.div`\n  display: flex;\n  position: absolute;\n  left: 25px;\n  top: 55px;\n  visibility: hidden;\n  width: 100%;\n  &.show {\n    visibility: visible;\n  }\n`;\n\nexport const TextError = styled<any>(Text)`\n  && {\n    color: ${props => props.theme.colors.incorrectColor};\n    position: relative;\n    font-size: 10px;\n    visibility: hidden;\n    margin-right: 10px;\n    line-height: 1;\n    ${ValidationMessageBlock}.show & {\n      visibility: visible;\n      color: ${props => transparentize(props.theme.colors.textColor, 0.5)};\n      margin-right: 15px;\n    }\n    ${ValidationMessageBlock}.show & .icon {\n      color: ${props => transparentize(props.theme.colors.textColor, 0.5)};\n      margin-right: 5px;\n    }\n    & .icon {\n      color: ${props => props.theme.colors.incorrectColor};\n    }\n    &.active {\n      visibility: visible;\n    }\n    ${ValidationMessageBlock}.show &.valid, ${ValidationMessageBlock}.show &.valid .icon {\n      color: ${props => props.theme.colors.correctColor};\n    }\n    ${ValidationMessageBlock}.show &.invalid, ${ValidationMessageBlock}.show &.invalid .icon {\n      color: ${props => props.theme.colors.incorrectColor};\n    }\n  }\n`;\n\ntype EyeIconProps = {\n  role: string;\n  tabIndex: number;\n  ariaLabel?: string;\n  name: string;\n  onClick: any;\n  onKeyDown: any;\n};\nexport const EyeIcon = styled(Icon).attrs((props: EyeIconProps) => ({\n  role: props.role,\n  tabIndex: props.tabIndex,\n  'aria-label': props.ariaLabel\n}))<EyeIconProps>`\n  ${buttonDefaultStyle};\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  right: 20px;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.7)};\n  font-size: 11px;\n  cursor: pointer;\n  &.icon-eye-close {\n    font-size: 13px;\n  }\n  &:hover {\n    color: ${props => props.theme.colors.textColor};\n  }\n  &:focus {\n    color: ${props => props.theme.colors.textColor};\n    outline: 1px solid black;\n  }\n  &:focus:not(:focus-visible) {\n    color: ${props => props.theme.colors.textColor};\n    outline: none;\n  }\n`;\n\ntype InputContainerProps = {\n  isUserExist: boolean;\n};\nexport const InputContainer = styled.div<InputContainerProps>`\n  ${secondaryFont};\n  position: relative;\n  font-weight: normal;\n  font-size: 14px;\n  &.invalid-input ${InputElement} {\n    background-color: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n    box-shadow: inset 0 2px 0 0 ${props => transparentize(props.theme.colors.incorrectColor, 0.06)};\n    border: solid 1px ${props => props.theme.colors.incorrectColor};\n    ${bounce};\n  }\n  ${props =>\n    props.isUserExist === true &&\n    css`\n      ${InputElement}.full:valid {\n        background-color: ${transparentize(props.theme.colors.textColor, 0.02)};\n        box-shadow: inset 0 2px 0 0 ${transparentize(props.theme.colors.incorrectColor, 0.06)};\n        border: solid 1px ${props.theme.colors.incorrectColor};\n        ${bounce};\n      }\n      ${InputElement}:valid ~ ${ValidIcon} {\n        visibility: hidden;\n      }\n      ${TextError} {\n        visibility: visible;\n      }\n      ${ValidationMessageBlock} {\n        visibility: visible;\n      }\n    `};\n`;\n","import * as React from 'react';\nimport { withTheme } from 'styled-components';\nimport { INPUT_TYPE } from 'constants/components';\nimport { localize } from 'core/localization';\nimport Icon from 'components/common/Icon';\nimport { KEYS } from 'constants/common';\n\nimport {\n  InputContainer,\n  InputElement,\n  InputLabel,\n  ValidIcon,\n  TextError,\n  ValidationMessageBlock,\n  EyeIcon\n} from './Input.styled';\n\ninterface InputTypes {\n  [INPUT_TYPE.TEXT]: string;\n  [INPUT_TYPE.PASSWORD]: string;\n  [INPUT_TYPE.EMAIL]: string;\n}\n\ntype InputProps = {\n  type: keyof InputTypes;\n  name: string;\n  tabIndex?: number;\n  labelText: string;\n  idInput: string;\n  onChange(e: any): void;\n  placeholder: string;\n  validIcon?: boolean;\n  refInput(node: any): void;\n  validationStatusBeforeSubmit: boolean;\n  showValidationMessage?: boolean;\n  onBlur?(e: any): void;\n  onFocus?(e: any): void;\n  defaultValue?: string;\n  autoComplete?: string;\n  isUserExist?: boolean;\n  pattern?: string;\n  textError?: string;\n  theme?: { [key: string]: any };\n};\n\ntype InputState = {\n  hasValue: boolean;\n  validValue: boolean;\n  showErrorText: boolean;\n  showPassword: boolean;\n  showPassValidationBlock: boolean;\n  isSpaceInPass: boolean;\n  isPatternPass: boolean;\n  startInputPass: boolean;\n  isBlur: boolean;\n};\n\nexport class Input extends React.Component<InputProps, InputState> {\n  constructor(props: InputProps) {\n    super(props);\n    this.state = {\n      hasValue: false,\n      validValue: true,\n      showErrorText: false,\n      showPassword: false,\n      showPassValidationBlock: false,\n      isSpaceInPass: false,\n      isPatternPass: false,\n      startInputPass: false,\n      isBlur: false\n    };\n  }\n\n  static defaultProps = {\n    validIcon: false,\n    showValidationMessage: true,\n    tabIndex: 0\n  };\n\n  componentDidMount() {\n    const { defaultValue } = this.props;\n\n    if (defaultValue) {\n      this.setState({ hasValue: true });\n    }\n  }\n\n  onBlurValidationInput(event: any, onBlur: any) {\n    event.target.classList.remove('changed');\n    this.setState({\n      validValue: !event.target.validity.typeMismatch && !event.target.validity.patternMismatch,\n      showPassValidationBlock: event.target.value.length !== 0,\n      isBlur: true\n    });\n    if (onBlur) {\n      onBlur(event);\n    }\n  }\n\n  onInputFocus(event: any) {\n    this.setState({ isBlur: false });\n  }\n\n  validationPassword = (event: any, onChange: any) => {\n    const isSpaceInPass = /\\s/.test(event.target.value);\n    let isPatternPass = false;\n    if (this.props.pattern) {\n      isPatternPass = new RegExp(this.props.pattern).test(event.target.value);\n    }\n\n    if (event.target.value !== 0) {\n      this.setState({\n        startInputPass: event.target.value !== 0,\n        isSpaceInPass,\n        isPatternPass\n      });\n    }\n\n    if (!isSpaceInPass && isPatternPass && onChange) {\n      onChange(event);\n    }\n  };\n\n  showErrorText = () => {\n    this.setState({ showErrorText: !this.state.validValue || !this.state.hasValue });\n  };\n\n  showHidePassword() {\n    this.setState({ showPassword: !this.state.showPassword });\n  }\n\n  setTypePassword() {\n    return this.state.showPassword ? INPUT_TYPE.TEXT : INPUT_TYPE.PASSWORD;\n  }\n\n  showPassValidationBlock() {\n    this.setState({ showPassValidationBlock: true });\n  }\n\n  render() {\n    const {\n      idInput,\n      type,\n      name,\n      tabIndex = 0,\n      placeholder,\n      labelText,\n      onChange,\n      validIcon,\n      textError,\n      refInput,\n      defaultValue,\n      autoComplete,\n      pattern,\n      validationStatusBeforeSubmit,\n      showValidationMessage,\n      isUserExist,\n      onBlur,\n      onFocus\n    } = this.props;\n    const { isBlur } = this.state;\n    return (\n      <InputContainer theme={this.props.theme} isUserExist={isUserExist || false}>\n        <InputElement\n          id={idInput}\n          ref={refInput}\n          type={type === INPUT_TYPE.PASSWORD ? this.setTypePassword() : type}\n          name={name}\n          placeholder={placeholder}\n          className={!this.state.hasValue ? 'is-empty' : 'full'}\n          tabIndex={tabIndex}\n          defaultValue={defaultValue}\n          autoComplete={autoComplete || ''}\n          pattern={pattern}\n          onBlur={event => {\n            this.setState({ hasValue: !!event.target.value });\n            this.onBlurValidationInput(event, onBlur);\n          }}\n          onFocus={(event: any) => {\n            if (type === INPUT_TYPE.PASSWORD) {\n              this.showPassValidationBlock();\n            }\n            if (onFocus) {\n              onFocus(event);\n            }\n            this.onInputFocus(event);\n          }}\n          onChange={\n            type === INPUT_TYPE.PASSWORD\n              ? (event: any) => this.validationPassword(event, onChange)\n              : onChange\n          }\n          onInvalid={this.showErrorText}\n          validationStatusBeforeSubmit={validationStatusBeforeSubmit}\n          theme={this.props.theme}\n          isBlur={isBlur}\n        />\n        <InputLabel theme={this.props.theme} htmlFor={idInput}>\n          {labelText}\n        </InputLabel>\n        {validIcon && (\n          <ValidIcon theme={this.props.theme} name=\"check-mark-2\" size={12} isBlur={isBlur} />\n        )}\n        {textError && showValidationMessage && (\n          <ValidationMessageBlock>\n            <TextError theme={this.props.theme} className={!this.state.validValue ? 'active' : ''}>\n              {textError}\n            </TextError>\n          </ValidationMessageBlock>\n        )}\n        {type === INPUT_TYPE.PASSWORD && (\n          <EyeIcon\n            role=\"button\"\n            tabIndex={0}\n            ariaLabel={\n              this.state.showPassword\n                ? localize('[label eye icon hide]')\n                : localize('[label eye icon show]')\n            }\n            name={this.state.showPassword ? 'eye-close' : 'eye-open'}\n            onClick={() => {\n              this.showHidePassword();\n            }}\n            onKeyDown={(event: any) => {\n              if (\n                [KEYS.ENTER.toLowerCase(), KEYS.SPACEBAR.toLowerCase()].includes(\n                  event.key.toLowerCase()\n                )\n              ) {\n                event.preventDefault();\n                this.showHidePassword();\n              }\n            }}\n            theme={this.props.theme}\n          />\n        )}\n        {type === INPUT_TYPE.PASSWORD && showValidationMessage && (\n          <ValidationMessageBlock className={this.state.showPassValidationBlock ? 'show' : 'hide'}>\n            <TextError\n              theme={this.props.theme}\n              className={\n                this.state.startInputPass && (this.state.isSpaceInPass ? 'invalid' : 'valid')\n              }\n            >\n              <Icon name=\"check-mark-2\" />\n              {localize('[validation pass space]')}\n            </TextError>\n            <TextError\n              className={\n                this.state.startInputPass && (this.state.isPatternPass ? 'valid' : 'invalid')\n              }\n              theme={this.props.theme}\n            >\n              <Icon name=\"check-mark-2\" />\n              {localize('[validation pass count char]')}\n            </TextError>\n          </ValidationMessageBlock>\n        )}\n      </InputContainer>\n    );\n  }\n}\n\nexport default withTheme(Input);\n","export { default } from './Input';\n","import React from 'react';\nimport { withTheme } from 'styled-components';\nimport { localize } from 'core/localization';\nimport { SVG_XML_NAMESPACE } from 'constants/common';\nimport { Figure } from './Figure.styled';\n\ntype TimeOutProps = {\n  theme: { [key: string]: any };\n};\n\nexport const TimeOut = (props: TimeOutProps) => (\n  <Figure\n    width=\"260\"\n    height=\"132\"\n    viewBox=\"0 0 260 132\"\n    version=\"1.1\"\n    xmlns={SVG_XML_NAMESPACE}\n    role=\"img\"\n    arialabel={`${localize('[aria label timeout image alt]')}`}\n  >\n    <defs>\n      <filter\n        id=\"filter-1\"\n        width=\"100%\"\n        height=\"100%\"\n        x=\"0%\"\n        y=\"0%\"\n        filterUnits=\"objectBoundingBox\"\n      >\n        <feGaussianBlur in=\"SourceGraphic\" />\n      </filter>\n      <filter\n        id=\"filter-2\"\n        width=\"100%\"\n        height=\"100%\"\n        x=\"0%\"\n        y=\"0%\"\n        filterUnits=\"objectBoundingBox\"\n      >\n        <feGaussianBlur in=\"SourceGraphic\" />\n      </filter>\n      <path id=\"path-1\" d=\"M60.567 10.928H68.56700000000001V18.928H60.567z\" />\n      <path\n        id=\"path-2\"\n        d=\"M40 0c3.314 0 6 2.686 6 6s-2.686 6-6 6-6-2.686-6-6 2.686-6 6-6zm0 2c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4z\"\n      />\n    </defs>\n    <g fill=\"none\" fillRule=\"evenodd\">\n      <g fill={props.theme.colors.textColor} transform=\"translate(0 37)\">\n        <path\n          d=\"M74.48.423H20.984s-9.378 1.012-9.378 8.467c0 7.454 9.378 8.466 9.378 8.466l31.828.06s7.447 1.452 7.447 7.983c0 6.53-7.447 8.466-7.447\n          8.466H36.368s-13.348.815-13.348 8.89c0 8.074 13.348 9.312 13.348 9.312H9.479S0 53.7 0 60.473C0 67.246 9.48 69 9.48\n          69h207.865s11.703-1.33 11.703-8.527c0-7.196-11.703-8.406-11.703-8.406H197.02s-11.868-.707-12.08-8.042c-.211-7.336\n          12.08-8.709 12.08-8.709l23.586-.816s12.31 1.814 12.31-8.376-11.325-8.768-11.325-8.768l28.253.06S260 16.806 260 8.89C260 .973 249.844 0 249.844 0L74.479.423z\"\n          filter=\"url(#filter-1)\"\n          opacity=\".02\"\n        />\n        <ellipse cx=\"130\" cy=\"91\" filter=\"url(#filter-2)\" opacity=\".1\" rx=\"35\" ry=\"4\" />\n      </g>\n      <g transform=\"translate(90)\">\n        <path\n          fill={props.theme.colors.mainColor}\n          d=\"M40 14c7.127 0 13.82 1.864 19.615 5.131l1.653-2.863 3.464 2L63 21.27C73.282 28.508 80 40.47 80 54c0 22.091-17.909 40-40 40S0 76.091 0\n          54s17.909-40 40-40zm0 6C21.222 20 6 35.222 6 54s15.222 34 34 34 34-15.222 34-34-15.222-34-34-34zm2-10v4h-4v-4h4z\"\n        />\n        <circle cx=\"40\" cy=\"54\" r=\"34\" fill={props.theme.colors.contentBodyColor} />\n        <path\n          fill={props.theme.colors.textColor}\n          d=\"M41 80v6h-2v-6h2zm-10.366-4.098l1.732 1-3 5.196-1.732-1 3-5.196zm19.732 0l3 5.196-1.732 1-3-5.196 1.732-1zm7.61-5.055l4.242 4.242-1.414\n          1.415-4.243-4.243 1.414-1.414zm-35.562-.675l1.414 1.414-4.242 4.242-1.414-1.414 4.242-4.242zm-6.316-6.538l1 1.732-5.196 3-1-1.732 5.196-3zm46.804-1l5.196 3-1\n          1.732-5.196-3 1-1.732zM14 53v2H8v-2h6zm58 0v2h-6v-2h6zm-4.902-11.366l1 1.732-5.196 3-1-1.732 5.196-3zm-55.196-2l5.196 3-1 1.732-5.196-3 1-1.732zm48.512-7.462l1.414\n          1.414-4.242 4.242-1.414-1.414 4.242-4.242zm-41.345-.747l4.242 4.242-1.414 1.415-4.243-4.243 1.415-1.414zm31.565-6.523l1.732 1-3 5.196-1.732-1 3-5.196zm-22.268 0l3\n          5.196-1.732 1-3-5.196 1.732-1zM41 22v6h-2v-6h2z\"\n        />\n        <path\n          fill={props.theme.colors.mainColor}\n          d=\"M36.207 23.447l7.045 31.628c.131.589.02 1.205-.307 1.712l-.461.713.84 4.378c.194 1.016-.457\n          2.002-1.468 2.222-.035.008-.07.014-.105.02-.955.147-1.849-.507-1.996-1.462l-.759-4.915-.8-.94c-.326-.38-.514-.858-.537-1.358l-1.452-31.998zm4.408\n          28.255c-.882-.236-1.794.31-2.038 1.22-.244.91.273 1.839 1.155 2.075.882.236 1.794-.31 2.038-1.22.244-.91-.273-1.839-1.155-2.075zM38 10H42V14H38z\"\n        />\n        <g transform=\"rotate(30 64.567 14.928)\">\n          <use fill={props.theme.colors.mainColor} xlinkHref=\"#path-1\" />\n          <use fill=\"#000\" fillOpacity=\".1\" xlinkHref=\"#path-1\" />\n        </g>\n        <use fill={props.theme.colors.mainColor} xlinkHref=\"#path-2\" />\n        <use fill=\"#000\" fillOpacity=\".1\" xlinkHref=\"#path-2\" />\n      </g>\n    </g>\n  </Figure>\n);\n\nexport default withTheme(TimeOut);\n","import styled from 'styled-components';\nimport { Button } from 'components/common';\nimport buttonDefaultStyle from 'components/mixins/normalize';\nimport media from 'components/mixins/media';\nimport { secondaryFontH1, secondaryFontSmallText } from 'components/mixins/typography';\nimport { transparentize } from 'utils/color';\n\nexport const TimedOutWrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  z-index: 1;\n`;\n\nexport const TitleElement = styled.h1`\n  ${secondaryFontH1}\n  font-weight: normal;\n  line-height: 44px;\n  text-align: center;\n  margin-top: 55px;\n  margin-bottom: 28px;\n`;\n\nexport const DescriptionWrapper = styled.p`\n  ${secondaryFontSmallText}\n  display: flex;\n  flex-direction: column;\n  flex: 0 0 auto;\n  margin-bottom: 40px;\n  font-weight: normal;\n  ${media.xlarge`\n    font-size: 14px;\n    line-height: 22px;\n  `};\n`;\n\nexport const ButtonElement = styled(Button)`\n  ${buttonDefaultStyle};\n  flex: 0 0 auto;\n  width: 227px;\n  background-color: ${props => props.theme.colors.mainColor};\n  font-size: 14px;\n  margin-bottom: 24px;\n  &:hover {\n    background-color: ${props => transparentize(props.theme.colors.mainColor, 0.9)};\n  }\n  &:focus {\n    outline: 1px solid black;\n    background-color: ${props => transparentize(props.theme.colors.mainColor, 0.9)};\n  }\n\n  &.js-focus-visible :focus:not(.focus-visible) {\n    outline: none;\n  }\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { RootAppState } from 'store/types';\nimport { localize } from 'core/localization';\nimport { withRouter } from 'react-router-dom';\nimport { CssAnimation } from 'components/common';\nimport { BUTTON } from 'constants/components';\nimport withNavigation from 'components/hocs/withNavigation';\nimport { RESULTS_PATH } from 'constants/navigation';\nimport TimeOut from 'assets/figures/TimeOut';\nimport * as courseTimerActions from 'store/timer/actions';\nimport { TimerStatus } from 'constants/timer';\nimport { shouldSubmitAllQuestions } from 'store/settings/selectors';\nimport { getCourseStructure } from 'store/course/selectors';\nimport { getUnansweredQuestions } from 'store/questions/selectors';\nimport * as treeOfContentActions from 'store/treeOfContent/actions';\nimport * as courseQuestionActions from 'store/questions/actions';\nimport { CourseStructure } from 'components/timer/types';\nimport {\n  DescriptionWrapper,\n  TitleElement,\n  TimedOutWrapper,\n  ButtonElement\n} from './TimedOut.styled';\n\ntype TimedOutProps = {\n  closePopup(): void;\n  navigateToUrl(url: string): void;\n  submitAllQuestionsEnabled: boolean;\n  unansweredQuestions: any[];\n  courseStructure: CourseStructure;\n  timerActions: { [key: string]: any };\n  tocActions: { [key: string]: any };\n  questionActions: { [key: string]: any };\n  courseActions: { [key: string]: any };\n  popupSettings: { [key: string]: any };\n};\n\nconst updateUnAnsweredQuestions = (\n  submitAllQuestionsEnabled: boolean,\n  unansweredQuestions: any[],\n  questionActions: { [key: string]: any },\n  tocActions: { [key: string]: any },\n  courseStructure: CourseStructure\n) => {\n  if (submitAllQuestionsEnabled) {\n    tocActions.submitAllAnswerOnce(courseStructure.sections);\n  } else {\n    unansweredQuestions.forEach(({ id }: any) => {\n      questionActions.answer(id);\n    });\n  }\n};\n\nexport const TimedOut: React.FunctionComponent<TimedOutProps> = (props: TimedOutProps) => {\n  const {\n    submitAllQuestionsEnabled,\n    unansweredQuestions,\n    courseStructure,\n    questionActions,\n    timerActions,\n    tocActions,\n    closePopup,\n    navigateToUrl\n  } = props;\n\n  const goToResults = async () => {\n    timerActions.setTimerStatus(TimerStatus.STOPPED);\n    updateUnAnsweredQuestions(\n      submitAllQuestionsEnabled,\n      unansweredQuestions,\n      questionActions,\n      tocActions,\n      courseStructure\n    );\n    closePopup();\n    navigateToUrl(RESULTS_PATH);\n  };\n\n  return (\n    <CssAnimation type={CssAnimation.AnimationType.fadeInDown}>\n      <TimedOutWrapper>\n        <TimeOut />\n        <TitleElement>{localize('[timed out title]')}</TitleElement>\n        <DescriptionWrapper>{localize('[timed out description]')}</DescriptionWrapper>\n        <ButtonElement layout={BUTTON.LAYOUT.PRIMARY} onClick={goToResults}>\n          {localize('[go to results]')}\n        </ButtonElement>\n      </TimedOutWrapper>\n    </CssAnimation>\n  );\n};\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    submitAllQuestionsEnabled: shouldSubmitAllQuestions(state),\n    courseStructure: getCourseStructure(state),\n    unansweredQuestions: getUnansweredQuestions(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    timerActions: bindActionCreators(courseTimerActions, dispatch),\n    tocActions: bindActionCreators(treeOfContentActions, dispatch),\n    questionActions: bindActionCreators(courseQuestionActions, dispatch)\n  };\n}\n\nexport default withRouter(withNavigation(connect(mapStateToProps, mapDispatchToProps)(TimedOut)));\n","import { ProgressStatus } from 'constants/progressStatus';\n\nconst verbsObject: Record<ProgressStatus, string> = {\n  [ProgressStatus.PASSED]: '[passed]',\n  [ProgressStatus.FAILED]: '[not passed]',\n  [ProgressStatus.IN_PROGRESS]: '[not passed yet]'\n};\n\nexport const getProgressStatusLocalizationKey = (status: number) => {\n  return verbsObject[status as ProgressStatus];\n};\n","import styled from 'styled-components';\nimport media from 'components/mixins/media';\nimport { secondaryFont, mainFontText } from 'components/mixins/typography';\nimport { Icon, Text, ProgressBar as ProgressComponent } from 'components/common';\n\nexport const ProgressBar = styled(ProgressComponent)`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n`;\n\nexport const SectionContentWrapper = styled.section`\n  position: relative;\n  flex: 1 1 auto;\n  width: 100%;\n  height: inherit;\n  min-width: 0;\n  padding: 20px 30px 35px;\n  ${media.large`\n    padding: 20px 30px;\n  `};\n  ${media.mobile`\n    margin-top: 25px;\n    padding: 0 0 50px;\n  `};\n`;\n\nexport const SectionTitle = styled(Text)`\n  height: 85px;\n  max-height: 85px;\n  ${mainFontText}\n  color: ${props => props.theme.colors.textColor};\n  text-decoration: none;\n  font-style: normal;\n  && {\n    font-size: 22px;\n  }\n  &.section-title {\n    line-height: 1.3;\n  }\n  overflow: hidden;\n\n  ${media.medium`\n    font-size: 20px;\n  `}\n\n  ${media.mobile`\n    height: initial;\n    max-height: initial;\n    padding: 0 30px 50px;\n  `};\n`;\n\nexport const SectionSubText = styled(Text)`\n  font-size: 11px;\n`;\n\nexport const IconArrowRight = styled(Icon)`\n  margin-left: 8px;\n`;\n\nexport const Footer = styled.footer`\n  position: absolute;\n  right: 30px;\n  left: 30px;\n  bottom: 15px;\n  display: flex;\n  justify-content: flex-end;\n  font-weight: 600;\n  font-size: 12px;\n  ${secondaryFont};\n  opacity: 1;\n  transition: bottom 0.2s, opacity 0.2s;\n  &.hover-state {\n    bottom: 0;\n    justify-content: flex-end;\n    align-items: center;\n    opacity: 0;\n  }\n  ${media.mobile`\n    right: auto;\n    bottom: 60px;\n    &.hover-state {\n      bottom: -24px;\n    }\n  `};\n`;\n\nconst getColor = (props: any) =>\n  props.isPassed && !props.isOverallMasteryScore\n    ? props.theme.colors.correctColor\n    : props.theme.colors.textColor;\n\ntype SectionProgressStatusWrapperProps = {\n  isPassed: boolean;\n  isOverallMasteryScore: boolean;\n};\nexport const SectionProgressStatusWrapper = styled.div<SectionProgressStatusWrapperProps>`\n  display: flex;\n  align-items: center;\n  color: ${props => getColor(props)};\n  opacity: ${props => (props.isPassed && !props.isOverallMasteryScore ? 1 : 0.4)};\n\n  ${SectionSubText} {\n    color: ${props => getColor(props)};\n  }\n`;\n\ntype SectionProgressStatusIconWrapperProps = {\n  isPassed: boolean;\n};\nexport const SectionProgressStatusIconWrapper = styled.span<SectionProgressStatusIconWrapperProps>`\n  display: ${props => (props.isPassed ? 'flex' : 'none')};\n  align-items: center;\n  justify-content: center;\n  width: 16px;\n  height: 16px;\n  margin-right: 8px;\n  font-size: 5px;\n  color: ${props => props.theme.colors.buttonTextColor};\n  background-color: ${props => props.theme.colors.correctColor};\n  border-radius: 50%;\n`;\n","import styled, { css } from 'styled-components';\nimport buttonDefaultStyle from 'components/mixins/normalize';\nimport { transparentize } from 'utils/color';\nimport media from 'components/mixins/media';\nimport { defaultBoxShadowColor } from 'constants/common';\nimport { Footer, SectionSubText } from '../SectionContent/SectionContent.styled';\n\nexport const SectionsList = styled.ul.attrs(props => ({\n  'data-test': 'sections-list'\n}))`\n  display: flex;\n  flex-flow: column nowrap;\n`;\n\ntype SectionsListItemProps = {\n  isDummy?: boolean;\n};\nexport const SectionsListItem = styled.li<SectionsListItemProps>`\n  position: relative;\n  bottom: 0;\n  width: 100%;\n  max-width: 880px;\n  margin: 0 auto 40px;\n  padding: 0;\n\n  ${media.mobile`\n    height: auto;\n    padding: 0 30px;\n  `};\n\n  ${props =>\n    props.isDummy &&\n    css`\n      background-color: ${props.theme.colors.textColor};\n      opacity: 0.02;\n      ${media.mobile`\n        display: none;\n      `};\n    `};\n\n  ${props =>\n    !props.isDummy &&\n    css`\n      transition: bottom 0.1s linear, box-shadow 0.1s linear;\n      &:hover {\n        bottom: 5px;\n        box-shadow: 0 2px 20px 0 ${transparentize(defaultBoxShadowColor, 0.1)});\n      }\n    `};\n  & > .reviewable-container {\n    width: 100%;\n  }\n`;\n\ntype SectionsButtonProps = {\n  tabIndex: number;\n  ariaLabel: string;\n  isDummy: boolean;\n  isPassed: boolean;\n  isOverallMasteryScore: boolean;\n};\nexport const SectionsButton = styled.button.attrs((props: SectionsButtonProps) => ({\n  tabIndex: props.tabIndex,\n  'aria-label': props.ariaLabel,\n  disabled: props.isDummy,\n  'aria-hidden': props.isDummy\n}))<SectionsButtonProps>`\n  ${buttonDefaultStyle};\n  position: relative;\n  bottom: 0;\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  max-width: 880px;\n  height: 140px;\n  margin: 0 auto;\n  padding: 0;\n  background-color: ${props => props.theme.colors.textColor};\n  text-align: left;\n  opacity: 0.02;\n\n  &:focus {\n    outline: 1px solid black;\n  }\n  &:focus:not(:focus-visible) {\n    outline: none;\n  }\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n  ${media.mobile`\n    align-items: initial;\n    flex-direction: column;\n    height: auto;\n    padding: 30px 0 0;\n  `};\n\n  ${props =>\n    props.isDummy &&\n    media.mobile`\n      display: none;\n    `};\n\n  ${props =>\n    !props.isDummy &&\n    css`\n      box-shadow: 0 2px 10px 0 ${transparentize(defaultBoxShadowColor, 0.1)};\n      transition: bottom 0.1s linear, box-shadow 0.1s linear;\n      background-color: ${props.theme.colors.contentBodyColor};\n      opacity: 1;\n      cursor: pointer;\n      ${SectionSubText} {\n        color: ${props.isPassed && !props.isOverallMasteryScore\n          ? props.theme.colors.correctColor\n          : props.theme.colors.textColor};\n      }\n      &:hover ${Footer}, &:focus ${Footer} {\n        bottom: 0;\n        opacity: 0;\n        &.hover-state {\n          bottom: 15px;\n          opacity: 1;\n        }\n        ${media.mobile`\n          bottom: 60px;\n          opacity: 1;\n          &.hover-state {\n            opacity: 0;\n            bottom: 0;\n          }\n        `};\n      }\n    `};\n`;\n","import styled from 'styled-components';\nimport { Text, Icon, Button } from 'components/common';\nimport { transparentize } from 'utils/color';\nimport * as typography from 'components/mixins/typography';\nimport media from 'components/mixins/media';\n\nexport const CollapseWrapper = styled.div`\n  ${typography.secondaryFontText};\n  background: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n  border-left: 2px solid ${props => props.theme.colors.mainColor};\n  position: relative;\n  font-size: 12px;\n  ${media.mobile`\n    margin-top: -40px;\n  `};\n`;\n\nexport const CollapseInnerWrapper = styled.div`\n  padding: 34px;\n`;\n\nexport const CollapseButton = styled(Button)`\n  position: absolute;\n  display: block;\n  top: 100px;\n  left: 135px;\n  padding: 6px 15px 10px;\n  border: 0;\n  opacity: 0.5;\n  background: none;\n  user-select: none;\n  transition: opacity 0.2s;\n  cursor: pointer;\n  height: 40px;\n\n  &:focus {\n    outline: 1px solid black;\n  }\n\n  &:focus:not(:focus-visible) {\n    outline: none;\n  }\n\n  &:hover {\n    opacity: 1;\n  }\n\n  &:hover,\n  &:focus {\n    background: none;\n  }\n\n  ${media.tablet`\n    left: 117px;\n    padding: 6px 15px 10px 32px;\n  `};\n  ${media.mobile`\n    position: relative;\n    top: -55px;\n    left: 30px;\n    padding: 0;\n  `};\n\n  > span {\n    display: flex;\n  }\n`;\n\nexport const ButtonText = styled(Text)`\n  font-family: ${props => props.theme.fonts.secondaryFont.fontFamily};\n  color: ${props => props.theme.colors.textColor};\n  font-size: 12px;\n  font-weight: bold;\n  line-height: 20px !important;\n`;\n\nexport const IconClose = styled(Icon)`\n  position: absolute;\n  top: 17px;\n  right: 17px;\n  padding: 10px;\n  opacity: 0.5;\n  transition: opacity 0.2s;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 1;\n  }\n\n  &:focus {\n    outline: 1px solid black;\n  }\n\n  &:focus:not(:focus-visible) {\n    outline: none;\n  }\n`;\n\nexport const IconCircleObjective = styled(Icon)`\n  font-size: 12px;\n  margin-right: 5px;\n  line-height: 20px;\n`;\n\nexport const LearningObjectiveText = styled(Text)`\n  ${typography.secondaryFontText};\n  padding-bottom: 8px;\n  font-size: 12px;\n  font-weight: 600;\n`;\n\nexport const CollapseContent = styled(Text)`\n  ${typography.secondaryFontText};\n  font-size: 12px;\n  line-height: 1.92;\n`;\n","import * as React from 'react';\nimport { localize } from 'core/localization';\nimport { Collapse } from 'components/common';\n\nimport { KEYS } from 'constants/common';\nimport {\n  CollapseWrapper,\n  CollapseInnerWrapper,\n  CollapseButton,\n  ButtonText,\n  IconCircleObjective,\n  IconClose,\n  LearningObjectiveText,\n  CollapseContent\n} from './SectionLearningObjective.styled';\n\ntype SectionLearningObjectiveProps = {\n  learningObjective: string;\n};\n\ntype SectionLearningObjectiveState = {\n  isExpanded: boolean;\n};\n\nclass SectionLearningObjective extends React.Component<\n  SectionLearningObjectiveProps,\n  SectionLearningObjectiveState\n> {\n  constructor(props: SectionLearningObjectiveProps) {\n    super(props);\n    this.state = { isExpanded: false };\n  }\n\n  toggleExpanded = () => {\n    this.setState((prevState: SectionLearningObjectiveState) => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  onKeyDown = (event: any) => {\n    if (\n      event.key?.toLowerCase() === KEYS.SPACEBAR.toLowerCase() ||\n      event.key?.toLowerCase() === KEYS.ENTER.toLowerCase()\n    ) {\n      event.preventDefault();\n      this.toggleExpanded();\n    }\n  };\n\n  render() {\n    const { isExpanded } = this.state;\n    const { learningObjective } = this.props;\n    return (\n      <React.Fragment>\n        <CollapseButton\n          tabIndex={0}\n          onKeyDown={(event: any) => this.onKeyDown(event)}\n          onClick={() => this.toggleExpanded()}\n        >\n          <IconCircleObjective name=\"circle-objective\" size={11} color=\"textColor\" />\n          <ButtonText>\n            {localize(isExpanded ? '[hide learning objective]' : '[show learning objective]')}\n          </ButtonText>\n        </CollapseButton>\n\n        <CollapseWrapper>\n          <Collapse isExpanded={isExpanded}>\n            <CollapseInnerWrapper>\n              <IconClose\n                role=\"button\"\n                tabIndex={0}\n                onKeyDown={(event: any) => this.onKeyDown(event)}\n                onClick={() => this.toggleExpanded()}\n                name=\"close\"\n                size={7}\n                color=\"textColor\"\n              />\n              <LearningObjectiveText appearance={'p'}>\n                {localize('[learning objective]')}\n              </LearningObjectiveText>\n              <CollapseContent appearance={'p'}>{learningObjective}</CollapseContent>\n            </CollapseInnerWrapper>\n          </Collapse>\n        </CollapseWrapper>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SectionLearningObjective;\n","export const getImageDimensions = (url: string) =>\n  new Promise((resolve, reject) => {\n    let img = new Image(); // eslint-disable-line no-undef\n\n    img.onload = loadHandler;\n    img.onerror = errorHandler;\n    img.src = url;\n\n    function loadHandler(this: any) {\n      resolve({ width: this.width, height: this.height });\n    }\n    function errorHandler() {\n      reject(new Error(`Can't load image by url ${url}`));\n    }\n  });\n\nexport const getThumbnailUrl = (url: string, width: number, height: number) => `${url}?width=${width}&height=${height}`;\n\nexport const getImageNameByUrl = (url: string) => {\n  let imageName = url.substring(url.indexOf('image/') + 6);\n  imageName = imageName.substring(\n    0,\n    imageName.length - (imageName.length - imageName.indexOf('?width'))\n  );\n  return imageName;\n};\n","import styled from 'styled-components';\nimport media from 'components/mixins/media';\nimport { MEDIA_XSMALL } from 'constants/common';\nimport { transparentize } from 'utils/color';\n\ntype ContainerProps = {\n  isBgColorTransparent?: boolean;\n}\nexport const Container = styled.figure<ContainerProps>`\n  flex: 0 0 auto;\n  width: 120px;\n  height: inherit;\n  background-color: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n  ${media.mobile`\n    width: 100%;\n    height: 170px;\n    padding: 0 30px;\n    background: transparent;\n  `};\n  @media (max-width: ${MEDIA_XSMALL + 55}px) {\n    width: 100%;\n    height: 130px;\n  }\n`;\n\ntype BackgroundImageProps = {\n  bgSize: any;\n  url: string;\n}\n\nexport const BackgroundImage = styled.div<BackgroundImageProps>`\n  width: 100%;\n  height: 100%;\n  background-size: ${props => (props.bgSize ? props.bgSize : 'initial')};\n  background-position: 50% 50%;\n  background-repeat: no-repeat;\n  background-image: url(${props => props.url});\n`;\n\nexport const DefaultSectionImage = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const DefaultSectionImageIcon = styled.div`\n  font-size: 30px;\n  color: ${props => props.theme.colors.textColor};\n  opacity: 0.3;\n`;\n","import * as React from 'react';\nimport { imageResizerQueryPattern, supportedBgSizes } from 'constants/common';\nimport { getImageDimensions, getThumbnailUrl } from 'utils/image';\nimport { Container, BackgroundImage } from './SectionImage.styled';\n\ntype SectionImageProps = {\n  imageUrl: string\n};\n\ntype SectionImageState = {\n  bgSize: any;\n  isImageLoading: boolean;\n  imageUrl: string;\n}\n\nexport class SectionImage extends React.Component<SectionImageProps, SectionImageState> {\n  isUnmounted: boolean;\n  imageDimensions: any;\n\n  constructor(props: SectionImageProps) {\n    super(props);\n    this.isUnmounted = false;\n    this.imageDimensions = {\n      width: 255,\n      height: 170\n    };\n    this.state = {\n      bgSize: supportedBgSizes.initial,\n      isImageLoading: true,\n      imageUrl: props.imageUrl\n    };\n  }\n\n  _getOriginalImageUrl() {\n    const { imageUrl } = this.props;\n    let originalImage = imageUrl;\n    const coincidences = imageResizerQueryPattern.exec(imageUrl);\n    if (coincidences && coincidences.length) {\n      originalImage = imageUrl.substring(0, coincidences.index);\n    }\n    return originalImage;\n  }\n\n  async getBgProps() {\n    try {\n      const { width, height } = this.imageDimensions;\n      let imageUrl = this._getOriginalImageUrl();\n      const size: any = await getImageDimensions(imageUrl);\n      let bgSize = 'initial';\n      if (size.width >= width || size.height >= height) {\n        imageUrl = getThumbnailUrl(imageUrl, width, height);\n        bgSize = 'contain';\n      }\n      if (size.width >= width && size.height >= height) {\n        imageUrl += '&scaleBySmallerSide=true';\n        bgSize = 'cover';\n      }\n\n      if (!this.isUnmounted) {\n        this.setState({ bgSize, isImageLoading: false, imageUrl });\n      }\n    } catch (e) {\n      if (!this.isUnmounted) {\n        this.setState({ bgSize: supportedBgSizes.initial, isImageLoading: false });\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.getBgProps();\n  }\n\n  componentWillUnmount() {\n    this.isUnmounted = true;\n  }\n\n  render() {\n    const { bgSize, isImageLoading, imageUrl } = this.state;\n    if (isImageLoading) {\n      return <Container />;\n    }\n    return (\n      <Container isBgColorTransparent>\n        <BackgroundImage url={imageUrl} bgSize={bgSize} />\n      </Container>\n    );\n  }\n}\n\nexport default SectionImage;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getProgressStatusLocalizationKey } from 'utils/localization';\nimport { isPassed, isFailed } from 'utils/comparison';\nimport { localize } from 'core/localization';\nimport { ShapedIcon } from 'components/common';\nimport { isOverallMasteryScore, shouldSubmitAllQuestions } from 'store/settings/selectors';\nimport { isAttemptSubmitted } from 'store/course/selectors';\nimport {\n  SectionContentWrapper,\n  SectionTitle,\n  Footer,\n  SectionProgressStatusIconWrapper,\n  SectionProgressStatusWrapper,\n  SectionSubText,\n  ProgressBar,\n  IconArrowRight\n} from './SectionContent.styled';\nimport { RootAppState } from 'store/types';\n\nexport const LIST_ITEM_TITLE_LENGTH = 45;\n\ntype SectionContentProps = {\n  progress: number;\n  title: string;\n  status: number;\n  affectsProgress?: boolean;\n  isSubmitAtOnce?: boolean;\n  isCourseSubmitted?: boolean;\n  affectProgressQuestionsCountInSection?: number;\n  answeredSectionQuestionsCount?: number;\n  correctlyAffectProgressQuestionsCountInSection?: number;\n  sectionProgress?: number;\n  isCourseProgress: boolean;\n};\n\nfunction SectionContent({\n  title,\n  status,\n  progress,\n  affectsProgress,\n  isSubmitAtOnce,\n  isCourseSubmitted,\n  affectProgressQuestionsCountInSection,\n  answeredSectionQuestionsCount = 0,\n  correctlyAffectProgressQuestionsCountInSection,\n  sectionProgress = 0,\n  isCourseProgress\n}: SectionContentProps) {\n  const maxLength = LIST_ITEM_TITLE_LENGTH;\n  const isSectionPassed = isPassed(status);\n  const isSectionFailed = isFailed(status);\n  return (\n    <SectionContentWrapper>\n      <SectionTitle maxLength={maxLength} appearance=\"h4\" className=\"section-title\">\n        {title}\n      </SectionTitle>\n      <Footer>\n        {affectsProgress && (\n          <SectionProgressStatusWrapper\n            isPassed={\n              !!(\n                (!isSubmitAtOnce && isSectionPassed) ||\n                (isSubmitAtOnce && isCourseSubmitted && isSectionPassed)\n              )\n            }\n            isOverallMasteryScore={isCourseProgress}\n          >\n            {isSectionPassed && !isCourseProgress && (\n              <SectionProgressStatusIconWrapper\n                isPassed={\n                  !!(\n                    (!isSubmitAtOnce && isSectionPassed) ||\n                    (isSubmitAtOnce && isCourseSubmitted && isSectionPassed)\n                  )\n                }\n              >\n                <ShapedIcon\n                  name=\"ok\"\n                  color=\"buttonTextColor\"\n                  shapeColor=\"correctColor\"\n                  size=\"small\"\n                />\n              </SectionProgressStatusIconWrapper>\n            )}\n            {isSectionFailed && !isCourseProgress && (\n              <ShapedIcon\n                name=\"close\"\n                color=\"textColor\"\n                shapeColor=\"contentBodyColor\"\n                size=\"small\"\n              />\n            )}\n            <SectionSubText>\n              {isSubmitAtOnce\n                ? renderSubmitOnceSectionText(\n                    isCourseProgress,\n                    status,\n                    isCourseSubmitted,\n                    correctlyAffectProgressQuestionsCountInSection,\n                    affectProgressQuestionsCountInSection,\n                    answeredSectionQuestionsCount\n                  )\n                : renderSectionText(\n                    isCourseProgress,\n                    status,\n                    correctlyAffectProgressQuestionsCountInSection,\n                    affectProgressQuestionsCountInSection\n                  )}\n            </SectionSubText>\n          </SectionProgressStatusWrapper>\n        )}\n      </Footer>\n      <Footer className=\"hover-state\">\n        <SectionSubText>{localize('[start section]')}</SectionSubText>\n        <IconArrowRight name=\"arrow-right\" size={8} color=\"textColor\" />\n      </Footer>\n      {isSubmitAtOnce && isCourseSubmitted && <ProgressBar progress={progress} opacity={1.0} />}\n      {isSubmitAtOnce && !isCourseSubmitted && (\n        <ProgressBar progress={sectionProgress} progressColor=\"textColor\" opacity={0.3} />\n      )}\n      {!isSubmitAtOnce && <ProgressBar progress={progress} opacity={1.0} />}\n    </SectionContentWrapper>\n  );\n}\nconst renderSubmitOnceSectionText = (\n  isCourseProgress: boolean,\n  status: number,\n  isCourseSubmitted = false,\n  correctlyAffectProgressQuestionsCountInSection?: number,\n  affectProgressQuestionsCountInSection?: number,\n  answeredSectionQuestionsCount?: number\n) => {\n  if (isCourseProgress) {\n    if (isCourseSubmitted) {\n      return localize('[x y answered correctly]', {\n        countCorrectlyAnsweredQuestionsInSection: correctlyAffectProgressQuestionsCountInSection,\n        countQuestionsInSection: affectProgressQuestionsCountInSection\n      });\n    }\n    return localize('[x y questions answered]', {\n      countAnsweredQuestionsInSection: answeredSectionQuestionsCount,\n      countQuestionsInSection: affectProgressQuestionsCountInSection\n    });\n  }\n  if (isCourseSubmitted) {\n    return localize(getProgressStatusLocalizationKey(status));\n  }\n  return localize('[x y questions answered]', {\n    countAnsweredQuestionsInSection: answeredSectionQuestionsCount,\n    countQuestionsInSection: affectProgressQuestionsCountInSection\n  });\n};\n\nconst renderSectionText = (\n  isCourseProgress: boolean,\n  status: number,\n  correctlyAffectProgressQuestionsCountInSection?: number,\n  affectProgressQuestionsCountInSection?: number\n) => {\n  if (isCourseProgress) {\n    return localize('[x y answered correctly]', {\n      countCorrectlyAnsweredQuestionsInSection: correctlyAffectProgressQuestionsCountInSection,\n      countQuestionsInSection: affectProgressQuestionsCountInSection\n    });\n  } else {\n    return localize(getProgressStatusLocalizationKey(status));\n  }\n};\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    isCourseProgress: isOverallMasteryScore(state),\n    isSubmitAtOnce: shouldSubmitAllQuestions(state),\n    isCourseSubmitted: isAttemptSubmitted(state)\n  };\n}\nexport default connect(mapStateToProps)(SectionContent);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getProgressStatusLocalizationKey } from 'utils/localization';\nimport { isPassed } from 'utils/comparison';\nimport { localize } from 'core/localization';\nimport Reviewable from 'components/review/Reviewable';\nimport { REVIEW_COMMENT_PROPERTIES, REVIEW_COMMENT_TYPES } from 'constants/review';\nimport { RootAppState } from 'store/types';\nimport { isOverallMasteryScore, shouldSubmitAllQuestions } from 'store/settings/selectors';\nimport { isAttemptSubmitted } from 'store/course/selectors';\nimport { SectionsList, SectionsListItem, SectionsButton } from './SectionsList.styled';\nimport SectionLearningObjective from '../SectionLearningObjective';\nimport SectionImage from '../SectionImage';\nimport SectionContent from '../SectionContent';\n\nexport const COUNT_OF_DUMMY_ELEMENTS = 3;\n\nexport const getDummyElements = (length: any) => {\n  let dummyElements: Array<any> = [];\n  if (length < COUNT_OF_DUMMY_ELEMENTS) {\n    dummyElements = Array.from({ length: COUNT_OF_DUMMY_ELEMENTS - length }, (v, index) => (\n      <SectionsListItem key={index + length} isDummy={true} />\n    ));\n  }\n  return dummyElements;\n};\n\ntype SectionsListComponentProps = {\n  sections: Array<any>;\n  navigateToQuestion(id: string, question: string, isCourseOnOnePage: boolean): void;\n  learningObjective?: string;\n  navigateToLearningObjective(id: string, isCourseOnOnePage: boolean): void;\n  isCourseOnOnePage?: boolean;\n  isSubmitAtOnce?: boolean;\n  isCourseSubmitted?: boolean;\n  isCourseProgress?: boolean;\n  setSectionRefs?(ref: any): void;\n};\n\nexport const SectionsListComponent = ({\n  sections,\n  navigateToQuestion,\n  navigateToLearningObjective,\n  isCourseOnOnePage = false,\n  isSubmitAtOnce = false,\n  isCourseSubmitted = false,\n  isCourseProgress = false,\n  setSectionRefs\n}: Readonly<SectionsListComponentProps>) => {\n  const { length } = sections;\n  const dummyElements = getDummyElements(length);\n\n  return (\n    <SectionsList>\n      {sections.map((section, index) => {\n        const questionId = section.questions[0];\n        const {\n          id,\n          imageUrl,\n          status,\n          learningObjective,\n          score,\n          title,\n          affectsProgress,\n          affectProgressQuestionsCountInSection,\n          correctlyAffectProgressQuestionsCountInSection,\n          answeredSectionQuestionsCount,\n          sectionProgress\n        } = section;\n\n        const isSectionPassed = () => {\n          if (isSubmitAtOnce) {\n            return !!(isCourseSubmitted && isPassed(status));\n          }\n          return isPassed(status);\n        };\n\n        return (\n          <SectionsListItem key={index}>\n            <Reviewable\n              context={{\n                type: REVIEW_COMMENT_TYPES.SECTION,\n                property: REVIEW_COMMENT_PROPERTIES.TITLE,\n                id,\n                title\n              }}\n            >\n              <SectionsButton\n                isDummy={false}\n                ariaLabel={`${localize('[aria label start section]')} ${title} ${localize(\n                  getProgressStatusLocalizationKey(status)\n                )}`}\n                isPassed={isSectionPassed()}\n                tabIndex={0}\n                onClick={() =>\n                  learningObjective\n                    ? navigateToLearningObjective(id, isCourseOnOnePage)\n                    : navigateToQuestion(id, questionId, isCourseOnOnePage)\n                }\n                isOverallMasteryScore={isCourseProgress}\n                ref={setSectionRefs}\n              >\n                <SectionImage imageUrl={imageUrl} />\n                <SectionContent\n                  progress={score}\n                  sectionProgress={sectionProgress}\n                  title={title}\n                  status={status}\n                  affectsProgress={affectsProgress}\n                  affectProgressQuestionsCountInSection={affectProgressQuestionsCountInSection}\n                  answeredSectionQuestionsCount={answeredSectionQuestionsCount}\n                  correctlyAffectProgressQuestionsCountInSection={\n                    correctlyAffectProgressQuestionsCountInSection\n                  }\n                />\n              </SectionsButton>\n              {learningObjective && (\n                <SectionLearningObjective learningObjective={learningObjective} />\n              )}\n            </Reviewable>\n          </SectionsListItem>\n        );\n      })}\n      {dummyElements.length !== 0 && dummyElements.map(dummy => dummy)}\n    </SectionsList>\n  );\n};\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    isSubmitAtOnce: shouldSubmitAllQuestions(state),\n    isCourseSubmitted: isAttemptSubmitted(state),\n    isCourseProgress: isOverallMasteryScore(state)\n  };\n}\n\nexport default connect(mapStateToProps)(SectionsListComponent);\n","import styled from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport media from 'components/mixins/media';\nimport { mainFontH1 } from 'components/mixins/typography';\nimport { Text, ProgressBar, ProgressResult } from 'components/common';\nimport { MEDIA_MEDIUM } from 'constants/common';\nimport { getCustomScrollbars } from 'components/mixins/customScrollbars';\nimport Icon from 'components/common/Icon';\n\nexport const Container = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  position: relative;\n  min-width: 0;\n  min-height: 100vh;\n  max-height: 100%;\n  ${props => getCustomScrollbars(props.theme.colors.coverBgOverlayTextColor)};\n  ${media.tablet`\n    height: auto;\n  `};\n  @media (max-width: ${MEDIA_MEDIUM - 24}px) {\n    flex: 0 0 auto;\n    min-height: 0;\n  }\n`;\n\nexport const CourseInfoContainer = styled.div`\n  position: relative;\n  z-index: 10;\n  width: 100%;\n  padding: 56px 80px;\n  ${media.large`\n    padding: 56px 40px;\n  `}\n  ${media.tablet`\n    height: auto;\n  `};\n  ${media.mobile`\n    padding: 80px 30px;\n  `};\n`;\n\nexport const CourseInfoWrapper = styled.div`\n  margin: 0 auto;\n\n  h1 {\n    ${mainFontH1}\n    color: ${props => props.theme.colors.coverBgOverlayTextColor};\n    text-decoration: none;\n    font-style: normal;\n\n    &:first-child {\n      font-size: 48px;\n      line-height: 1.2;\n    }\n  }\n\n  ${media.medium`\n    h1 {\n      &:first-child {\n        padding-right: 22px;\n        font-size: 40px;\n      }\n    }\n  `}\n`;\n\nexport const ContentsContainer = styled.div`\n  width: 100%;\n\n  h2,\n  h3,\n  h4 {\n    margin-top: 0;\n  }\n`;\n\nexport const LogoWrapper = styled.div`\n  margin-bottom: 40px;\n`;\n\ntype CourseLogoType = {\n  logoUrl: string;\n  alt: any;\n};\nexport const CourseLogo = styled.img.attrs((props: CourseLogoType) => ({\n  src: props.logoUrl,\n  alt: props.alt\n}))<CourseLogoType>`\n  max-width: 240px;\n  max-height: 100px;\n\n  ${media.tablet`\n    max-width: 200px;\n    max-height: 80px;\n  `};\n\n  ${media.mobile`\n    max-width: 160px;\n    max-height: 60px;\n  `};\n`;\n\nexport const ProgressSectionsWrapper = styled.div`\n  display: flex;\n  margin-top: 56px;\n  margin-bottom: 8px;\n`;\n\nexport const ProgressPerSection = styled(ProgressBar)`\n  height: 4px;\n  margin: 0 3px;\n  border-radius: 2px;\n  background: ${props => transparentize(props.theme.colors.coverBgOverlayTextColor, 0.1)};\n\n  &:first-of-type {\n    margin-left: 0;\n  }\n\n  &:last-of-type {\n    margin-right: 0;\n  }\n`;\n\nexport const ProgressMasteryScore = styled(ProgressResult)`\n  margin-top: 46px;\n  height: 4px;\n  border-radius: 2px;\n  background: ${props => transparentize(props.theme.colors.coverBgOverlayTextColor, 0.1)};\n`;\n\nexport const ProgressCaption = styled(Text)`\n  padding-top: 4px;\n  display: block;\n  margin-bottom: 44px;\n  font-size: 10px;\n  font-weight: bold;\n  line-height: 1;\n  text-transform: uppercase;\n  color: ${props => props.theme.colors.coverBgOverlayTextColor};\n  opacity: 0.7;\n`;\n\nexport const TimerInfoWrapper = styled.div`\n  display: flex;\n  margin-top: 45px;\n  align-items: center;\n`;\n\nexport const TimerIcon = styled(Icon)`\n  color: ${props => props.theme.colors.coverBgOverlayTextColor};\n  font-size: 18px;\n  margin-right: 12px;\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { isPassed } from 'utils/comparison';\nimport { Text, Separator } from 'components/common';\nimport {\n  getCourseTitle,\n  getCourseIntroductions,\n  getScore,\n  isAttemptSubmitted\n} from 'store/course/selectors';\nimport {\n  getMasteryScoreValue,\n  isOverallMasteryScore,\n  getAlternativeLogo,\n  shouldSubmitAllQuestions,\n  getTimerEnabled,\n  getTimerLimit,\n  isQuestionPoolEnabled\n} from 'store/settings/selectors';\nimport {\n  getAffectProgressSectionsCount,\n  getSectionsPassedCount,\n  getAnsweredSectionsCount\n} from 'store/sections/selectors';\nimport {\n  getAffectProgressQuestionsCount,\n  getAnsweredAffectProgressQuestionsCount,\n  getAnsweredQuestionsProgress\n} from 'store/questions/selectors';\nimport Contents from 'components/contents/Contents';\nimport { localize } from 'core/localization';\nimport Reviewable from 'components/review/Reviewable';\nimport {\n  HINT_FOR_SPOT_COMMENT,\n  REVIEW_COMMENT_PROPERTIES,\n  REVIEW_COMMENT_TYPES\n} from 'constants/review';\nimport { RootAppState } from 'store/types';\nimport { getTimeFromMilliseconds } from 'utils/timer';\nimport {\n  Container,\n  CourseInfoContainer,\n  CourseInfoWrapper,\n  ContentsContainer,\n  LogoWrapper,\n  CourseLogo,\n  ProgressSectionsWrapper,\n  ProgressPerSection,\n  ProgressMasteryScore,\n  ProgressCaption,\n  TimerInfoWrapper,\n  TimerIcon\n} from './CourseInformation.styled';\n\ntype CourseInformationProps = {\n  title?: string;\n  introductions?: Array<string>;\n  sections: Array<any>;\n  courseProgress?: number;\n  masteryScore?: number;\n  isCourseProgress?: boolean;\n  affectProgressSectionsCount?: number;\n  answeredSectionsCount?: number;\n  sectionsPassedCount?: number;\n  reviewMode?: boolean;\n  alternativeLogoUrl: string;\n  isSubmitAtOnce: boolean;\n  affectProgressQuestionsCount: number;\n  affectAnsweredQuestionsCount: number;\n  answeredQuestionsProgress: number;\n  isCourseSubmitted?: boolean;\n  isTimerEnabled: boolean;\n  timeLimit: number;\n  isQuestionPool: boolean;\n};\n\nexport class CourseInformation extends React.Component<CourseInformationProps, {}> {\n  refContainer: any;\n\n  constructor(props: CourseInformationProps) {\n    super(props);\n    this.refContainer = React.createRef();\n  }\n\n  renderCourseTimerInfo = (timeLimit: number) => (\n    <TimerInfoWrapper>\n      <TimerIcon size={18} name=\"timer\" />\n      <Text title={'title'} appearance=\"p\" inverted data-test=\"course-timer-text\">\n        {`${localize('[timer]')}: ${timeLimit} ${localize('[minutes]')}`}\n      </Text>\n    </TimerInfoWrapper>\n  );\n\n  renderProgressCaption = (\n    courseProgress: number,\n    affectAnsweredQuestionsCount: number,\n    affectProgressQuestionsCount: number,\n    isSubmitAtOnce = false,\n    isCourseSubmitted = false\n  ) => {\n    if (isCourseSubmitted) {\n      return localize('[you complete x]', {\n        percentSuccess: courseProgress\n      });\n    }\n    if (isSubmitAtOnce) {\n      return localize('[x out of y questions answered]', {\n        countAnsweredQuestions: affectAnsweredQuestionsCount,\n        countQuestions: affectProgressQuestionsCount\n      });\n    } else {\n      return localize('[you complete x]', {\n        percentSuccess: courseProgress\n      });\n    }\n  };\n\n  getProgress = (): number => {\n    const {\n      isSubmitAtOnce,\n      courseProgress,\n      answeredQuestionsProgress,\n      isCourseSubmitted\n    } = this.props;\n    if (isCourseSubmitted) {\n      return courseProgress as number;\n    }\n    return isSubmitAtOnce ? answeredQuestionsProgress : (courseProgress as number);\n  };\n\n  getBackgroundSettings = () => {\n    const { isSubmitAtOnce, isCourseSubmitted } = this.props;\n\n    if (isCourseSubmitted) {\n      return {\n        opacity: 1.0,\n        progressColor: 'correctColor'\n      };\n    }\n    if (isSubmitAtOnce) {\n      return {\n        opacity: 0.3,\n        progressColor: 'coverBgOverlayTextColor'\n      };\n    } else {\n      return {\n        opacity: 1.0,\n        progressColor: 'correctColor'\n      };\n    }\n  };\n\n  renderMasteryScoreSectionProgress = (\n    isSubmitAtOnce: boolean,\n    courseProgress: number,\n    answeredQuestionsProgress: number,\n    masteryScore: number,\n    isCourseSubmitted = false\n  ) => (\n    <ProgressMasteryScore\n      forwardedRef={this.refContainer}\n      progress={this.getProgress()}\n      passedMark={masteryScore}\n      {...this.getBackgroundSettings()}\n    />\n  );\n\n  render() {\n    const {\n      title,\n      introductions,\n      alternativeLogoUrl,\n      sections,\n      courseProgress = 0,\n      masteryScore = 0,\n      isCourseProgress,\n      sectionsPassedCount,\n      affectProgressSectionsCount = 0,\n      answeredSectionsCount = 0,\n      isSubmitAtOnce,\n      affectProgressQuestionsCount,\n      affectAnsweredQuestionsCount = 0,\n      answeredQuestionsProgress,\n      isCourseSubmitted,\n      isTimerEnabled,\n      timeLimit,\n      isQuestionPool\n    } = this.props;\n\n    return (\n      <Container ref={this.refContainer}>\n        <CourseInfoContainer>\n          <CourseInfoWrapper>\n            <LogoWrapper>\n              <CourseLogo logoUrl={alternativeLogoUrl} alt={localize('[alt logo login]')} />\n            </LogoWrapper>\n            <Reviewable\n              context={{\n                type: REVIEW_COMMENT_TYPES.COURSE,\n                property: REVIEW_COMMENT_PROPERTIES.TITLE\n              }}\n              hintName={HINT_FOR_SPOT_COMMENT}\n            >\n              <Text title={title} appearance=\"h1\" inverted tabIndex={-1} ignoreFocus={true}>\n                {title}\n              </Text>\n            </Reviewable>\n            {affectProgressSectionsCount > 0 ? (\n              <>\n                {isCourseProgress && (\n                  <>\n                    {this.renderMasteryScoreSectionProgress(\n                      isSubmitAtOnce,\n                      courseProgress,\n                      answeredQuestionsProgress,\n                      masteryScore,\n                      isCourseSubmitted\n                    )}\n                    <ProgressCaption data-test=\"progress-caption-text\">\n                      {this.renderProgressCaption(\n                        courseProgress,\n                        affectAnsweredQuestionsCount,\n                        affectProgressQuestionsCount,\n                        isSubmitAtOnce,\n                        isCourseSubmitted\n                      )}\n                    </ProgressCaption>\n                  </>\n                )}\n                {!isCourseProgress && (\n                  <>\n                    {renderSectionProgress(sections, isSubmitAtOnce, isCourseSubmitted)}\n                    <ProgressCaption data-test=\"progress-caption-text\">\n                      {isSubmitAtOnce &&\n                        isCourseSubmitted &&\n                        localize('[x out of y sections passed]', {\n                          countSectionsSuccess: sectionsPassedCount,\n                          countSections: affectProgressSectionsCount\n                        })}\n                      {isSubmitAtOnce &&\n                        !isCourseSubmitted &&\n                        localize('[x out of y sections taken]', {\n                          countSectionsSuccess: answeredSectionsCount,\n                          countSections: affectProgressSectionsCount\n                        })}\n                      {!isSubmitAtOnce &&\n                        localize('[x out of y sections passed]', {\n                          countSectionsSuccess: sectionsPassedCount,\n                          countSections: affectProgressSectionsCount\n                        })}\n                    </ProgressCaption>\n                  </>\n                )}\n              </>\n            ) : (\n              <Separator height={2} opacity={0.3} margin={56} color=\"coverBgOverlayTextColor\" />\n            )}\n            {isTimerEnabled && !isQuestionPool && this.renderCourseTimerInfo(timeLimit)}\n            {renderCourseIntroduction(introductions)}\n          </CourseInfoWrapper>\n        </CourseInfoContainer>\n      </Container>\n    );\n  }\n}\n\nfunction renderSectionProgress(sections: any, isSubmitAtOnce: boolean, isCourseSubmitted = false) {\n  return (\n    <ProgressSectionsWrapper>\n      {sections.map((section: any) => {\n        if (section.affectsProgress) {\n          const { id } = section;\n          if (isPassed(section.status)) {\n            return isSubmitAtOnce ? (\n              renderSubmitAtOnceProgressPerSection(isCourseSubmitted, section, id)\n            ) : (\n              <ProgressPerSection key={id} progress={100} />\n            );\n          } else {\n            return isSubmitAtOnce ? (\n              renderSubmitAtOnceProgressPerSection(isCourseSubmitted, section, id)\n            ) : (\n              <ProgressPerSection key={id} progress={0} />\n            );\n          }\n        }\n        return false;\n      })}\n    </ProgressSectionsWrapper>\n  );\n}\n\nfunction renderSubmitAtOnceProgressPerSection(isCourseSubmitted: boolean, section: any, id: any) {\n  if (isCourseSubmitted) {\n    if (isPassed(section.status)) {\n      return <ProgressPerSection key={id} progress={100} />;\n    }\n    return <ProgressPerSection key={id} progress={0} />;\n  } else {\n    if (section.isSectionAnswered) {\n      return (\n        <ProgressPerSection\n          key={id}\n          progress={100}\n          progressColor=\"coverBgOverlayTextColor\"\n          opacity={0.4}\n        />\n      );\n    }\n    return <ProgressPerSection key={id} progress={0} />;\n  }\n}\n\nfunction renderCourseIntroduction(introductions: any) {\n  return (\n    Array.isArray(introductions) &&\n    introductions.length !== 0 && (\n      <React.Fragment>\n        <Reviewable\n          context={{\n            type: REVIEW_COMMENT_TYPES.COURSE,\n            property: REVIEW_COMMENT_PROPERTIES.INTRODUCTION\n          }}\n        >\n          <ContentsContainer>\n            <Contents inverted items={introductions} linkTabIndex={0} />\n          </ContentsContainer>\n        </Reviewable>\n      </React.Fragment>\n    )\n  );\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    alternativeLogoUrl: getAlternativeLogo(state),\n    title: getCourseTitle(state),\n    introductions: getCourseIntroductions(state),\n    courseProgress: getScore(state),\n    masteryScore: getMasteryScoreValue(state),\n    isCourseProgress: isOverallMasteryScore(state),\n    affectProgressSectionsCount: getAffectProgressSectionsCount(state),\n    sectionsPassedCount: getSectionsPassedCount(state),\n    answeredSectionsCount: getAnsweredSectionsCount(state),\n    affectProgressQuestionsCount: getAffectProgressQuestionsCount(state),\n    affectAnsweredQuestionsCount: getAnsweredAffectProgressQuestionsCount(state),\n    answeredQuestionsProgress: getAnsweredQuestionsProgress(state),\n    isSubmitAtOnce: shouldSubmitAllQuestions(state),\n    isCourseSubmitted: isAttemptSubmitted(state),\n    isTimerEnabled: getTimerEnabled(state),\n    timeLimit: getTimeFromMilliseconds(getTimerLimit(state), 'min') as number,\n    isQuestionPool: isQuestionPoolEnabled(state)\n  };\n}\nexport default connect(mapStateToProps)(CourseInformation);\n","import styled from 'styled-components';\nimport media from 'components/mixins/media';\nimport { transparentize } from 'utils/color';\nimport { defaultBoxShadowColor } from 'constants/common';\nimport { secondaryFont, mainFontText, secondaryFontText } from 'components/mixins/typography';\nimport { Icon, Button } from 'components/common';\n\nexport const QuestionPoolWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-top: 105px;\n\n  ${media.mobile`\n    padding: 40px 30px;\n  `};\n`;\n\nexport const CourseUserTitle = styled.h3.attrs(() => ({\n  'data-test': 'course-user-title'\n}))`\n  ${mainFontText};\n  color: ${props => props.theme.colors.textColor};\n  text-decoration: none;\n  font-style: normal;\n  font-size: 32px;\n  line-height: 1.4;\n  margin-bottom: 20px;\n\n  ${media.mobile`\n    font-size: 30px;\n  `};\n`;\nexport const CourseIntroductionText = styled.p.attrs(() => ({\n  'data-test': 'course-intro'\n}))`\n  ${secondaryFontText};\n`;\nexport const QuestionPoolOptionsList = styled.ul.attrs({\n  'data-test': 'question-pool-options-list'\n})`\n  display: flex;\n  justify-content: space-between;\n  margin: 40px 0 80px;\n\n  ${media.mobile`\n    flex-direction: column;\n    margin-bottom: 20px;\n  `};\n`;\nexport const QuestionPoolOptionListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 32%;\n  min-height: 146px;\n  padding: 24px;\n  border-radius: 24px;\n  box-shadow: 0 4px 16px 0 ${transparentize(defaultBoxShadowColor, 0.06)};\n\n  ${media.mobile`\n    width: 100%;    \n    padding: 20px;\n    margin-bottom: 20px;\n    min-height: 104px;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n  `};\n`;\nexport const QuestionPoolOptionIcon = styled(Icon)``;\nexport const QuestionPoolOptionText = styled.p`\n  ${secondaryFont};\n  display: flex;\n  align-items: center;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.7)};\n  font-size: 18px;\n  line-height: 1;\n  ${media.mobile`\n    margin-left: 20px;\n  `};\n`;\nexport const QuestionPoolSubText = styled.strong`\n  font-size: 26px;\n  font-weight: 600;\n  margin-right: 6px;\n  color: ${props => transparentize(props.theme.colors.textColor, 1)};\n`;\n\ntype CourseStartButtonProps = {\n  tabIndex: string;\n  id: string;\n};\n\nexport const CourseStartButton = styled(Button).attrs((props: CourseStartButtonProps) => ({\n  'data-test': 'course-start-button',\n  tabIndex: props.tabIndex\n}))`\n  align-self: flex-start;\n  margin-top: 40px;\n  font-size: 14px;\n  &:focus {\n    outline: 1px solid black;\n  }\n  &:focus:not(:focus-visible) {\n    outline: none;\n  }\n\n  ${media.mobile`\n    font-size: 14px;\n    line-height: 1;\n    width: 85%;\n    position: fixed;\n    bottom: 5%;\n    margin: 0 auto;\n    align-self: center;\n  `};\n`;\n","import * as React from 'react';\nimport { HTML_INFINITY_SYMBOL } from 'constants/common';\nimport {\n  QuestionPoolOptionIcon,\n  QuestionPoolOptionListItem,\n  QuestionPoolOptionText,\n  QuestionPoolSubText\n} from './QuestionPool.styled';\n\ntype QuestionPoolOptionItemProps = {\n  iconName: string;\n  optionText: string;\n  optionValue: number;\n};\n\nconst wrapText = (text: string) => ({ __html: text });\n\nexport const QuestionPoolOptionItem = ({\n  iconName,\n  optionText,\n  optionValue\n}: QuestionPoolOptionItemProps) => {\n  const optionSubText = `${optionValue === -1 ? HTML_INFINITY_SYMBOL : optionValue}`;\n  return (\n    <QuestionPoolOptionListItem>\n      <QuestionPoolOptionIcon name={iconName} size={40} color=\"mainColor\" />\n      <QuestionPoolOptionText>\n        <QuestionPoolSubText dangerouslySetInnerHTML={wrapText(optionSubText)} />\n        {optionText}\n      </QuestionPoolOptionText>\n    </QuestionPoolOptionListItem>\n  );\n};\nexport default QuestionPoolOptionItem;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  getQuestionPoolSize,\n  getMasteryScoreValue,\n  isAttemptsLimited,\n  getLimitedAttemptsNumber,\n  getTimerEnabled,\n  getTimerLimit,\n  shouldSubmitAllQuestions\n} from 'store/settings/selectors';\nimport { getName } from 'store/user/selectors';\nimport {\n  getQuestions,\n  hasCourseBeenStarted,\n  getLastOpenedQuestion\n} from 'store/questions/selectors';\nimport { getCourseAttempt, isInProgress } from 'store/course/selectors';\nimport { localize } from 'core/localization';\nimport { Separator } from 'components/common';\nimport { RootAppState } from 'store/types';\nimport { getTimeFromMilliseconds } from 'utils/timer';\nimport QuestionPoolOptionItem from './QuestionPoolOptionItem';\nimport {\n  QuestionPoolWrapper,\n  CourseUserTitle,\n  CourseIntroductionText,\n  QuestionPoolOptionsList,\n  CourseStartButton\n} from './QuestionPool.styled';\nimport { SKIP_TO_CONTENT_IDS } from 'constants/common';\n\ntype QuestionPoolProps = {\n  questionPoolSize: number;\n  questions: any[];\n  hasCourseStarted: boolean;\n  isCourseInProgress: boolean;\n  navigateToPreviousPage(): void;\n  isPreviousPageResults(): boolean;\n  navigateToQuestion(id: string, question: string, isCourseOnOnePage: boolean): void;\n  masteryScore?: number;\n  isLimitedAttempts: boolean;\n  limitedAttemptsNumber: number;\n  courseAttempt?: number;\n  userName?: string;\n  isTimerEnabled: boolean;\n  timeLimit?: number;\n  courseAttempts: number;\n  isSubmitAllQuestions: boolean;\n  isCourseOnOnePage: boolean;\n};\n\nexport class QuestionPool extends React.Component<QuestionPoolProps> {\n  getTimerText = (isTimerEnabled: boolean) => {\n    if (isTimerEnabled) {\n      return localize('[min]');\n    }\n    return localize('[time]');\n  };\n\n  getTimer = (isTimerEnabled: boolean, timeLimit = 0) => {\n    if (isTimerEnabled) {\n      return timeLimit;\n    }\n    return -1;\n  };\n\n  continueCourse = () => {\n    const {\n      questions,\n      isCourseInProgress,\n      isPreviousPageResults,\n      navigateToQuestion,\n      navigateToPreviousPage,\n      isCourseOnOnePage\n    } = this.props;\n    if (isPreviousPageResults() && isCourseInProgress) {\n      const { id, sectionId } = getLastOpenedQuestion(questions);\n      navigateToQuestion(sectionId, id, isCourseOnOnePage);\n    } else {\n      navigateToPreviousPage();\n    }\n  };\n\n  startCourse = () => {\n    const { questions, navigateToQuestion, isCourseOnOnePage } = this.props;\n    const questionId = questions[0]?.id;\n    const { sectionId } = questions[0];\n    navigateToQuestion(sectionId, questionId, isCourseOnOnePage);\n  };\n\n  renderCourseIntroductionText = (remainedAttempts: number, isLimitedAttempts: boolean) => {\n    const {\n      questionPoolSize,\n      masteryScore,\n      timeLimit,\n      isTimerEnabled = false,\n      hasCourseStarted\n    } = this.props;\n    const introWithoutTimerAndAttempts = localize(\n      '[question pool introduction text without timer and attempts x y]',\n      {\n        questionPoolSize,\n        masteryScore\n      }\n    );\n    const introWithTimerAndAttempts = localize(\n      '[question pool introduction text with timer and attempts p q r s]',\n      {\n        questionPoolSize,\n        timer: timeLimit,\n        remainedAttempts,\n        masteryScore\n      }\n    );\n    const introWithTimer = localize('[question pool introduction text with timer x y z]', {\n      questionPoolSize,\n      timer: timeLimit,\n      masteryScore\n    });\n    const introWithAttempts = localize('[question pool introduction text with attempts x y z]', {\n      questionPoolSize,\n      remainedAttempts,\n      masteryScore\n    });\n    const timerWillStart = localize('[question pool timer intro text]');\n    const goodLuck = localize('[good luck]');\n\n    const introWithTimerText = () => {\n      if (hasCourseStarted) {\n        return introWithTimer;\n      }\n      return `${introWithTimer} ${timerWillStart} ${goodLuck}`;\n    };\n\n    const introWithAttemptsText = () => {\n      if (hasCourseStarted) {\n        return introWithAttempts;\n      }\n      return `${introWithAttempts} ${goodLuck}`;\n    };\n\n    const introWithTimerAndAttemptsText = () => {\n      if (hasCourseStarted) {\n        return introWithTimerAndAttempts;\n      }\n      return `${introWithTimerAndAttempts} ${timerWillStart} ${goodLuck}`;\n    };\n\n    const introWithoutTimerAndAttemptsText = () => {\n      if (hasCourseStarted) {\n        return introWithoutTimerAndAttempts;\n      }\n      return `${introWithoutTimerAndAttempts} ${goodLuck}`;\n    };\n\n    if (questionPoolSize <= 0) {\n      return '';\n    }\n\n    if (isTimerEnabled && !isLimitedAttempts) {\n      return introWithTimerText();\n    }\n\n    if (isLimitedAttempts && !isTimerEnabled) {\n      return introWithAttemptsText();\n    }\n\n    if (isTimerEnabled && isLimitedAttempts) {\n      return introWithTimerAndAttemptsText();\n    }\n\n    return introWithoutTimerAndAttemptsText();\n  };\n\n  render() {\n    const {\n      questionPoolSize,\n      hasCourseStarted,\n      userName,\n      isTimerEnabled,\n      timeLimit,\n      isLimitedAttempts,\n      limitedAttemptsNumber,\n      courseAttempts,\n      isSubmitAllQuestions\n    } = this.props;\n\n    const getRemainingAttempts = () => {\n      if (isLimitedAttempts) {\n        return isSubmitAllQuestions\n          ? limitedAttemptsNumber - courseAttempts\n          : limitedAttemptsNumber;\n      }\n      return -1;\n    };\n    return (\n      <QuestionPoolWrapper>\n        <CourseUserTitle>Hi {userName === '' ? 'there' : userName},</CourseUserTitle>\n        <CourseIntroductionText>\n          {this.renderCourseIntroductionText(getRemainingAttempts(), isLimitedAttempts)}\n        </CourseIntroductionText>\n        <QuestionPoolOptionsList>\n          <QuestionPoolOptionItem\n            iconName=\"document-alt\"\n            optionValue={questionPoolSize}\n            optionText={localize('[questions]')}\n          />\n          <QuestionPoolOptionItem\n            iconName=\"clock\"\n            optionValue={this.getTimer(isTimerEnabled, timeLimit)}\n            optionText={this.getTimerText(isTimerEnabled)}\n          />\n          <QuestionPoolOptionItem\n            iconName=\"repeat\"\n            optionValue={getRemainingAttempts()}\n            optionText={localize('[attempts]')}\n          />\n        </QuestionPoolOptionsList>\n        <Separator opacity={0.05} color=\"textColor\" height={1} margin={0} />\n        <CourseStartButton\n          id={SKIP_TO_CONTENT_IDS.QUESTION_POOL_START_BUTTON}\n          onClick={hasCourseStarted ? this.continueCourse : this.startCourse}\n          tabIndex={0}\n          disabled={questionPoolSize <= 0}\n        >\n          {hasCourseStarted\n            ? localize('[continue course]')\n            : localize('[course ready to start text]')}\n        </CourseStartButton>\n      </QuestionPoolWrapper>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    timeLimit: getTimeFromMilliseconds(getTimerLimit(state), 'min') as number,\n    questions: getQuestions(state),\n    questionPoolSize: getQuestionPoolSize(state),\n    masteryScore: getMasteryScoreValue(state),\n    hasCourseStarted: hasCourseBeenStarted(state),\n    isCourseInProgress: isInProgress(state),\n    userName: getName(state),\n    isLimitedAttempts: isAttemptsLimited(state),\n    limitedAttemptsNumber: getLimitedAttemptsNumber(state),\n    isTimerEnabled: getTimerEnabled(state),\n    courseAttempts: getCourseAttempt(state),\n    isSubmitAllQuestions: shouldSubmitAllQuestions(state)\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionPool);\n","import styled from 'styled-components';\nimport media from 'components/mixins/media';\nimport { MEDIA_MEDIUM } from 'constants/common';\nimport { getCustomScrollbars } from 'components/mixins/customScrollbars';\nimport { bodyBackground } from 'components/mixins/backgrounds';\nimport { BasicStyledSidebar, PageContent } from 'components/shell/Layout';\n\nexport const SectionsPageContainer = styled.div`\n  height: 100%;\n  overflow-y: auto;\n  ${media.tablet`\n    display: flex;\n    flex-wrap: wrap;\n  `};\n`;\n\nexport const SectionsPageSidebar = styled(BasicStyledSidebar)`\n  ${media.tablet`\n    position: relative;\n    width: 100% !important;\n    left: 0 !important;\n    height: auto;\n    order: 1;\n  `};\n`;\n\ntype SectionsPageContentProps = {\n  background: any;\n};\nexport const SectionsPageContent = styled(PageContent)<SectionsPageContentProps>`\n  position: absolute;\n  top: 0;\n  left: 50%;\n  height: 100%;\n  width: 50%;\n  z-index: 100;\n  overflow-y: auto;\n  ${props => bodyBackground(props.background.body)};\n  ${media.tablet`\n    position: relative;\n    width: 100% !important;\n    left: 0 !important;\n    height: auto;\n    order: 2;\n  `};\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  min-height: 100vh;\n  ${getCustomScrollbars()};\n  @media (max-width: ${MEDIA_MEDIUM - 24}px) {\n    flex-direction: column;\n  }\n`;\n\nexport const SectionListContainer = styled.section`\n  flex: 1 1 50%;\n  height: 100vh;\n  min-width: 0;\n  padding: 100px 80px 30px;\n  ${getCustomScrollbars()};\n  ${media.large`\n    padding: 80px 40px 30px;\n  `};\n  ${media.medium`\n    min-height: 0;\n  `};\n  ${media.small`\n    flex: 0 0 auto;\n    padding: 60px 40px 30px;\n  `};\n  ${media.tablet`\n    height: auto;\n    overflow: initial;\n  `};\n  ${media.mobile`\n    padding: 48px 0 30px;\n  `};\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { getQuestionUrl, getLearningObjectiveUrl } from 'utils/navigation';\nimport withNavigation from 'components/hocs/withNavigation';\nimport {\n  getBackground,\n  isAllQuestionsOnOnePage,\n  getTimerEnabled,\n  getTimerLimit,\n  isQuestionPoolEnabled\n} from 'store/settings/selectors';\nimport { getCourseTitle, getCourseIntroductions } from 'store/course/selectors';\nimport {\n  getSections,\n  affectsProgress,\n  getAffectProgressQuestionsCountInSection,\n  getAnsweredSectionQuestionsCount,\n  getCorrectlyAffectProgressQuestionsCountInSection\n} from 'store/sections/selectors';\nimport SectionsListComponent from 'components/sections/SectionsList';\nimport CourseInformation from 'components/sections/CourseInformation';\nimport QuestionPool from 'components/sections/QuestionPool/QuestionPool';\nimport { localize } from 'core/localization';\nimport { RootAppState } from 'store/types';\nimport * as courseTimerActions from 'store/timer/actions';\nimport { getTimeFromMilliseconds } from 'utils/timer';\nimport { getTimerElapsed, getTimerStatus } from 'store/timer/selectors';\nimport * as courseQuestionActions from 'store/questions/actions';\nimport { TimerStatus } from 'constants/timer';\nimport {\n  SectionsPageContainer,\n  SectionListContainer,\n  SectionsPageSidebar,\n  SectionsPageContent\n} from './SectionsPage.styled';\n\nimport * as navigationActions from '../../../store/navigation/actions';\nimport SkipToContent from '../../../components/common/SkipToContent';\nimport { SKIP_TO_CONTENT_IDS } from 'constants/common';\nimport { getPopupVisibility } from '../../../store/popup/selectors';\n\ntype SectionsProps = {\n  sections: any[];\n  navigateToUrl(url: string): void;\n  navigateToPrevPage(): void;\n  isPreviousPageResults(): boolean;\n  updateClickedID(url: string): void;\n  isAccessLimited: boolean;\n  theme: { [key: string]: any };\n  background: { [key: string]: any };\n  title: string;\n  isQuestionPool: boolean;\n  scrollToId(id: string): void;\n  isCourseOnOnePage: boolean;\n  navigateToOnePage(id: string): void;\n  timerActions: { [key: string]: any };\n  questionActions: { [key: string]: any };\n  isTimerEnabled: boolean;\n  timerStatus: TimerStatus;\n  timeLimit: number;\n  timeElapsed: number;\n  popupExpanded: boolean;\n};\n\nexport class Sections extends React.Component<SectionsProps, {}> {\n  sectionRefs: { [key: string]: any };\n  questionPoolButtonRef: any;\n\n  constructor(props: SectionsProps) {\n    super(props);\n    this.sectionRefs = [];\n    this.questionPoolButtonRef = React.createRef();\n  }\n\n  setSectionRefs = (ref: any) => {\n    this.sectionRefs.push(ref);\n  };\n\n  focusFirstSection = () => this.sectionRefs[0].focus();\n\n  focusQuestionPoolButton = () => {\n    const element = document.getElementById(SKIP_TO_CONTENT_IDS.QUESTION_POOL_START_BUTTON);\n    if (element) {\n      element.focus();\n    }\n  };\n\n  focusElement = () => {\n    const { isQuestionPool } = this.props;\n    return isQuestionPool ? this.focusQuestionPoolButton() : this.focusFirstSection();\n  };\n\n  navigateToQuestion = (sectionId: string, questionId: string, isCourseOnOnePage: boolean) => {\n    const { isTimerEnabled, timerActions, questionActions, timeElapsed, timerStatus } = this.props;\n    if (\n      isTimerEnabled &&\n      (timerStatus === TimerStatus.NOT_STARTED || timerStatus === TimerStatus.RESET)\n    ) {\n      timerActions.startTimer();\n      timerActions.setTimerElapsed(timeElapsed);\n    }\n    if (isCourseOnOnePage) {\n      this.props.navigateToUrl(getQuestionUrl(sectionId, questionId));\n      this.props.scrollToId(questionId);\n      questionActions.markAsOpened(questionId);\n    } else {\n      this.props.navigateToUrl(getQuestionUrl(sectionId, questionId));\n    }\n  };\n\n  navigateToLearningObjective = (sectionId: string, isCourseOnOnePage: boolean) => {\n    if (isCourseOnOnePage) {\n      this.props.navigateToUrl(getLearningObjectiveUrl(sectionId));\n      this.props.scrollToId(sectionId);\n    } else {\n      this.props.navigateToUrl(getLearningObjectiveUrl(sectionId));\n    }\n  };\n\n  navigateToPrevPage = () => {\n    const { navigateToPrevPage } = this.props;\n    navigateToPrevPage();\n  };\n\n  renderQuestionPoolComponent = () => {\n    const { isCourseOnOnePage } = this.props;\n    return (\n      <QuestionPool\n        navigateToQuestion={this.navigateToQuestion}\n        navigateToPreviousPage={this.navigateToPrevPage}\n        isPreviousPageResults={this.props.isPreviousPageResults}\n        isCourseOnOnePage={isCourseOnOnePage}\n      />\n    );\n  };\n\n  renderSectionsListComponent = () => {\n    const { sections, isCourseOnOnePage } = this.props;\n    return (\n      <SectionsListComponent\n        sections={sections}\n        navigateToQuestion={this.navigateToQuestion}\n        navigateToLearningObjective={this.navigateToLearningObjective}\n        isCourseOnOnePage={isCourseOnOnePage}\n        setSectionRefs={this.setSectionRefs}\n      />\n    );\n  };\n\n  componentDidMount() {\n    document.title = `${localize('[section page title]')} | ${this.props.title}`;\n  }\n\n  render() {\n    const { sections, background, isQuestionPool, popupExpanded } = this.props;\n    return (\n      <>\n        {!popupExpanded && <SkipToContent onClick={this.focusElement} />}\n        <SectionsPageContainer>\n          {sections.length > 0 && (\n            <SectionsPageContent background={background}>\n              <SectionListContainer>\n                {isQuestionPool\n                  ? this.renderQuestionPoolComponent()\n                  : this.renderSectionsListComponent()}\n              </SectionListContainer>\n            </SectionsPageContent>\n          )}\n          <SectionsPageSidebar background={background}>\n            <CourseInformation sections={sections} />\n          </SectionsPageSidebar>\n        </SectionsPageContainer>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    title: getCourseTitle(state),\n    introductions: getCourseIntroductions(state),\n    sections: getSections(state).map(section => ({\n      ...section,\n      affectsProgress: affectsProgress(state, section.id),\n      affectProgressQuestionsCountInSection: getAffectProgressQuestionsCountInSection(\n        state,\n        section.id\n      ),\n      answeredSectionQuestionsCount: getAnsweredSectionQuestionsCount(state, section.id),\n      correctlyAffectProgressQuestionsCountInSection: getCorrectlyAffectProgressQuestionsCountInSection(\n        state,\n        section.id\n      )\n    })),\n    background: getBackground(state),\n    isQuestionPool: isQuestionPoolEnabled(state),\n    isCourseOnOnePage: isAllQuestionsOnOnePage(state),\n    timeLimit: getTimeFromMilliseconds(getTimerLimit(state), 'min') as number,\n    timerStatus: getTimerStatus(state),\n    isTimerEnabled: getTimerEnabled(state),\n    timeElapsed: getTimerElapsed(state),\n    popupExpanded: getPopupVisibility(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    navigationActions: bindActionCreators(navigationActions, dispatch),\n    questionActions: bindActionCreators(courseQuestionActions, dispatch),\n    timerActions: bindActionCreators(courseTimerActions, dispatch)\n  };\n}\n\nexport default withNavigation(connect(mapStateToProps, mapDispatchToProps)(Sections));\n","import styled from 'styled-components';\nimport { secondaryFont, mainFont } from 'components/mixins/typography';\nimport Icon from 'components/common/Icon';\nimport { transparentize } from 'utils/color';\nimport { Button, Text } from 'components/common';\n\ntype PopoverContentWrapperProps = {\n  ariaModal: boolean;\n};\nexport const PopoverContentWrapper = styled.div<PopoverContentWrapperProps>`\n  ${secondaryFont};\n  line-height: 2;\n  padding: 4px 6px 6px;\n  text-align: center;\n  outline: none;\n  color: ${props => {\n    return props.theme.colors.textColor;\n  }};\n  font-size: 14px;\n  background: ${props => props.theme.colors.contentBodyColor};\n  max-height: 70vh;\n  overflow: hidden;\n`;\n\nexport const SubmitMessageWrapper = styled.div``;\n\nexport const PopoverContent = styled.div`\n  width: 240px;\n  min-height: 310px;\n  padding: 35px 20px 19px;\n`;\n\nexport const ClosePopoverIcon = styled(Icon)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 24px;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.2)};\n  transition: 0.2s;\n\n  &:hover {\n    color: ${props => props.theme.colors.textColor};\n  }\n`;\n\nexport const PopoverButton = styled(Button)`\n  height: 40px;\n\n  &:first-of-type {\n    margin-bottom: 20px;\n  }\n`;\nexport const PopoverContentHeader = styled(Text)`\n  margin: 24px 0 12px;\n`;\nexport const PopoverContentMessage = styled.span`\n  ${mainFont};\n  font-weight: normal;\n  display: block;\n  margin: 0 0 12px;\n  font-size: 15px;\n  line-height: 1.4;\n  color: ${props => props.theme.colors.textColor};\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { withTheme } from 'styled-components';\nimport { localize } from 'core/localization';\nimport { BUTTON } from 'constants/components';\nimport { Button, Tooltip } from 'components/common';\nimport { getColors } from 'store/settings/selectors';\nimport { isAttemptSubmitted } from 'store/course/selectors';\nimport {\n  getAnsweredAffectProgressQuestionsCount,\n  getAffectProgressQuestionsCount\n} from 'store/questions/selectors';\n\nimport { RootAppState } from 'store/types';\nimport { KEYS } from 'constants/common';\nimport {\n  SubmitMessageWrapper,\n  PopoverContentWrapper,\n  PopoverContent,\n  ClosePopoverIcon,\n  PopoverContentHeader,\n  PopoverContentMessage,\n  PopoverButton\n} from './SubmitOnceButton.styled';\n\ntype SubmitOnceButtonProps = {\n  onClick(): void;\n  isActive: boolean;\n  open: boolean;\n  theme?: any;\n  colors?: { [key: string]: any };\n  showSubmitButton?: boolean;\n  remainingQuestions?: number;\n  affectProgressQuestionsCount?: number;\n  tabIndex: number;\n};\n\ntype SubmitOnceButtonState = {\n  open: boolean;\n};\n\nexport class SubmitOnceButton extends React.PureComponent<\n  SubmitOnceButtonProps,\n  SubmitOnceButtonState\n> {\n  popoverRef: any;\n\n  popoverContentRef: any;\n\n  constructor(props: SubmitOnceButtonProps) {\n    super(props);\n    this.state = { open: false };\n    this.popoverRef = React.createRef();\n    this.popoverContentRef = React.createRef();\n  }\n\n  static defaultProps = {\n    open: false,\n    isActive: false\n  };\n\n  setTooltipAction = (option: any) => {\n    this.setState({\n      open: option\n    });\n  };\n\n  closePopup = () => {\n    this.setTooltipAction(false);\n    setTimeout(() => {\n      this.popoverRef.current.children[0].focus();\n    }, 0);\n  };\n\n  componentDidUpdate() {\n    setTimeout(() => {\n      if (\n        this.state.open &&\n        this.popoverContentRef.current &&\n        this.popoverContentRef.current.children.length\n      ) {\n        this.popoverContentRef.current.children[0].focus();\n      }\n    }, 0);\n  }\n\n  render() {\n    const { open } = this.state;\n    const { isActive, remainingQuestions, showSubmitButton, tabIndex } = this.props;\n    return (\n      <React.Fragment>\n        {isActive &&\n          showSubmitButton &&\n          (remainingQuestions ? (\n            <Tooltip\n              style={{ display: 'block' }}\n              trigger={'click'}\n              open={open}\n              onRequestClose={this.closePopup}\n              position={'top'}\n              tooltipTheme={'light'}\n              arrow={true}\n              interactive\n              html={this.renderPopoverContent()}\n            >\n              <div ref={this.popoverRef}>\n                <Button\n                  tabIndex={tabIndex}\n                  onClick={this.viewAction}\n                  layout={BUTTON.LAYOUT.SECONDARY}\n                  data-test=\"submit-all-answers\"\n                >\n                  {this.submitAllAnswersText()}\n                </Button>\n              </div>\n            </Tooltip>\n          ) : (\n            <Button tabIndex={tabIndex} onClick={this.submitOnce} data-test=\"submit-all-answers\">\n              {this.submitAllAnswersText()}\n            </Button>\n          ))}\n      </React.Fragment>\n    );\n  }\n\n  submitAllAnswersText = () => {\n    return localize('[submit all answers]');\n  };\n\n  handleKeyDown = (evt: any) => {\n    if ([KEYS.ENTER.toLowerCase(), KEYS.ESCAPE.toLowerCase()].includes(evt.key.toLowerCase())) {\n      this.closePopup();\n    }\n  };\n\n  viewAction = () => {\n    const { remainingQuestions } = this.props;\n    if (!remainingQuestions) {\n      this.submitOnce();\n    } else {\n      this.setTooltipAction(true);\n    }\n  };\n\n  toggle = (evt: any) => {\n    if (!evt.key) {\n      const { open } = this.state;\n      this.setTooltipAction(!open);\n    }\n  };\n\n  renderPopoverContent = () => {\n    const templateTheme = this.props.theme;\n    const { remainingQuestions, tabIndex } = this.props;\n    return (\n      <SubmitMessageWrapper>\n        <PopoverContentWrapper\n          id=\"progress-popover\"\n          role=\"dialog\"\n          ariaModal={true}\n          tabIndex={-1}\n          onKeyDown={event => this.handleKeyDown(event)}\n          theme={templateTheme}\n        >\n          <PopoverContent ref={this.popoverContentRef}>\n            <ClosePopoverIcon\n              role=\"button\"\n              ariaLabel={localize('[close popover]')}\n              tabIndex={tabIndex}\n              onClick={this.toggle}\n              size={14}\n              name=\"close-popup\"\n              theme={templateTheme}\n            />\n            <PopoverContentHeader theme={templateTheme} appearance=\"h3\">\n              {localize('[you did not answer all questions]')}\n            </PopoverContentHeader>\n            <PopoverContentMessage theme={templateTheme} data-test=\"remaining-questions\">\n              ({localize('[x question remaining]', { remainingQuestions })})\n            </PopoverContentMessage>\n\n            <PopoverButton tabIndex={tabIndex} onClick={this.closePopup} theme={templateTheme}>\n              {localize('[continue course]')}\n            </PopoverButton>\n            <PopoverButton\n              tabIndex={tabIndex}\n              onClick={this.submitOnce}\n              theme={templateTheme}\n              layout={BUTTON.LAYOUT.SECONDARY}\n              data-test=\"submit-all-answers\"\n            >\n              {localize('[submit all answers]')}\n            </PopoverButton>\n          </PopoverContent>\n        </PopoverContentWrapper>\n      </SubmitMessageWrapper>\n    );\n  };\n\n  submitOnce = () => {\n    this.props.onClick();\n  };\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    colors: getColors(state),\n    showSubmitButton: !isAttemptSubmitted(state),\n    remainingQuestions: getAffectProgressQuestionsCount(state) - getAnsweredAffectProgressQuestionsCount(state)\n  };\n}\n\nexport default withTheme(connect(mapStateToProps)(SubmitOnceButton));\n","import styled from 'styled-components';\nimport { secondaryFont } from 'components/mixins/typography';\nimport { transparentize } from 'utils/color';\n\nexport const RemainingAttemptsBlockText = styled.div`\n  ${secondaryFont};\n  display: block;\n  font-size: 12px;\n  margin-top: 8px;\n  line-height: 1;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.7)};\n  text-align: center;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { localize } from 'core/localization';\nimport {\n  isAttemptsLimited,\n  getLimitedAttemptsNumber,\n  shouldSubmitAllQuestions\n} from 'store/settings/selectors';\nimport { RootAppState } from 'store/types';\nimport { getCourseAttempt } from 'store/course/selectors';\nimport { RemainingAttemptsBlockText } from './RemainingAttemptsBlock.styled';\n\ntype RemainingAttemptsBlockProps = {\n  isSubmitAtOnce: boolean;\n  isLimitedAttempts: boolean;\n  allowedAttempts: number;\n  usedAttempts: number;\n};\n\nexport class RemainingAttemptsBlock extends React.Component<RemainingAttemptsBlockProps> {\n  render() {\n    const { isSubmitAtOnce, isLimitedAttempts, allowedAttempts, usedAttempts } = this.props;\n    const remainingAttempts = allowedAttempts - usedAttempts;\n\n    return (\n      <RemainingAttemptsBlockText>\n        {isSubmitAtOnce &&\n          isLimitedAttempts &&\n          remainingAttempts > 0 &&\n          `(${localize('[remaining attempts]')}${remainingAttempts})`}\n      </RemainingAttemptsBlockText>\n    );\n  }\n}\n\nconst mapStateToProps = (state: RootAppState) => ({\n  isSubmitAtOnce: shouldSubmitAllQuestions(state),\n  isLimitedAttempts: isAttemptsLimited(state),\n  allowedAttempts: getLimitedAttemptsNumber(state),\n  usedAttempts: getCourseAttempt(state)\n});\nexport default connect(mapStateToProps)(RemainingAttemptsBlock);\n","import styled, { css } from 'styled-components';\nimport { Text, Icon } from 'components/common';\nimport { transparentize } from 'utils/color';\nimport { transition, pointerOnHover } from 'components/mixins/interactivity';\nimport buttonDefaultStyle from 'components/mixins/normalize';\nimport { defaultBoxShadowColor } from 'constants/common';\nimport { mainFontText } from 'components/mixins/typography';\n\ntype TitleProps = {\n  isActive: boolean;\n};\nexport const Title = styled(Text)<TitleProps>`\n  ${mainFontText}\n  && {\n    font-size: 18px;\n  }\n  text-decoration: none;\n  font-style: normal;\n  && {\n    ${props =>\n      !props.isActive &&\n      css`\n        color: ${transparentize(props.theme.colors.textColor, 0.7)};\n        ${transition('color')};\n        ${pointerOnHover};\n        &:hover {\n          color: ${props.theme.colors.textColor};\n        }\n        &:focus {\n          color: ${props.theme.colors.textColor};\n          outline: 1px solid black;\n        }\n      `};\n  }\n`;\n\ntype ContainerProps = {\n  tabIndex: number;\n  ariaLabel: string;\n  isActive: boolean;\n};\nexport const Container = styled.button.attrs((props: ContainerProps) => ({\n  tabIndex: props.tabIndex,\n  'aria-label': props.ariaLabel\n}))<ContainerProps>`\n  ${buttonDefaultStyle};\n  position: relative;\n  height: 57px;\n  background: ${props => props.theme.colors.contentBodyColor};\n  box-shadow: inset -2px 0 6px 0 ${transparentize(defaultBoxShadowColor, 0.04)};\n  width: 100%;\n  padding: 0 40px;\n  text-align: left;\n\n  &:focus ${Title} {\n    outline: 1px solid black;\n    color: ${props => props.theme.colors.textColor};\n  }\n\n  &:focus:not(:focus-visible) ${Title} {\n    outline: none;\n  }\n\n  &::after {\n    left: 0;\n    top: 0;\n    content: '';\n    display: block;\n    position: absolute;\n    width: 100%;\n    box-shadow: 0 0 10px 0 ${transparentize(defaultBoxShadowColor, 0.1)};\n  }\n\n  ${props =>\n    props.isActive &&\n    css`\n      &::before {\n        content: '';\n        position: absolute;\n        width: 2px;\n        height: 100%;\n        top: 0;\n        left: 0;\n        background-color: ${props.theme.colors.mainColor};\n      }\n    `};\n`;\n\ntype ResultsIconProps = {\n  tabIndex: number;\n  ariaLabel: string;\n  isCollapsed?: boolean;\n};\nexport const ResultsIcon = styled(Icon).attrs((props: ResultsIconProps) => ({\n  tabIndex: props.tabIndex,\n  role: 'button',\n  'aria-label': props.ariaLabel\n}))<ResultsIconProps>`\n  position: absolute;\n  left: 17px;\n  bottom: 35px;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.4)};\n  ${pointerOnHover};\n  ${props =>\n    props.isCollapsed &&\n    css`\n      font-size: 25px;\n    `};\n\n  &:hover {\n    color: ${props => props.theme.colors.textColor};\n  }\n\n  &:focus {\n    color: ${props => props.theme.colors.textColor};\n    outline: 1px solid black;\n  }\n`;\n","import * as React from 'react';\nimport { localize } from 'core/localization';\n\nimport { Container, Title, ResultsIcon } from './ResultsBlock.styled';\n\ntype ResultsBlockProps = {\n  show: boolean;\n  isActive: boolean;\n  collapsed: boolean;\n  navigateToResults(): void;\n  ariaLabel: string;\n  tabIndex: number;\n};\n\nexport class ResultsBlock extends React.PureComponent<ResultsBlockProps, {}> {\n  static defaultProps = {\n    show: true,\n    isActive: false,\n    collapsed: false\n  };\n\n  render() {\n    const {\n      navigateToResults,\n      show,\n      isActive,\n      collapsed,\n      ariaLabel,\n      tabIndex\n    } = this.props;\n    return (\n      show &&\n      (collapsed ? (\n        !isActive && (\n          <ResultsIcon\n            ariaLabel={ariaLabel}\n            tabIndex={tabIndex}\n            {...(!isActive && {\n              onClick: navigateToResults,\n              onKeyDown: (event: any) => {\n                if (event.key === 'Enter') {\n                  navigateToResults();\n                }\n              }\n            })}\n            name=\"medal\"\n            size={27}\n          />\n        )\n      ) : (\n        <Container\n          ariaLabel={ariaLabel}\n          isActive={isActive}\n          tabIndex={tabIndex}\n          onClick={navigateToResults}\n        >\n          <Title isActive={isActive} appearance=\"h4\" ellipsis>\n            {localize('[results]')}\n          </Title>\n        </Container>\n      ))\n    );\n  }\n}\n\nexport default ResultsBlock;\n","import styled, { css } from 'styled-components';\nimport { Text, Icon } from 'components/common';\nimport buttonDefaultStyle from 'components/mixins/normalize';\nimport { transparentize } from 'utils/color';\nimport { transition, pointerOnHover } from 'components/mixins/interactivity';\nimport { TOC } from 'constants/components';\nimport { mainFontText } from 'components/mixins/typography';\n\nconst colored = css`\n  color: ${props => transparentize(props.theme.colors.textColor, 0.7)};\n  ${transition('color')};\n`;\n\ntype CourseBackIconProps = {\n  isCollapsed?: boolean;\n};\nexport const CourseBackIcon = styled(Icon)<CourseBackIconProps>`\n  font-size: 40px;\n  ${colored};\n  ${pointerOnHover};\n  ${props =>\n    props.isCollapsed &&\n    css`\n      font-size: 25px;\n    `};\n\n  &:hover {\n    color: ${props => props.theme.colors.textColor};\n  }\n`;\n\nexport const CourseTitleText = styled(Text)`\n  ${mainFontText}\n  && {\n    font-size: 18px;\n    ${colored};\n  }\n  font-style: normal;\n  line-height: 1.4;\n  text-decoration: none;\n  align-self: center;\n  margin-left: 16px;\n  word-break: break-word;\n`;\n\ntype CourseBackButtonProps = {\n  ariaLabel: string;\n  tabIndex: number;\n  isCollapsed: boolean;\n};\n\nexport const CourseBackButton = styled.button.attrs((props: CourseBackButtonProps) => ({\n  tabIndex: props.tabIndex,\n  'aria-label': props.ariaLabel,\n  'data-test': 'back-home-button'\n}))<CourseBackButtonProps>`\n  ${buttonDefaultStyle};\n  height: auto;\n  ${props =>\n    !props.isCollapsed &&\n    css`\n      display: flex;\n      flex: 0 0 auto;\n      margin: 40px 40px 0 40px;\n    `};\n  ${props =>\n    props.isCollapsed &&\n    css`\n      height: auto;\n      margin: 0;\n      padding: 0;\n    `};\n  width: auto;\n  overflow: visible;\n  text-align: left;\n  ${pointerOnHover};\n\n  @media (max-width: ${TOC.EXPANDED_WIDTH + TOC.TAIL_WIDTH}px) {\n    margin: 0 10px;\n    & ${CourseBackIcon} {\n      display: none;\n    }\n\n    & ${CourseTitleText} {\n      margin-left: 0;\n    }\n  }\n  &:focus {\n    outline: 1px solid black;\n    ${CourseTitleText}, ${CourseBackIcon} {\n      color: ${props => props.theme.colors.textColor};\n    }\n  }\n  &:hover {\n    ${CourseTitleText}, ${CourseBackIcon} {\n      color: ${props => props.theme.colors.textColor};\n    }\n  }\n`;\n","import React, { Component } from 'react';\nimport { localize } from 'core/localization';\n\nimport { CourseTitleText, CourseBackIcon, CourseBackButton } from './Header.styled';\n\ntype HeaderProps = {\n  courseTitle?: string;\n  collapsed?: boolean;\n  navigateToIndex(): void;\n  tabIndex: number;\n};\n\nexport class Header extends Component<HeaderProps, {}> {\n  render() {\n    const { navigateToIndex, courseTitle, collapsed = false, tabIndex } = this.props;\n    return collapsed ? (\n      <CourseBackButton\n        onClick={navigateToIndex}\n        tabIndex={tabIndex}\n        ariaLabel={`${localize('[back home button]')}`}\n        isCollapsed={collapsed}\n        data-test=\"back-home-button\"\n      >\n        <CourseBackIcon name=\"back-btn\" isCollapsed />\n      </CourseBackButton>\n    ) : (\n      <CourseBackButton\n        onClick={navigateToIndex}\n        tabIndex={tabIndex}\n        ariaLabel={`${localize('[back home button]')}`}\n        isCollapsed={collapsed}\n        data-test=\"back-home-button\"\n      >\n        <CourseBackIcon name=\"back-btn\" />\n        <CourseTitleText appearance=\"h4\" maxLength={35}>\n          {courseTitle}\n        </CourseTitleText>\n      </CourseBackButton>\n    );\n  }\n}\n\nexport default Header;\n","import styled, { css } from 'styled-components';\nimport { Text, ShapedIcon } from 'components/common';\nimport { IconElement } from 'components/common/Icon/Icon.styled';\nimport { transparentize } from 'utils/color';\nimport { pointerOnHover } from 'components/mixins/interactivity';\n\nconst highlighted = css`\n  background-color: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n`;\n\ntype QuestionIconProps = {\n  ariaLabel?: string;\n  name: string;\n  size: any;\n  shape: any;\n  shapeColor: any;\n  iconColor?: any;\n  shapeOpacity?: any;\n};\nexport const QuestionIcon = styled(ShapedIcon).attrs((props: QuestionIconProps) => ({\n  'aria-label': props.ariaLabel\n}))<QuestionIconProps>`\n  flex-shrink: 0;\n  margin-right: 9px;\n\n  & ${IconElement} {\n    color: ${props => props.theme.colors[props.iconColor]};\n  }\n`;\n\nexport const CollapsedQuestionIcon = styled(ShapedIcon)`\n  flex-shrink: 0;\n`;\n\nexport const TitleText = styled(Text)`\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 16px !important;\n  word-break: break-word;\n`;\n\ntype QuestionItemProps = {\n  ariaLabel: string;\n  role: string;\n  tabIndex: number;\n  isActive: boolean;\n  isPassed?: boolean;\n};\nexport const QuestionItem = styled.li.attrs((props: QuestionItemProps) => ({\n  'aria-label': props.ariaLabel,\n  role: props.role,\n  tabIndex: props.tabIndex\n}))<QuestionItemProps>`\n  display: flex;\n  align-items: flex-start;\n  padding: 8px 20px;\n  position: relative;\n  ${props =>\n    props.isActive &&\n    css`\n      ${highlighted};\n      ${TitleText} {\n        color: ${props.theme.colors.textColor};\n      }\n      &::before {\n        content: '';\n        position: absolute;\n        width: 2px;\n        height: 100%;\n        top: 0;\n        left: 0;\n        background-color: ${props.theme.colors.mainColor};\n      }\n    `};\n  ${props =>\n    !props.isActive &&\n    css`\n      ${pointerOnHover};\n      ${TitleText} {\n        color: ${props.isPassed\n          ? transparentize(props.theme.colors.textColor, 0.6, { fullColor: true })\n          : props.theme.colors.textColor};\n      }\n      &:hover {\n        ${highlighted};\n      }\n      &:hover ${TitleText} {\n        text-decoration: underline;\n      }\n    `};\n`;\n","import * as React from 'react';\nimport { SIZES, ICON } from 'constants/components';\nimport { INFORMATION_CONTENT } from 'constants/questionTypes';\nimport { localize } from 'core/localization';\nimport { QuestionItem, TitleText, QuestionIcon } from './QuestionTreeNode.styled';\n\nexport type QuestionTreeNodeProps = {\n  question: {\n    id: string;\n    title: string;\n    isInformationContent: boolean;\n    isAnswered: boolean;\n    isAnsweredCorrectly: boolean;\n    isSurvey: boolean;\n    type: string;\n    hasBeenOpened: boolean;\n  };\n  isActive: boolean;\n  onClick?(e?: any): void;\n  onKeyDown?(e?: any): void;\n  role: string;\n  tabIndex: number;\n};\n\nexport default class QuestionTreeNode<T extends QuestionTreeNodeProps> extends React.PureComponent<\n  T,\n  {}\n> {\n  getTitleQuestion(isAnswered: boolean, isAnsweredCorrectly: boolean, title: string) {\n    return isAnswered\n      ? isAnsweredCorrectly\n        ? `${localize('[aria label question icon ok]')} ${title}`\n        : `${localize('[aria label question icon non]')} ${title}`\n      : `${localize('[aria label question icon]')} ${title}`;\n  }\n\n  render() {\n    const { question, onClick, isActive, onKeyDown, role, tabIndex } = this.props;\n    const {\n      title,\n      isInformationContent,\n      isAnswered,\n      isAnsweredCorrectly,\n      isSurvey,\n      type,\n      hasBeenOpened\n    } = question;\n    const isPassed = type === INFORMATION_CONTENT ? hasBeenOpened : isAnswered;\n    return (\n      <QuestionItem\n        isActive={isActive}\n        isPassed={isPassed}\n        tabIndex={tabIndex}\n        role={role}\n        ariaLabel={\n          !isInformationContent\n            ? this.getTitleQuestion(isAnswered, isAnsweredCorrectly, title)\n            : title\n        }\n        {...(!isActive && { onClick, onKeyDown })}\n      >\n        {!isInformationContent && renderQuestionIcon(isAnswered, isAnsweredCorrectly, isSurvey)}\n        <TitleText>{title}</TitleText>\n      </QuestionItem>\n    );\n  }\n}\n\nfunction renderQuestionIcon(isAnswered: any, isAnsweredCorrectly: any, isSurvey: any) {\n  let iconName = isAnswered ? (isAnsweredCorrectly ? 'ok' : 'close') : 'question';\n\n  if (isSurvey) {\n    iconName = 'survey';\n  }\n  const color = isAnswered\n    ? isAnsweredCorrectly || isSurvey\n      ? 'correctColor'\n      : 'incorrectColor'\n    : 'mainColor';\n  return (\n    <QuestionIcon\n      name={iconName}\n      size={SIZES.SMALL}\n      shape={ICON.SHAPES.ROUND_FULL_COLOR}\n      shapeColor={color}\n      {...(!isAnswered && { fontSize: 7 })}\n    />\n  );\n}\n","import * as React from 'react';\nimport { SIZES, ICON } from 'constants/components';\nimport { INFORMATION_CONTENT } from 'constants/questionTypes';\nimport QuestionTreeNode, { QuestionTreeNodeProps } from './QuestionTreeNode';\nimport { QuestionItem, TitleText, QuestionIcon } from './QuestionTreeNode.styled';\n\ninterface QuestionTreeNodeSubmitOnceProps extends QuestionTreeNodeProps {\n  isAttemptSubmitted?: boolean;\n}\n\nexport default class QuestionTreeNodeSubmitOnce extends QuestionTreeNode<\n  QuestionTreeNodeSubmitOnceProps\n> {\n  render() {\n    const {\n      question,\n      onClick,\n      isActive,\n      onKeyDown,\n      role,\n      tabIndex,\n      isAttemptSubmitted = false\n    } = this.props;\n    const {\n      title,\n      isInformationContent,\n      isAnswered,\n      isAnsweredCorrectly,\n      isSurvey,\n      type,\n      hasBeenOpened\n    } = question;\n    const isPassed = type === INFORMATION_CONTENT ? hasBeenOpened : isAnswered;\n    return (\n      <QuestionItem\n        isActive={isActive}\n        isPassed={isPassed}\n        tabIndex={tabIndex}\n        role={role}\n        ariaLabel={\n          !isInformationContent\n            ? this.getTitleQuestion(isAnswered, isAnsweredCorrectly, title)\n            : title\n        }\n        {...(!isActive && { onClick, onKeyDown })}\n      >\n        {!isInformationContent &&\n          renderQuestionIcon(isAnswered, isAnsweredCorrectly, isSurvey, isAttemptSubmitted)}\n        <TitleText>{title}</TitleText>\n      </QuestionItem>\n    );\n  }\n}\n\nfunction getIconName(\n  isAttemptSubmitted: boolean,\n  isAnsweredCorrectly: boolean,\n  isSurvey: boolean,\n  isAnswered: boolean\n) {\n  let questionIconText = '';\n\n  if (isSurvey) {\n    questionIconText = 'survey';\n  } else if (!isAttemptSubmitted && isAnswered) {\n    questionIconText = 'ok';\n  } else if (isAttemptSubmitted && isAnswered) {\n    if (isAnsweredCorrectly) {\n      questionIconText = 'ok';\n    } else {\n      questionIconText = 'close';\n    }\n  } else {\n    questionIconText = 'question';\n  }\n  return questionIconText;\n}\n\nfunction getShapeColor(\n  isAttemptSubmitted: boolean,\n  isAnsweredCorrectly: boolean,\n  isSurvey: boolean\n) {\n  let questionTextColor = 'textColor';\n  if (isAttemptSubmitted) {\n    if (isAnsweredCorrectly || isSurvey) {\n      questionTextColor = 'correctColor';\n    } else {\n      questionTextColor = 'incorrectColor';\n    }\n  }\n  return questionTextColor;\n}\n\nfunction renderQuestionIcon(\n  isAnswered: boolean,\n  isAnsweredCorrectly: boolean,\n  isSurvey: boolean,\n  isAttemptSubmitted = false\n) {\n  const questionIconText = getIconName(\n    isAttemptSubmitted,\n    isAnsweredCorrectly,\n    isSurvey,\n    isAnswered\n  );\n  const questionTextColor = getShapeColor(isAttemptSubmitted, isAnsweredCorrectly, isSurvey);\n\n  return (\n    <QuestionIcon\n      name={questionIconText}\n      size={SIZES.SMALL}\n      shape={ICON.SHAPES.ROUND_FULL_COLOR}\n      shapeColor={questionTextColor}\n      iconColor={!isAttemptSubmitted && questionTextColor}\n      shapeOpacity={!isAttemptSubmitted && 0.08}\n      {...(!isAnswered && { fontSize: 7 })}\n    />\n  );\n}\n","import React from 'react';\nimport QuestionTreeNode from '../QuestionTreeNode';\nimport QuestionTreeNodeSubmitOnce from '../QuestionTreeNode/QuestionTreeNodeSubmitOnce';\n\nexport default function ExpandedTocItems({ props }: any) {\n  const {\n    activeQuestionId,\n    section,\n    navigateToQuestion,\n    isExpanded,\n    shouldSubmitAllQuestions,\n    isAttemptSubmitted,\n    isCourseOnOnePage\n  } = props;\n\n  const navigateWithKeyEvent = (event: any, { id }: any, question: any) => {\n    if (event.key === 'Enter') {\n      return navigateToQuestion(id, question.id, isCourseOnOnePage);\n    }\n    return false;\n  };\n\n  const getTabindex = () => (isExpanded ? 0 : -1);\n\n  return props.section.questions.map((question: any, questionIndex: any) =>\n    shouldSubmitAllQuestions ? (\n      <QuestionTreeNodeSubmitOnce\n        role=\"menuitem\"\n        key={questionIndex}\n        question={question}\n        isActive={question.id === activeQuestionId}\n        tabIndex={getTabindex()}\n        isAttemptSubmitted={isAttemptSubmitted}\n        {...(question.id !== activeQuestionId && {\n          onClick: () => navigateToQuestion(section.id, question.id, isCourseOnOnePage),\n          onKeyDown: event => navigateWithKeyEvent(event, section, question)\n        })}\n      />\n    ) : (\n      <QuestionTreeNode\n        role=\"menuitem\"\n        key={questionIndex}\n        question={question}\n        isActive={question.id === activeQuestionId}\n        tabIndex={getTabindex()}\n        {...(question.id !== activeQuestionId && {\n          onClick: () => navigateToQuestion(section.id, question.id, isCourseOnOnePage),\n          onKeyDown: event => navigateWithKeyEvent(event, section, question)\n        })}\n      />\n    )\n  );\n}\n","import styled, { css } from 'styled-components';\nimport Icon from 'components/common/Icon';\nimport { transparentize } from 'utils/color';\nimport { secondaryFont } from 'components/mixins/typography';\nimport Text from 'components/common/Text';\nimport { centerAbsoluteElement } from 'components/mixins/placement';\n\ntype PopoverContentWrapperProps = {\n  ariaModal: boolean;\n};\nexport const PopoverContentWrapper = styled.div<PopoverContentWrapperProps>`\n  ${secondaryFont};\n  line-height: 2;\n  padding: 4px 6px 6px;\n  text-align: center;\n  outline: none;\n  color: ${props => {\n    return props.theme.colors.textColor;\n  }};\n  font-size: 14px;\n  background: ${props => props.theme.colors.contentBodyColor};\n  max-height: 70vh;\n  overflow: hidden;\n`;\n\nexport const PopoverContent = styled.div`\n  width: 240px;\n  min-height: 310px;\n  padding: 35px 20px 19px;\n`;\n\nexport const ClosePopoverIcon = styled(Icon)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 24px;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.2)};\n  transition: 0.2s;\n\n  &:hover {\n    color: ${props => props.theme.colors.textColor};\n  }\n`;\n\ntype QuestionsProgressProps = {\n  isPassed: boolean;\n};\nexport const QuestionsProgress = styled.div<QuestionsProgressProps>`\n  width: 94px;\n  height: 94px;\n  margin: 0 auto 30px;\n  position: relative;\n\n  &:before {\n    content: '';\n    display: block;\n    width: 1px;\n    height: 4px;\n    background: ${props => props.theme.colors.textColor};\n    position: absolute;\n    top: -1px;\n    left: 50%;\n  }\n\n  ${props =>\n    props.isPassed &&\n    css`\n      .CircularProgressbar-path {\n        stroke: ${props.theme.colors.correctColor} !important;\n      }\n    `};\n`;\n\nexport const CongratsMessageWrapper = styled.div``;\n\nexport const CongratsMessageTitle = styled(Text)`\n  margin-bottom: 6px;\n`;\n\nexport const NotPassedMessageWrapper = styled.div``;\n\nexport const FailedMessageWrapper = styled(CongratsMessageWrapper)``;\n\nexport const FailedMessageTitle = styled(CongratsMessageTitle)``;\n\nexport const PopoverButton = styled.button.attrs({\n  'data-test': 'popover-button'\n})`\n  cursor: pointer;\n  background: none;\n  border: none;\n  width: 100%;\n  padding: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 1;\n`;\n\nexport const QuestionProgressText = styled.div`\n  position: absolute;\n  ${centerAbsoluteElement};\n  font-size: 24px;\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { isPassed, isFailed, isInProgress } from 'utils/comparison';\nimport { withTheme } from 'styled-components';\nimport { Tooltip } from 'components/common';\nimport { localize } from 'core/localization';\nimport { transparentize } from 'utils/color';\nimport CircularProgressbar from 'react-circular-progressbar';\nimport { getColors, shouldSubmitAllQuestions } from 'store/settings/selectors';\nimport {\n  getAffectProgressQuestionsCountInSection,\n  getCorrectlyAffectProgressQuestionsCountInSection,\n  getAffectCorrectlyAnsweredQuestionsCount,\n  getAnsweredSectionQuestionsCount,\n  getSectionProgress\n} from 'store/sections/selectors';\n\nimport { isAttemptSubmitted } from 'store/course/selectors';\nimport { RootAppState } from 'store/types';\nimport { KEYS } from 'constants/common';\nimport {\n  PopoverContentWrapper,\n  PopoverContent,\n  ClosePopoverIcon,\n  QuestionsProgress,\n  CongratsMessageWrapper,\n  CongratsMessageTitle,\n  NotPassedMessageWrapper,\n  FailedMessageWrapper,\n  FailedMessageTitle,\n  PopoverButton,\n  QuestionProgressText\n} from './ProgressPopover.styled';\n\ntype ProgressPopoverProps = {\n  score: number;\n  status: number;\n  affectProgressQuestionsCountInSection?: number;\n  colors?: { [key: string]: any };\n  popoverPosition: any;\n  children?: any;\n  correctlyAffectProgressQuestionsCountInSection?: number;\n  affectCorrectlyAnsweredQuestionsCount?: number;\n  answeredSectionQuestionsCount?: number;\n  sectionProgress?: number;\n  isSubmitAtOnce?: boolean;\n  isCourseSubmitted?: boolean;\n  sectionId: string;\n  questions?: any;\n  theme?: any;\n  ariaLabelledby?: string;\n};\n\ntype ProgressPopoverState = {\n  isExpanded: boolean;\n};\nexport class ProgressPopover extends React.Component<ProgressPopoverProps, ProgressPopoverState> {\n  popoverRef: any;\n  constructor(props: ProgressPopoverProps) {\n    super(props);\n    this.state = {\n      isExpanded: false\n    };\n    this.popoverRef = React.createRef()\n  }\n\n  toggleOnClick = (evt: any) => {\n    if (!evt.key) {\n      this.setState({\n        isExpanded: !this.state.isExpanded\n      });\n    }\n  };\n\n  closePopup = () => {\n    if (this.state.isExpanded) {\n      this.setState({\n        isExpanded: false\n      });\n    }\n  };\n\n  handleClosePopupKeyDown = (evt: any) => {\n    if ([KEYS.ENTER.toLowerCase(), KEYS.ESCAPE.toLowerCase()].includes(evt.key.toLowerCase())) {\n      this.closePopup();\n    }\n  };\n\n  componentDidUpdate() {\n    setTimeout(() => {\n      const element = document.getElementById('progress-popover');\n      if (element && this.state.isExpanded) {\n        element.focus();\n      }\n      if (this.popoverRef.current && !this.state.isExpanded) {\n        this.popoverRef.current.focus();\n      }\n    }, 0);\n  }\n\n  shouldComponentUpdate(nextProps: ProgressPopoverProps, nextState: ProgressPopoverState) {\n    return this.state.isExpanded !== nextState.isExpanded;\n  }\n\n  render() {\n    const { isExpanded } = this.state;\n    const { popoverPosition, ariaLabelledby } = this.props;\n\n    return (\n      <Tooltip\n        style={{ position: 'absolute', top: 0, left: 0, right: 0, bottom: 0 }}\n        trigger={'click'}\n        open={isExpanded}\n        onRequestClose={this.closePopup}\n        position={popoverPosition}\n        tooltipTheme={'light'}\n        arrow={true}\n        interactive\n        html={this.renderPopoverContent()}\n      >\n        <PopoverButton\n          tabIndex={0}\n          onClick={this.toggleOnClick}\n          ref={this.popoverRef}\n          aria-labelledby={ariaLabelledby}\n        />\n      </Tooltip>\n    );\n  }\n\n  getCircularProgressbarStroke = () => {\n    const { status, colors } = this.props;\n    return isFailed(status) && colors ? colors.incorrectColor : colors && colors.mainColor;\n  };\n\n  renderSubmitOnceQuestionProgress = () => {\n    const {\n      status,\n      correctlyAffectProgressQuestionsCountInSection,\n      affectProgressQuestionsCountInSection,\n      answeredSectionQuestionsCount,\n      sectionProgress = 0,\n      isCourseSubmitted = false,\n      score,\n      colors\n    } = this.props;\n    const templateTheme = this.props.theme;\n    const isSectionPassed = isCourseSubmitted && isPassed(status);\n    return (\n      <React.Fragment>\n        <QuestionsProgress isPassed={isSectionPassed} theme={templateTheme}>\n          <QuestionProgressText>\n            {isCourseSubmitted\n              ? correctlyAffectProgressQuestionsCountInSection\n              : answeredSectionQuestionsCount}\n            /{affectProgressQuestionsCountInSection}\n          </QuestionProgressText>\n          <CircularProgressbar\n            strokeWidth={2}\n            percentage={isCourseSubmitted ? score : sectionProgress}\n            styles={{\n              path: {\n                stroke: this.getCircularProgressbarStroke(),\n                strokeLinecap: 'butt',\n                transition: 'stroke-dashoffset 0.5s ease'\n              },\n              trail: {\n                stroke: colors && transparentize(colors.textColor, 0.02)\n              }\n            }}\n          />\n        </QuestionsProgress>\n        {this.renderPopoverMessageContent()}\n      </React.Fragment>\n    );\n  };\n\n  renderQuestionProgress = () => {\n    const {\n      status,\n      correctlyAffectProgressQuestionsCountInSection,\n      affectProgressQuestionsCountInSection,\n      score,\n      colors\n    } = this.props;\n    const templateTheme = this.props.theme;\n    const isSectionPassed = isPassed(status);\n    return (\n      <React.Fragment>\n        <QuestionsProgress isPassed={isSectionPassed} theme={templateTheme}>\n          <QuestionProgressText>\n            {correctlyAffectProgressQuestionsCountInSection}/{affectProgressQuestionsCountInSection}\n          </QuestionProgressText>\n          <CircularProgressbar\n            strokeWidth={2}\n            percentage={score}\n            styles={{\n              path: {\n                stroke: this.getCircularProgressbarStroke(),\n                strokeLinecap: 'butt',\n                transition: 'stroke-dashoffset 0.5s ease'\n              },\n              trail: {\n                stroke: colors && transparentize(colors.textColor, 0.02)\n              }\n            }}\n          />\n        </QuestionsProgress>\n        {this.renderPopoverMessageContent()}\n      </React.Fragment>\n    );\n  };\n\n  renderPopoverContent = () => {\n    const { isSubmitAtOnce } = this.props;\n    const templateTheme = this.props.theme;\n\n    return (\n      <PopoverContentWrapper\n        id=\"progress-popover\"\n        role=\"dialog\"\n        ariaModal={true}\n        tabIndex={-1}\n        onKeyDown={event => this.handleClosePopupKeyDown(event)}\n        theme={templateTheme}\n      >\n        <PopoverContent>\n          <ClosePopoverIcon\n            role=\"button\"\n            ariaLabel={localize('[close popover]')}\n            tabIndex={0}\n            onKeyDown={(event: any) => this.handleClosePopupKeyDown(event)}\n            onClick={this.toggleOnClick}\n            size={14}\n            name=\"close-popup\"\n            theme={templateTheme}\n          />\n          {isSubmitAtOnce ? this.renderSubmitOnceQuestionProgress() : this.renderQuestionProgress()}\n        </PopoverContent>\n      </PopoverContentWrapper>\n    );\n  };\n\n  renderPopoverMessageContent = () => {\n    const {\n      status,\n      affectProgressQuestionsCountInSection,\n      theme,\n      affectCorrectlyAnsweredQuestionsCount\n    } = this.props;\n    return (\n      <>\n        {isPassed(status) && (\n          <CongratsMessageWrapper>\n            <CongratsMessageTitle theme={theme} appearance=\"h4\">\n              {localize('[passed section title]')}\n            </CongratsMessageTitle>\n            {localize('[passed section]')}\n          </CongratsMessageWrapper>\n        )}\n        {isFailed(status) && (\n          <FailedMessageWrapper>\n            <FailedMessageTitle theme={theme} appearance=\"h4\">\n              {localize('[failed section title]')}\n            </FailedMessageTitle>\n            {localize('[failed section x y]', {\n              countCorrectlyAnsweredQuestionsInSection: affectCorrectlyAnsweredQuestionsCount,\n              countQuestionsInSection: affectProgressQuestionsCountInSection\n            })}\n          </FailedMessageWrapper>\n        )}\n        {isInProgress(status) && (\n          <NotPassedMessageWrapper>\n            {localize('[you need to answer X questions out of Y]', {\n              correctQuestionsCount: affectCorrectlyAnsweredQuestionsCount,\n              totalQuestionsCount: affectProgressQuestionsCountInSection\n            })}\n          </NotPassedMessageWrapper>\n        )}\n      </>\n    );\n  };\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: ProgressPopoverProps) {\n  return {\n    colors: getColors(state),\n    affectProgressQuestionsCountInSection: getAffectProgressQuestionsCountInSection(\n      state,\n      ownProps.sectionId\n    ),\n    correctlyAffectProgressQuestionsCountInSection: getCorrectlyAffectProgressQuestionsCountInSection(\n      state,\n      ownProps.sectionId\n    ),\n    affectCorrectlyAnsweredQuestionsCount: getAffectCorrectlyAnsweredQuestionsCount(\n      state,\n      ownProps.sectionId\n    ),\n    sectionProgress: getSectionProgress(state, ownProps.sectionId),\n    answeredSectionQuestionsCount: getAnsweredSectionQuestionsCount(state, ownProps.sectionId),\n    isSubmitAtOnce: shouldSubmitAllQuestions(state),\n    isCourseSubmitted: isAttemptSubmitted(state)\n  };\n}\n\nexport default withTheme(connect(mapStateToProps)(ProgressPopover));\n","import styled from 'styled-components';\nimport { pointerOnHover } from 'components/mixins/interactivity';\nimport { Icon, Text } from 'components/common';\nimport { TOC } from 'constants/components';\nimport { transparentize } from 'utils/color';\nimport { defaultBoxShadowColor } from 'constants/common';\nimport { mainFontText } from 'components/mixins/typography';\n\nexport const ProgressPopoverWrapper = styled.div`\n  position: relative;\n`;\n\ntype SectionItemProps = {\n  role: string;\n  ariaLabel?: string;\n};\nexport const SectionItem = styled.li.attrs((props: SectionItemProps) => ({\n  role: props.role,\n  'aria-label': props.ariaLabel\n}))<SectionItemProps>`\n  margin: 0 40px;\n  padding: 16px 0 20px 0;\n  box-shadow: 0 0 10px 0 ${transparentize(defaultBoxShadowColor, 0.05)};\n  background: ${props => props.theme.colors.contentBodyColor};\n  &:focus {\n    outline: none;\n  }\n  @media (max-width: ${TOC.EXPANDED_WIDTH + TOC.TAIL_WIDTH}px) {\n    margin: 0 10px;\n  }\n`;\n\nexport const TitleIcon = styled(Icon)`\n  position: absolute;\n  top: 9px;\n  right: 20px;\n  margin-left: 24px;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.4)};\n`;\n\nexport const QuestionList = styled.ul.attrs((props: any) => ({\n  role: props.role\n}))`\n  padding-bottom: 20px;\n`;\n\ntype HeaderProps = {\n  ariaLabel: string;\n  role: string;\n  tabIndex: number;\n  ariaExpanded: any;\n};\nexport const Header = styled.div.attrs((props: HeaderProps) => ({\n  tabIndex: props.tabIndex,\n  role: props.role,\n  'aria-expanded': props.ariaExpanded,\n  'aria-label': props.ariaLabel\n}))<HeaderProps>`\n  position: relative;\n  padding: 0 20px;\n  margin-bottom: 16px;\n  ${pointerOnHover};\n`;\n\nexport const Footer = styled.div`\n  display: flex;\n  margin: 0 20px;\n  justify-content: flex-end;\n`;\n\nexport const StatusIcon = styled.div`\n  display: flex;\n  margin-right: 8px;\n`;\n\nexport const SectionText = styled(Text)`\n  word-break: break-word;\n  ${mainFontText}\n  color: ${props => props.theme.colors.textColor};\n  text-decoration: none;\n  font-style: normal;\n  && {\n    font-size: 18px;\n  }\n  line-height: 22px;\n  margin-right: 25px;\n`;\n\ntype StatusTextProps = {\n  ariaLabel: string;\n  tabIndex: number;\n  role: string;\n  isPassed: boolean;\n  isOverallMasteryScore: boolean;\n  id?: string;\n};\nexport const StatusText = styled(Text).attrs((props: StatusTextProps) => ({\n  tabIndex: props.tabIndex,\n  role: props.role,\n  'aria-label': props.ariaLabel,\n  id: props.id\n}))<StatusTextProps>`\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 24px;\n  color: ${props =>\n    props.isPassed && !props.isOverallMasteryScore\n      ? props.theme.colors.correctColor\n      : transparentize(props.theme.colors.textColor, 0.4)};\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const Status = styled.div`\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  position: relative;\n\n  &:hover {\n    ${StatusText} {\n      text-decoration: underline;\n    }\n  }\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getProgressStatusLocalizationKey } from 'utils/localization';\nimport { isPassed, isFailed } from 'utils/comparison';\nimport { Collapse, Icon } from 'components/common';\nimport { localize } from 'core/localization';\nimport ProgressPopover from 'components/common/ProgressPopover';\nimport {\n  getAffectProgressQuestionsCountInSection,\n  getAnsweredSectionQuestionsCount,\n  getCorrectlyAffectProgressQuestionsCountInSection\n} from 'store/sections/selectors';\nimport { shouldSubmitAllQuestions } from 'store/settings/selectors';\nimport { isAttemptSubmitted } from 'store/course/selectors';\nimport { RootAppState } from 'store/types';\n\nimport {\n  SectionText,\n  SectionItem,\n  Header,\n  TitleIcon,\n  Footer,\n  Status,\n  StatusIcon,\n  StatusText,\n  QuestionList,\n  ProgressPopoverWrapper\n} from './SectionTreeNode.styled';\n\ntype SectionTreeNodeProps = {\n  isActive: boolean;\n  section: {\n    title: string;\n    status: number;\n    affectsProgress?: boolean;\n    score: number;\n    id: string;\n  };\n  children: any[];\n  ariaLabel?: string;\n  tabIndex: number;\n  questions: any[];\n  isSubmitAtOnce?: boolean;\n  affectProgressQuestionsCountInSection?: number;\n  answeredSectionQuestionsCount?: number;\n  correctlyAffectProgressQuestionsCountInSection?: number;\n  isCourseSubmitted?: boolean;\n  isCourseProgress: boolean;\n  sectionIndex: any;\n};\n\ntype SectionTreeNodeState = {\n  isExpanded: boolean;\n};\n\nexport class SectionTreeNode extends React.Component<SectionTreeNodeProps, SectionTreeNodeState> {\n  constructor(props: SectionTreeNodeProps) {\n    super(props);\n    this.state = {\n      isExpanded: this.props.isActive\n    };\n  }\n\n  componentDidUpdate(prevProps: SectionTreeNodeProps) {\n    if (this.props.isActive !== prevProps.isActive) {\n      this.setState({\n        isExpanded: this.props.isActive\n      });\n    }\n  }\n\n  toggleIsExpanded = () => {\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  renderSubmitOnceSectionProgress = (\n    section: {\n      title: string;\n      status: number;\n    },\n    isCourseSubmitted: boolean,\n    isCourseProgress: boolean,\n    sectionStatusId: string,\n    correctlyAffectProgressQuestionsCountInSection?: number,\n    affectProgressQuestionsCountInSection?: number,\n    answeredSectionQuestionsCount?: number\n  ) => {\n    const { status, title } = section;\n    const isSectionPassed = isPassed(status);\n    const statusText = getProgressStatusLocalizationKey(status);\n    return (\n      <React.Fragment>\n        <Status>\n          {isSectionPassed && isCourseSubmitted && !isCourseProgress && (\n            <StatusIcon>\n              <Icon name=\"ok\" size={5} color=\"correctColor\" />\n            </StatusIcon>\n          )}\n          {isFailed(status) && isCourseSubmitted && !isCourseProgress && (\n            <StatusIcon>\n              <Icon name=\"close\" size={5} color=\"textColor\" opacity={0.4} />\n            </StatusIcon>\n          )}\n          <StatusText\n            isPassed={isSectionPassed && isCourseSubmitted}\n            ellipsis\n            ariaLabel={`${localize('[aria label status text]')} ${title} ${localize(statusText)}`}\n            tabIndex={0}\n            role=\"status\"\n            data-test=\"question-answered-text\"\n            isOverallMasteryScore={isCourseProgress}\n            id={sectionStatusId}\n          >\n            {isCourseSubmitted &&\n              isCourseProgress &&\n              localize('[x y answered correctly]', {\n                countCorrectlyAnsweredQuestionsInSection: correctlyAffectProgressQuestionsCountInSection,\n                countQuestionsInSection: affectProgressQuestionsCountInSection\n              })}\n            {isCourseSubmitted && !isCourseProgress && localize(statusText)}\n            {!isCourseSubmitted &&\n              localize('[x y questions answered]', {\n                countAnsweredQuestionsInSection: answeredSectionQuestionsCount,\n                countQuestionsInSection: affectProgressQuestionsCountInSection\n              })}\n          </StatusText>\n        </Status>\n      </React.Fragment>\n    );\n  };\n\n  renderSectionProgress = (\n    section: {\n      title: string;\n      status: number;\n    },\n    isCourseProgress: boolean,\n    sectionStatusId: string,\n    correctlyAffectProgressQuestionsCountInSection?: number,\n    affectProgressQuestionsCountInSection?: number\n  ) => {\n    const { status, title } = section;\n    const isSectionPassed = isPassed(status);\n    const statusText = getProgressStatusLocalizationKey(status);\n    return (\n      <>\n        <Status>\n          {isSectionPassed && (\n            <StatusIcon>\n              <Icon name=\"ok\" size={5} color=\"correctColor\" />\n            </StatusIcon>\n          )}\n          <StatusText\n            data-test=\"question-answered-text\"\n            isPassed={isSectionPassed}\n            ellipsis\n            ariaLabel={`${localize('[aria label status text]')} ${title} ${localize(statusText)}`}\n            tabIndex={-1}\n            role=\"status\"\n            isOverallMasteryScore={isCourseProgress}\n            id={sectionStatusId}\n          >\n            {isCourseProgress\n              ? localize('[x y answered correctly]', {\n                  countCorrectlyAnsweredQuestionsInSection: correctlyAffectProgressQuestionsCountInSection,\n                  countQuestionsInSection: affectProgressQuestionsCountInSection\n                })\n              : localize(statusText)}\n          </StatusText>\n        </Status>\n      </>\n    );\n  };\n\n  render() {\n    const {\n      section,\n      children,\n      tabIndex,\n      questions,\n      isSubmitAtOnce,\n      affectProgressQuestionsCountInSection,\n      answeredSectionQuestionsCount,\n      correctlyAffectProgressQuestionsCountInSection,\n      isCourseSubmitted = false,\n      isCourseProgress,\n      sectionIndex\n    } = this.props;\n    const { id, affectsProgress, title, status, score } = section;\n    const { isExpanded } = this.state;\n    const sectionStatusId = `section-status-${sectionIndex}`;\n    return (\n      <SectionItem role=\"presentation\">\n        <Header\n          ariaLabel={\n            isExpanded\n              ? `${localize('[close section items]')} ${title}`\n              : `${localize('[open section items]')} ${title}`\n          }\n          tabIndex={tabIndex}\n          role=\"menuitem\"\n          ariaExpanded={true}\n          aria-haspopup={children.length > 0 ? 'true' : 'false'}\n          onClick={this.toggleIsExpanded}\n          onKeyDown={event => {\n            if (event.key === 'Enter') {\n              this.toggleIsExpanded();\n            }\n          }}\n        >\n          <SectionText appearance=\"h4\" maxLength={35}>\n            {title}\n          </SectionText>\n          <TitleIcon size={5} name={isExpanded ? 'chevron-up' : 'chevron-down'} />\n        </Header>\n        <Collapse\n          isExpanded={isExpanded}\n          animateAppear={false}\n          duration={200}\n          opacityDuration=\"200\"\n        >\n          <QuestionList role=\"menu\">{children}</QuestionList>\n        </Collapse>\n        <Footer>\n          {affectsProgress && (\n            <ProgressPopoverWrapper>\n              <ProgressPopover\n                popoverPosition={'top'}\n                questions={questions}\n                score={score}\n                status={status}\n                sectionId={id}\n                ariaLabelledby={sectionStatusId}\n              />\n              {isSubmitAtOnce\n                ? this.renderSubmitOnceSectionProgress(\n                    section,\n                    isCourseSubmitted,\n                    isCourseProgress,\n                    sectionStatusId,\n                    correctlyAffectProgressQuestionsCountInSection,\n                    affectProgressQuestionsCountInSection,\n                    answeredSectionQuestionsCount\n                  )\n                : this.renderSectionProgress(\n                    section,\n                    isCourseProgress,\n                    sectionStatusId,\n                    correctlyAffectProgressQuestionsCountInSection,\n                    affectProgressQuestionsCountInSection\n                  )}\n            </ProgressPopoverWrapper>\n          )}\n        </Footer>\n      </SectionItem>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: SectionTreeNodeProps) {\n  return {\n    affectProgressQuestionsCountInSection: getAffectProgressQuestionsCountInSection(\n      state,\n      ownProps.section.id\n    ),\n    answeredSectionQuestionsCount: getAnsweredSectionQuestionsCount(state, ownProps.section.id),\n    correctlyAffectProgressQuestionsCountInSection: getCorrectlyAffectProgressQuestionsCountInSection(\n      state,\n      ownProps.section.id\n    ),\n    isSubmitAtOnce: shouldSubmitAllQuestions(state),\n    isCourseSubmitted: isAttemptSubmitted(state)\n  };\n}\nexport default connect(mapStateToProps)(SectionTreeNode);\n","import styled from 'styled-components';\nimport {\n  QuestionItem,\n  TitleText\n} from 'components/treeOfContent/QuestionTreeNode/QuestionTreeNode.styled';\n\ntype LearningObjectiveItemProps = {\n  isActive: boolean;\n  tabIndex: number;\n  role: string;\n  ariaLabel: string;\n  onClick?(e?: any): void;\n  onKeyDown?(e?: any): void;\n}\nexport const LearningObjectiveItem = styled(QuestionItem)<LearningObjectiveItemProps>``;\n\nexport const ItemTitle = styled(TitleText)``;\n","import React, { PureComponent } from 'react';\nimport { localize } from 'core/localization';\nimport { LearningObjectiveItem, ItemTitle } from './LearningObjectiveTreeNode.styled';\n\ntype LearningObjectiveTreeNodeProps = {\n  isActive: boolean;\n  onClick(e?: any): void;\n  onKeyDown(e?: any): void;\n  role: string;\n  tabIndex: number;\n};\n\nexport default class LearningObjectiveTreeNode extends PureComponent<LearningObjectiveTreeNodeProps, {}> {\n  render() {\n    const { onClick, isActive, onKeyDown, role, tabIndex } = this.props;\n    return (\n      <LearningObjectiveItem\n        isActive={isActive}\n        tabIndex={tabIndex}\n        role={role}\n        ariaLabel={localize('[overview]')}\n        {...(!isActive && { onClick, onKeyDown })}\n      >\n        <ItemTitle>{localize('[overview]')}</ItemTitle>\n      </LearningObjectiveItem>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Collapse } from 'components/common';\nimport { localize } from 'core/localization';\nimport { objectToArray } from 'utils/object';\n\nimport {\n  SectionText,\n  SectionItem,\n  Header,\n  Footer,\n  StatusText,\n  QuestionList\n} from '../SectionTreeNode/SectionTreeNode.styled';\n\ntype PoolTreeNodeProps = {\n  title: string;\n  affectsProgress?: boolean;\n  children: any;\n  questionsForPool: any[];\n  isCourseProgress: boolean;\n  answeredPoolQuestionsCount: number;\n  shouldSubmitAllQuestions: boolean;\n};\n\nexport default class PoolTreeNode extends React.Component<PoolTreeNodeProps> {\n  toggleIsExpanded = () => {\n    this.setState(() => ({\n      isExpanded: true\n    }));\n  };\n\n  render() {\n    const {\n      title,\n      children,\n      questionsForPool,\n      isCourseProgress,\n      shouldSubmitAllQuestions,\n      answeredPoolQuestionsCount\n    } = this.props;\n\n    const correctlyAnsweredQuestionsInSection = objectToArray(questionsForPool).filter(\n      item => item.isAnsweredCorrectly === true\n    );\n\n    const countCorrectlyAnsweredQuestionsInSection = correctlyAnsweredQuestionsInSection.length;\n    const countQuestionsInSection = questionsForPool.length;\n\n    const shouldDisplayAsPassed = false;\n\n    let courseStatusText;\n    if (shouldSubmitAllQuestions) {\n      courseStatusText = localize('[x y questions answered]', {\n        countAnsweredQuestionsInSection: answeredPoolQuestionsCount,\n        countQuestionsInSection\n      });\n    } else {\n      courseStatusText = localize('[x y answered correctly]', {\n        countCorrectlyAnsweredQuestionsInSection,\n        countQuestionsInSection\n      });\n    }\n\n    return (\n      <SectionItem role=\"presentation\">\n        <Header\n          ariaLabel={`${localize('[close section items]')} ${title}`}\n          tabIndex={0}\n          role=\"menuitem\"\n          ariaExpanded={true}\n          aria-haspopup={true}\n          onClick={this.toggleIsExpanded}\n          onKeyDown={event => {\n            if (event.key === 'Enter') {\n              this.toggleIsExpanded();\n            }\n          }}\n        >\n          <SectionText appearance=\"h4\" maxLength={35}>\n            {title}\n          </SectionText>\n        </Header>\n        <Collapse isExpanded={true} animateAppear={false} duration={200} opacityDuration=\"200\">\n          <QuestionList role=\"menu\">{children}</QuestionList>\n        </Collapse>\n        <Footer>\n          <StatusText\n            isPassed={shouldDisplayAsPassed}\n            ariaLabel={`${localize('[aria label status text]')} ${title}`}\n            tabIndex={-1}\n            role=\"status\"\n            isOverallMasteryScore={isCourseProgress}\n          >\n            {courseStatusText}\n          </StatusText>\n        </Footer>\n      </SectionItem>\n    );\n  }\n}\n","import * as React from 'react';\nimport { localize } from 'core/localization';\nimport QuestionTreeNode from '../QuestionTreeNode/QuestionTreeNode';\nimport QuestionTreeNodeSubmitOnce from '../QuestionTreeNode/QuestionTreeNodeSubmitOnce';\nimport PoolTreeNode from '../PoolTreeNode/PoolTreeNode';\n\ntype ExpandedTocPoolSectionProps = {\n  activeQuestionId: string;\n  navigateToQuestion: any;\n  questionsForPool: any[];\n  isExpanded: boolean;\n  isCourseProgress: boolean;\n  shouldSubmitAllQuestions: boolean;\n  isAttemptSubmitted: boolean;\n  answeredPoolQuestionsCount: number;\n};\n\nconst navigateWithKeyEvent = (event: any, question: any, navigateToQuestion: any) => {\n  if (event.key === 'Enter') {\n    return navigateToQuestion(question.sectionId, question.id);\n  }\n  return false;\n};\n\nconst getTabIndex = (isExpanded: boolean) => {\n  if (isExpanded) {\n    return 0;\n  }\n  return -1;\n};\n\nfunction ExpandedTocPoolItems({ props }: any) {\n  const {\n    activeQuestionId,\n    navigateToQuestion,\n    questionsForPool,\n    isExpanded,\n    shouldSubmitAllQuestions,\n    isAttemptSubmitted\n  } = props;\n  return questionsForPool.map((question: any, questionIndex: any) =>\n    shouldSubmitAllQuestions ? (\n      <QuestionTreeNodeSubmitOnce\n        role=\"menuitem\"\n        key={questionIndex}\n        question={question}\n        isActive={question.id === activeQuestionId}\n        tabIndex={getTabIndex(isExpanded)}\n        isAttemptSubmitted={isAttemptSubmitted}\n        {...(question.id !== activeQuestionId && {\n          onClick: () => navigateToQuestion(question.sectionId, question.id),\n          onKeyDown: event => navigateWithKeyEvent(event, question, navigateToQuestion)\n        })}\n      />\n    ) : (\n      <QuestionTreeNode\n        role=\"menuitem\"\n        key={questionIndex}\n        question={question}\n        isActive={question.id === activeQuestionId}\n        tabIndex={getTabIndex(isExpanded)}\n        {...(question.id !== activeQuestionId && {\n          onClick: () => navigateToQuestion(question.sectionId, question.id),\n          onKeyDown: event => navigateWithKeyEvent(event, question, navigateToQuestion)\n        })}\n      />\n    )\n  );\n}\n\nclass ExpandedTocPoolSection extends React.Component<ExpandedTocPoolSectionProps> {\n  render() {\n    const {\n      activeQuestionId,\n      navigateToQuestion,\n      questionsForPool,\n      isExpanded,\n      isCourseProgress,\n      shouldSubmitAllQuestions,\n      isAttemptSubmitted,\n      answeredPoolQuestionsCount\n    } = this.props;\n    return (\n      <PoolTreeNode\n        title={localize('[questions - second variation]')}\n        questionsForPool={questionsForPool}\n        isCourseProgress={isCourseProgress}\n        answeredPoolQuestionsCount={answeredPoolQuestionsCount}\n        shouldSubmitAllQuestions={shouldSubmitAllQuestions}\n      >\n        <ExpandedTocPoolItems\n          props={{\n            activeQuestionId,\n            navigateToQuestion,\n            questionsForPool,\n            isExpanded,\n            shouldSubmitAllQuestions,\n            isAttemptSubmitted\n          }}\n        />\n      </PoolTreeNode>\n    );\n  }\n}\n\nexport default ExpandedTocPoolSection;\n","import styled from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport { TOC } from 'constants/components';\nimport { Text, ProgressResult } from 'components/common';\nimport { getCustomScrollbars } from 'components/mixins/customScrollbars';\nimport { defaultBoxShadowColor } from 'constants/common';\nimport { SectionItem } from '../SectionTreeNode/SectionTreeNode.styled';\n\ntype SectionsProps = {\n  role: string;\n};\nexport const Sections = styled.ul.attrs((props: SectionsProps) => ({\n  role: props.role,\n  'data-test': 'expanded-navigation-block'\n}))<SectionsProps>`\n  flex: 1 0 auto;\n  margin-top: 44px;\n  margin-bottom: 50px;\n\n  ${SectionItem} + ${SectionItem} {\n    margin-top: 2px;\n  }\n`;\n\ntype ExpandedTocContainer = {\n  ariaLabel: string;\n  isExpanded: boolean;\n};\nexport const ExpandedTocContainer = styled.nav.attrs((props: ExpandedTocContainer) => ({\n  'aria-label': props.ariaLabel\n}))<ExpandedTocContainer>`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  height: calc(100vh - 57px);\n  ${getCustomScrollbars()};\n  box-shadow: inset -2px 0 6px 0 ${transparentize(defaultBoxShadowColor, 0.04)};\n  background-color: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n\n  @media (max-width: ${TOC.EXPANDED_WIDTH + TOC.TAIL_WIDTH}px) {\n    padding-top: 32px;\n  }\n  &:focus {\n    outline: none;\n  }\n  & ${Sections} {\n    margin-top: 32px;\n  }\n`;\n\nexport const ProgressMasteryScoreWrapper = styled.div`\n  margin: 16px 40px 0;\n`;\n\nexport const SubmitAllAnswersButtonContainer = styled.div`\n  margin: 0 40px 20px;\n\n  button {\n    width: 100%;\n  }\n`;\n\nexport const ProgressMasteryScore = styled(ProgressResult)`\n  height: 4px;\n  border-radius: 2px;\n  background: ${props => transparentize(props.theme.colors.textColor, 0.06)};\n`;\n\nexport const ProgressCaption = styled(Text)`\n  display: block;\n  font-size: 10px;\n  font-weight: bold;\n  text-transform: uppercase;\n  line-height: 1;\n  color: ${props => props.theme.colors.textColor};\n  opacity: 0.7;\n`;\n\nexport const TocWrapper = styled.div`\n  overflow: auto;\n  height: 100%;\n`;\n","import React from 'react';\nimport { OPACITY } from '../../../constants/components';\nimport SubmitOnceButton from '../../submitOnce';\nimport RemainingAttemptsBlock from '../../remainingAttemptsBlock';\nimport { localize } from '../../../core/localization';\nimport ResultsBlock from '../ResultsBlock/ResultsBlock';\nimport Header from '../Header/Header';\nimport ExpandedTocItems from '../ExpandedTocItems';\nimport SectionTreeNode from '../SectionTreeNode/SectionTreeNode';\nimport LearningObjectiveTreeNode from '../LearningObjectiveTreeNode/LearningObjectiveTreeNode';\nimport ExpandedTocPoolSection from '../ExpandedTocPoolSection/ExpandedTocPoolSection';\n\nimport {\n  Sections,\n  ExpandedTocContainer,\n  ProgressMasteryScoreWrapper,\n  ProgressMasteryScore,\n  ProgressCaption,\n  SubmitAllAnswersButtonContainer,\n  TocWrapper\n} from './ExpandedToc.styled';\n\ntype ExpandedTocProps = {\n  isExpanded: boolean;\n  courseStructure: {\n    title: string;\n    sections: any[];\n    isAttemptSubmitted: boolean;\n  };\n  activeSectionId: string;\n  activeQuestionId: string;\n  navigateToIndex(): void;\n  navigateToQuestion(sectionId: string, questionId: string, isCourseOnOnePage: boolean): void;\n  navigateToLearningObjective(sectionId: string, isCourseOnOnePage: boolean): void;\n  submitAllAnswerOnce(section: any): void;\n  navigateToResults(): void;\n  isResultsActive: boolean;\n  isLearningObjectiveView: boolean;\n  courseProgress: number;\n  masteryScore: number;\n  isCourseProgress: boolean;\n  affectProgressSectionsCount: number;\n  questionsForPool: any;\n  isQuestionPool: boolean;\n  isCourseOnOnePage: boolean;\n  shouldSubmitAllQuestions: boolean;\n  affectProgressQuestionsCount: number;\n  affectAnsweredQuestionsCount: number;\n  answeredQuestionsProgress: number;\n  showSubmitButton: boolean;\n  isNextPageResults: boolean;\n  isCoursePassed: boolean;\n};\n\nfunction ExpandedTocSection({ props }: any) {\n  const {\n    courseStructure,\n    activeSectionId,\n    activeQuestionId,\n    navigateToQuestion,\n    navigateToLearningObjective,\n    isExpanded,\n    isLearningObjectiveView,\n    scrollToQuestion,\n    isCourseOnOnePage,\n    shouldSubmitAllQuestions,\n    isCourseProgress\n  } = props;\n  const { isAttemptSubmitted } = courseStructure;\n  return courseStructure.sections.map((section: any, sectionIndex: any) => (\n    <SectionTreeNode\n      key={sectionIndex}\n      isActive={section.id === activeSectionId}\n      section={section}\n      questions={section.questions}\n      tabIndex={isExpanded ? 0 : -1}\n      isCourseProgress={isCourseProgress}\n      sectionIndex={sectionIndex}\n    >\n      {section.learningObjective && (\n        <LearningObjectiveTreeNode\n          role=\"menuitem\"\n          tabIndex={0}\n          isActive={section.id === activeSectionId && isLearningObjectiveView}\n          onClick={() => navigateToLearningObjective(section.id, isCourseOnOnePage)}\n          onKeyDown={event => {\n            if (event.key === 'Enter') {\n              navigateToLearningObjective(section.id, isCourseOnOnePage);\n            }\n          }}\n        />\n      )}\n      <ExpandedTocItems\n        props={{\n          section,\n          activeQuestionId,\n          isExpanded,\n          navigateToQuestion,\n          scrollToQuestion,\n          isCourseOnOnePage,\n          shouldSubmitAllQuestions,\n          isAttemptSubmitted\n        }}\n      />\n    </SectionTreeNode>\n  ));\n}\n\nclass ExpandedToc extends React.Component<ExpandedTocProps, {}> {\n  refContainer: any;\n\n  constructor(props: ExpandedTocProps) {\n    super(props);\n    this.refContainer = React.createRef();\n  }\n\n  renderSubmitOnceMasteryScoreProgress = () => {\n    const {\n      courseProgress,\n      answeredQuestionsProgress,\n      masteryScore,\n      affectAnsweredQuestionsCount,\n      affectProgressQuestionsCount,\n      isCoursePassed\n    } = this.props;\n\n    const { isAttemptSubmitted } = this.props.courseStructure;\n\n    return (\n      <ProgressMasteryScoreWrapper>\n        <ProgressMasteryScore\n          progress={isAttemptSubmitted ? courseProgress : answeredQuestionsProgress}\n          progressColor={isAttemptSubmitted && isCoursePassed ? 'correctColor' : 'textColor'}\n          opacity={isAttemptSubmitted && isCoursePassed ? OPACITY.PERCENT_100 : OPACITY.PERCENT_30}\n          passedMark={masteryScore}\n          passedMarkStyles={{\n            opacity: OPACITY.PERCENT_30,\n            color: 'textColor'\n          }}\n          forwardedRef={this.refContainer}\n        />\n        <ProgressCaption data-test=\"question-answered-count\">\n          {isAttemptSubmitted\n            ? localize('[you complete x]', {\n                percentSuccess: courseProgress\n              })\n            : localize('[x out of y questions answered]', {\n                countAnsweredQuestions: affectAnsweredQuestionsCount,\n                countQuestions: affectProgressQuestionsCount\n              })}\n        </ProgressCaption>\n      </ProgressMasteryScoreWrapper>\n    );\n  };\n\n  renderSectionProgress = (courseProgress: number, masteryScore: number) => (\n    <ProgressMasteryScoreWrapper>\n      <ProgressMasteryScore\n        progress={courseProgress}\n        progressColor=\"correctColor\"\n        opacity={OPACITY.PERCENT_100}\n        passedMark={masteryScore}\n        passedMarkStyles={{\n          opacity: OPACITY.PERCENT_30,\n          color: 'textColor'\n        }}\n        forwardedRef={this.refContainer}\n      />\n      <ProgressCaption>\n        {localize('[you complete x]', {\n          percentSuccess: courseProgress\n        })}\n      </ProgressCaption>\n    </ProgressMasteryScoreWrapper>\n  );\n\n  render() {\n    const {\n      courseStructure,\n      activeSectionId,\n      activeQuestionId,\n      navigateToIndex,\n      navigateToResults,\n      navigateToQuestion,\n      navigateToLearningObjective,\n      isResultsActive,\n      isExpanded,\n      isLearningObjectiveView,\n      courseProgress,\n      masteryScore,\n      isCourseProgress,\n      affectProgressSectionsCount,\n      questionsForPool,\n      isQuestionPool,\n      isCourseOnOnePage,\n      shouldSubmitAllQuestions,\n      showSubmitButton,\n      affectAnsweredQuestionsCount\n    } = this.props;\n    const { isAttemptSubmitted } = courseStructure;\n\n    return (\n      <React.Fragment>\n        <TocWrapper>\n          <ExpandedTocContainer\n            ref={this.refContainer}\n            isExpanded={isExpanded}\n            aria-hidden={!isExpanded}\n            ariaLabel={`${localize('[expanded nav section]')}`}\n          >\n            <Header\n              courseTitle={courseStructure.title}\n              navigateToIndex={navigateToIndex}\n              tabIndex={isExpanded ? 0 : -1}\n            />\n            {isCourseProgress &&\n              affectProgressSectionsCount > 0 &&\n              (shouldSubmitAllQuestions\n                ? this.renderSubmitOnceMasteryScoreProgress()\n                : this.renderSectionProgress(courseProgress, masteryScore))}\n\n            {isQuestionPool && (\n              <Sections role=\"menubar\">\n                <ExpandedTocPoolSection\n                  activeQuestionId={activeQuestionId}\n                  navigateToQuestion={navigateToQuestion}\n                  questionsForPool={questionsForPool}\n                  isExpanded={isExpanded}\n                  isCourseProgress={isCourseProgress}\n                  isAttemptSubmitted={isAttemptSubmitted}\n                  shouldSubmitAllQuestions={shouldSubmitAllQuestions}\n                  answeredPoolQuestionsCount={affectAnsweredQuestionsCount}\n                />\n              </Sections>\n            )}\n            {!isQuestionPool && (\n              <Sections role=\"menubar\">\n                <ExpandedTocSection\n                  props={{\n                    courseStructure,\n                    activeSectionId,\n                    activeQuestionId,\n                    navigateToIndex,\n                    navigateToResults,\n                    navigateToQuestion,\n                    navigateToLearningObjective,\n                    isResultsActive,\n                    isExpanded,\n                    isLearningObjectiveView,\n                    shouldSubmitAllQuestions,\n                    isCourseOnOnePage,\n                    isCourseProgress\n                  }}\n                />\n              </Sections>\n            )}\n            {shouldSubmitAllQuestions && showSubmitButton && (\n              <SubmitAllAnswersButtonContainer>\n                <SubmitOnceButton\n                  onClick={this.submitOnce}\n                  isActive={showSubmitButton}\n                  tabIndex={0}\n                />\n                <RemainingAttemptsBlock />\n              </SubmitAllAnswersButtonContainer>\n            )}\n          </ExpandedTocContainer>\n          <ResultsBlock\n            ariaLabel={localize('[results]')}\n            show={shouldSubmitAllQuestions ? !showSubmitButton : true}\n            isActive={isResultsActive}\n            navigateToResults={navigateToResults}\n            tabIndex={isExpanded ? 0 : -1}\n          />\n        </TocWrapper>\n      </React.Fragment>\n    );\n  }\n\n  submitOnce = () => {\n    const { courseStructure, submitAllAnswerOnce, navigateToResults } = this.props;\n    submitAllAnswerOnce(courseStructure.sections);\n    navigateToResults();\n  };\n}\n\nexport default ExpandedToc;\n","import styled, { css, keyframes } from 'styled-components';\nimport { ShapedIcon } from 'components/common';\nimport { pointerOnHover, transition } from 'components/mixins/interactivity';\n\nexport const scaleAnimation = keyframes`\n  0% { transform: scale(0.5); }\n  100% { transform: scale(1); }\n`;\n\ntype NavigationItemIconProps = {\n  role: string;\n  ariaLabel:string;\n  tabIndex: number;\n  isActive?: boolean;\n}\nexport const NavigationItemIcon = styled(ShapedIcon).attrs((props: NavigationItemIconProps) => ({\n  role: props.role,\n  tabIndex: props.tabIndex,\n  'aria-label': props.ariaLabel\n}))<NavigationItemIconProps>`\n  flex-shrink: 0;\n  ${transition('border, background-color, transform')};\n  &:focus {\n    border: none;\n    outline: 1px solid black;\n  }\n  ${props =>\n    !props.isActive &&\n    css`\n      ${pointerOnHover};\n      /* &:active {\n        animation: ${scaleAnimation} 0.2s;\n      } */\n    `};\n`;\n","import styled, { css } from 'styled-components';\nimport { pointerOnHover, transition } from 'components/mixins/interactivity';\nimport { IconElement } from 'components/common/Icon/Icon.styled';\nimport { transparentize } from 'utils/color';\nimport { MEDIA_SMALL } from 'constants/screenResolutions';\nimport { NavigationItemIcon } from '../NavigationItem/NavigationItem.styled';\n\ntype ContainerProps = {\n  role: string;\n}\nexport const Container = styled.div.attrs((props: ContainerProps) => ({\n  role: props.role,\n  'data-test': 'navigation-block'\n})) <ContainerProps>`\n  display: flex;\n  justify-content: center;\n  position: relative;\n  ${NavigationItemIcon} + ${NavigationItemIcon} {\n    margin-top: 20px;\n  }\n  @media (max-height: ${MEDIA_SMALL}px){\n    margin-top: 100px;\n  }\n`;\n\ntype ItemsLimiterProps = {\n  height: number;\n}\nexport const ItemsLimiter = styled.div<ItemsLimiterProps>`\n  max-height: ${props => props.height + 10}px;\n  padding: 5px;\n  overflow: hidden;\n`;\n\ntype NavButtonProps = {\n  prev?: any;\n  next?: any;\n}\nexport const NavButton = styled.button<NavButtonProps>`\n  ${pointerOnHover};\n  position: absolute;\n  padding: 10px;\n  height: 30px;\n  outline: none;\n  background: none;\n  border: none;\n  width: 100%;\n  left: 0;\n\n  ${props => css`\n    & ${IconElement} {\n      color: ${transparentize(props.theme.colors.textColor, 0.7, {\n  solidColor: true\n})};\n    }\n  `};\n\n  &:hover ${IconElement} {\n    color: ${props => props.theme.colors.textColor};\n  }\n\n  &:focus {\n    outline: 1px solid black;\n  }\n\n  ${props =>\n    props.prev &&\n    css`\n      transform: translate(0, -100%);\n      top: -20px;\n    `};\n  ${props =>\n    props.next &&\n    css`\n      transform: translate(0, 100%);\n      bottom: -20px;\n    `};\n`;\n\ntype ItemsProps = {\n  topShift: number;\n}\nexport const Items = styled.div<ItemsProps>`\n  ${transition('margin-top')};\n  margin-top: -${props => props.topShift}px;\n`;\n","import React, { Component } from 'react';\nimport { Icon } from 'components/common';\nimport { minCountTocNavigationElements, maxCountTocNavigationElements } from 'constants/common';\nimport throttle from 'lodash.throttle';\nimport { MEDIA_SMALL } from 'constants/screenResolutions';\nimport { Container, ItemsLimiter, Items, NavButton } from './NavigationBlock.styled';\n\nconst itemHeight = 24;\nconst itemDistance = 20;\n\ntype NavigationBlockProps = {\n  children: any[];\n  role: string;\n  navigationElementsCount: number;\n  activeItemIndex: number;\n};\ntype NavigationBlockState = {\n  hasNextPage: boolean;\n  hasPrevPage: boolean;\n  startIndex: number;\n  endIndex: number;\n  countTocNavigationElements: number;\n  windowHeight: number;\n};\nexport default class NavigationBlock extends Component<NavigationBlockProps, NavigationBlockState> {\n  constructor(props: NavigationBlockProps) {\n    super(props);\n    this.state = {\n      hasNextPage: false,\n      hasPrevPage: false,\n      startIndex: -1,\n      endIndex: -1,\n      countTocNavigationElements: maxCountTocNavigationElements,\n      windowHeight: window.innerHeight\n    };\n  }\n\n  componentDidMount() {\n    this.setTocNavigationElements(this.state.windowHeight);\n    window.addEventListener('resize', this.windowResizeHandler);\n\n    this.updatePagingState(this.props.navigationElementsCount, this.props.activeItemIndex);\n  }\n\n  componentDidUpdate(prevProps: NavigationBlockProps) {\n    const index = prevProps.activeItemIndex;\n    const { activeItemIndex, navigationElementsCount } = this.props;\n    if (\n      (index !== activeItemIndex && !this.isIndexInView(index)) ||\n      this.props.navigationElementsCount !== prevProps.navigationElementsCount\n    ) {\n      this.updatePagingState(navigationElementsCount, activeItemIndex);\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.windowResizeHandler);\n  }\n\n  windowResizeHandler = throttle(() => {\n    this.setState({ windowHeight: window.innerHeight });\n    this.setTocNavigationElements(this.state.windowHeight);\n  }, 500);\n\n  setTocNavigationElements = (height: any) => {\n    if (height <= MEDIA_SMALL) {\n      this.setState({ countTocNavigationElements: minCountTocNavigationElements });\n    } else {\n      this.setState({ countTocNavigationElements: maxCountTocNavigationElements });\n    }\n  };\n\n  isIndexInView = (index: any) => {\n    const { startIndex, endIndex } = this.state;\n    return index >= startIndex && index <= endIndex;\n  };\n\n  nextPage = () => {\n    const totalItems = this.props.navigationElementsCount;\n    const { startIndex, countTocNavigationElements } = this.state;\n    this.updatePagingState(totalItems, startIndex + countTocNavigationElements);\n  };\n\n  prevPage = () => {\n    const totalItems = this.props.navigationElementsCount;\n    const { startIndex, countTocNavigationElements } = this.state;\n    this.updatePagingState(totalItems, startIndex - countTocNavigationElements);\n  };\n\n  updatePagingState = (totalItems: any, index: any) => {\n    const { countTocNavigationElements } = this.state;\n    this.setState(calculatePaging(totalItems, index, countTocNavigationElements));\n  };\n\n  render() {\n    const { children, role } = this.props;\n    const { hasNextPage, hasPrevPage, startIndex, countTocNavigationElements } = this.state;\n    const limiterHeight =\n      countTocNavigationElements * itemHeight + (countTocNavigationElements - 1) * itemDistance;\n    const topShift = startIndex * itemHeight + startIndex * itemDistance;\n    return (\n      <Container role={role}>\n        {hasPrevPage && (\n          <NavButton tabIndex={0} onClick={this.prevPage} prev>\n            <Icon name=\"chevron-up\" />\n          </NavButton>\n        )}\n        <ItemsLimiter height={limiterHeight}>\n          <Items topShift={topShift}>{children}</Items>\n        </ItemsLimiter>\n        {hasNextPage && (\n          <NavButton tabIndex={0} onClick={this.nextPage} next>\n            <Icon name=\"chevron-down\" />\n          </NavButton>\n        )}\n      </Container>\n    );\n  }\n}\n\nfunction calculatePaging(totalItems: any, index: any, countTocNavigationElements: any) {\n  const range = getRange(totalItems, index, countTocNavigationElements);\n  const startIndex = range.start;\n  const endIndex = range.end;\n  const hasNextPage =\n    totalItems - startIndex !== countTocNavigationElements &&\n    totalItems > countTocNavigationElements;\n  const hasPrevPage = startIndex > 0;\n  return { hasPrevPage, hasNextPage, startIndex, endIndex };\n}\n\nfunction getRange(totalItems: any, index: any, countTocNavigationElements: any) {\n  if (index <= 0) {\n    return {\n      start: 0,\n      end: totalItems >= countTocNavigationElements ? countTocNavigationElements : totalItems\n    };\n  }\n\n  const postDelta = totalItems - 1 - index;\n  if (postDelta >= countTocNavigationElements) {\n    return { start: index, end: index + countTocNavigationElements };\n  }\n\n  const preDelta = countTocNavigationElements - postDelta;\n  const pre = index - preDelta + 1;\n  return { start: pre >= 0 ? pre : 0, end: index + postDelta };\n}\n","import React from 'react';\nimport { SIZES, ICON } from 'constants/components';\nimport { transparentize } from 'utils/color';\nimport { localize } from 'core/localization';\nimport { NavigationItemIcon } from './NavigationItem.styled';\n\ntype NavigationLearningItemProps = {\n  sectionTitle?: string;\n  onClick(e?: any): void;\n  onKeyDown(e?: any): void;\n  isActive: boolean;\n  role: string;\n  tabIndex: number;\n};\nexport const NavigationLearningItem = ({\n  sectionTitle,\n  onClick,\n  onKeyDown,\n  isActive,\n  role,\n  tabIndex\n}: NavigationLearningItemProps) =>\n  getNavigationItemIcon({\n    ariaLabel: sectionTitle,\n    title: sectionTitle,\n    isActive,\n    onClick,\n    onKeyDown,\n    size: SIZES.MEDIUM,\n    role,\n    tabIndex,\n    ...getContentIconProps(isActive)\n  });\n\ntype NavigationItemProps = {\n  question: {\n    title: string;\n    isInformationContent: boolean;\n    isAnswered: boolean;\n    isAnsweredCorrectly: boolean;\n    isSurvey: boolean;\n  };\n  isActive: boolean;\n  onClick?(e?: any): void;\n  onKeyDown?(e?: any): void;\n  role: string;\n  tabIndex: number;\n  shouldSubmitAllQuestions: boolean;\n  isAttemptSubmitted: boolean;\n};\nexport const NavigationItem = ({\n  question,\n  onClick,\n  onKeyDown,\n  isActive,\n  role,\n  tabIndex,\n  shouldSubmitAllQuestions,\n  isAttemptSubmitted\n}: NavigationItemProps) => {\n  let iconProps = getQuestionIconProps(isActive, question);\n  if (question.isInformationContent) {\n    iconProps = getContentIconProps(isActive);\n  } else if (shouldSubmitAllQuestions) {\n    iconProps = getSubmitOnceQuestionIconProps(isActive, question, isAttemptSubmitted);\n  }\n\n  const ariaLabel = question.isAnswered\n    ? question.isAnsweredCorrectly\n      ? `${localize('[aria label question icon ok]')} ${question.title}`\n      : `${localize('[aria label question icon non]')} ${question.title}`\n    : `${localize('[aria label question icon]')} ${question.title}`;\n  return getNavigationItemIcon({\n    ariaLabel: question.isInformationContent ? question.title : ariaLabel,\n    title: question.title || ariaLabel,\n    isActive,\n    onClick,\n    onKeyDown,\n    size: SIZES.MEDIUM,\n    role,\n    tabIndex,\n    ...iconProps\n  });\n};\n\nfunction getNavigationItemIcon(configs: any) {\n  return <NavigationItemIcon {...configs} />;\n}\n\nfunction getContentIconProps(isActive: boolean) {\n  return {\n    name: 'point',\n    fontSize: 4,\n    shape: isActive ? ICON.SHAPES.ROUND_SHADED : ICON.SHAPES.ROUND_FULL_COLOR,\n    getColor: (colors: any) => getDefaultQuestionColor(isActive, colors),\n    getShapeColor: (colors: any) => transparentize(colors.textColor, 0.1),\n    ...(!isActive && {\n      getHoverColor: (colors: any) => colors.textColor,\n      hoverShape: ICON.SHAPES.ROUND_SHADED\n    })\n  };\n}\n\nfunction getSubmitOnceQuestionIconProps(\n  isActive: boolean,\n  question: any,\n  isAttemptSubmitted: boolean\n) {\n  return {\n    name: getIconName(question, isAttemptSubmitted),\n    fontSize: question.isAnswered ? 5 : 8,\n    getColor: (colors: any) =>\n      question.isAnswered && isAttemptSubmitted\n        ? getAnsweredQuestionColor(question, colors)\n        : transparentize(colors.textColor, 0.5),\n    getShapeColor: (colors: any) => getSubmitOnceShapeColor(question, colors, isAttemptSubmitted),\n    shape: isActive\n      ? ICON.SHAPES.ROUND_SHADED\n      : question.isAnswered\n      ? ICON.SHAPES.ROUND_OUTLINED\n      : ICON.SHAPES.ROUND_FULL_COLOR,\n    ...(!isActive && {\n      hoverShape: ICON.SHAPES.ROUND_SHADED\n    }),\n    ...(!isActive &&\n      !question.isAnswered && {\n        getHoverColor: (colors: any) => colors.textColor\n      })\n  };\n}\n\nfunction getQuestionIconProps(isActive: boolean, question: any) {\n  let name = question.isAnswered ? (question.isAnsweredCorrectly ? 'ok' : 'close') : 'question';\n  if (question.isSurvey) {\n    name = 'survey';\n  }\n  let shape: string = ICON.SHAPES.ROUND_FULL_COLOR;\n  if (isActive) {\n    shape = ICON.SHAPES.ROUND_SHADED\n  } else if (question.isAnswered){\n    shape = ICON.SHAPES.ROUND_OUTLINED\n  }\n\n  return {\n    name,\n    fontSize: question.isAnswered ? 5 : 8,\n    getColor: (colors: any) =>\n      question.isAnswered\n        ? getAnsweredQuestionColor(question, colors)\n        : getDefaultQuestionColor(isActive, colors),\n    getShapeColor: (colors: any) => getShapeColor(question, colors),\n    shape,\n    ...(!isActive && {\n      hoverShape: ICON.SHAPES.ROUND_SHADED\n    }),\n    ...(!isActive &&\n      !question.isAnswered && {\n        getHoverColor: (colors: any) => colors.textColor\n      })\n  };\n}\n\nfunction getIconName(question: any, isAttemptSubmitted: boolean) {\n  return question.isSurvey\n    ? 'survey'\n    : getAnsweredOnceIconName(\n        question.isAnswered,\n        isAttemptSubmitted,\n        question.isAnsweredCorrectly,\n        question.isSurvey\n      );\n}\n\nfunction getAnsweredOnceIconName(\n  isAnswered: boolean,\n  isAttemptSubmitted: boolean,\n  isAnsweredCorrectly: boolean,\n  isSurvey: boolean\n) {\n  if (isAnswered && isAttemptSubmitted && !(isAnsweredCorrectly || isSurvey)) {\n    return 'close';\n  } else if (isAnswered || isAnsweredCorrectly || isSurvey) {\n    return 'ok';\n  } else {\n    return 'question';\n  }\n}\n\nfunction getShapeColor(question: any, colors: any) {\n  return question.isAnswered\n    ? getAnsweredQuestionColor(question, colors)\n    : transparentize(colors.textColor, 0.1);\n}\n\nfunction getSubmitOnceShapeColor(question: any, colors: any, isAttemptSubmitted: boolean) {\n  return question.isAnswered && isAttemptSubmitted\n    ? getAnsweredQuestionColor(question, colors)\n    : transparentize(colors.textColor, 0.1);\n}\nfunction getAnsweredQuestionColor(question: any, colors: any) {\n  return question.isAnsweredCorrectly || question.isSurvey\n    ? colors.correctColor\n    : colors.incorrectColor;\n}\n\nfunction getDefaultQuestionColor(isActive: any, colors: any) {\n  return isActive ? colors.mainColor : transparentize(colors.textColor, 0.5);\n}\n\nexport default NavigationItem;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getColors } from 'store/settings/selectors';\nimport { RootAppState } from 'store/types';\nimport { getCorrectlyAnsweredQuestionsCount } from 'store/sections/selectors';\nimport NavigationBlock from '../NavigationBlock/NavigationBlock';\nimport NavigationItem from '../NavigationItem/NavigationItem';\n\ntype CollapsedTocPoolSectionProps = {\n  questionsForPool?: any;\n  colors: { [key: string]: any };\n  navigateToQuestion: any;\n  activeQuestionId: string;\n  activeQuestionIndex: number;\n  correctlyAnsweredQuestionsCount?: number;\n  isAttemptSubmitted: boolean;\n  isSubmitAtOnce: boolean;\n};\n\nclass CollapsedTocPoolSection extends React.Component<CollapsedTocPoolSectionProps> {\n  render() {\n    const {\n      questionsForPool,\n      navigateToQuestion,\n      activeQuestionId,\n      activeQuestionIndex,\n      isAttemptSubmitted,\n      isSubmitAtOnce\n    } = this.props;\n\n    return (\n      <NavigationBlock\n        activeItemIndex={activeQuestionIndex}\n        navigationElementsCount={questionsForPool.length}\n        role=\"menu\"\n      >\n        {questionsForPool.map((item: any, itemIndex: any) => (\n          <NavigationItem\n            key={itemIndex}\n            role=\"menuitem\"\n            tabIndex={0}\n            question={item}\n            shouldSubmitAllQuestions={isSubmitAtOnce}\n            isAttemptSubmitted={isAttemptSubmitted}\n            isActive={item.id === activeQuestionId}\n            {...(item.id !== activeQuestionId && {\n              onClick: () => navigateToQuestion(item.sectionId, item.id),\n              onKeyDown: event => {\n                if (event.key === 'Enter') {\n                  navigateToQuestion(item.sectionId, item.id);\n                }\n              }\n            })}\n          />\n        ))}\n      </NavigationBlock>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    colors: getColors(state),\n    correctlyAnsweredQuestionsCount: getCorrectlyAnsweredQuestionsCount(state)\n  };\n}\n\nexport default connect(mapStateToProps)(CollapsedTocPoolSection);\n","import styled, { css } from 'styled-components';\nimport { TOC, Z_INDEX } from 'constants/components';\nimport media from 'components/mixins/media';\nimport { transparentize } from 'utils/color';\nimport { transition } from 'components/mixins/interactivity';\nimport { CourseBackButton } from '../Header/Header.styled';\n\ntype CollapsedTocContainerProps = {\n  ariaLabel: string;\n  ariaHidden?: any;\n  isExpanded: boolean;\n}\n/* eslint-disable import/prefer-default-export */\nexport const CollapsedTocContainer = styled.nav.attrs((props: CollapsedTocContainerProps) => ({\n  'aria-label': props.ariaLabel,\n  'aria-hidden': props.ariaHidden\n})) <CollapsedTocContainerProps>`\n  position: absolute;\n  top: 0;\n  height: 100%;\n  width: ${TOC.COLLAPSED_WIDTH}px;\n  left: -${TOC.COLLAPSED_WIDTH}px;\n  z-index: ${Z_INDEX.COLLAPSED_TOC};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  overflow: hidden;\n  background-color: ${props => props.theme.colors.mainBackground};\n  ${transition('left')};\n  transition-delay: '0.15s';\n  visibility: hidden;\n  & ${CourseBackButton} {\n    top: 80px;\n    left: 16px;\n    position: absolute;\n  }\n\n  ${props =>\n    !props.isExpanded &&\n    css`\n      left: 100%;\n      visibility: visible;\n    `};\n\n  ${media.small`\n    display: none;\n  `};\n`;\n\ntype SectionProgressProps = {\n  isNavigationExist: boolean;\n}\nexport const SectionProgress = styled.div<SectionProgressProps>`\n  width: 24px;\n  height: 51px;\n  padding-top: 16px;\n  position: relative;\n  margin: ${props => (props.isNavigationExist ? '60px auto 30px' : '10px auto 30px')};\n\n  &:before {\n    content: '';\n    display: block;\n    width: 16px;\n    height: 1px;\n    position: absolute;\n    top: 0;\n    left: 4px;\n    background: ${props => transparentize(props.theme.colors.textColor, 0.1)};\n  }\n\n  &:hover {\n    .CircularProgressbar-trail {\n      stroke: ${props => transparentize(props.theme.colors.textColor, 0.2)} !important;\n    }\n  }\n`;\n\nexport const StatusIcon = styled.div`\n  width: 24px;\n  height: 24px;\n  background: ${props => props.theme.colors.correctColor};\n  border-radius: 50%;\n  flex-shrink: 0;\n  align-self: self-start;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { localize } from 'core/localization';\nimport { isPassed, isFailed } from 'utils/comparison';\nimport { Icon } from 'components/common';\nimport { maxCountTocNavigationElements } from 'constants/common';\nimport CircularProgressbar from 'react-circular-progressbar';\nimport ProgressPopover from 'components/common/ProgressPopover';\nimport { getColors, shouldSubmitAllQuestions } from 'store/settings/selectors';\nimport { transparentize } from 'utils/color';\nimport Header from '../Header/Header';\nimport NavigationBlock from '../NavigationBlock/NavigationBlock';\nimport NavigationItem, { NavigationLearningItem } from '../NavigationItem/NavigationItem';\nimport ResultsBlock from '../ResultsBlock/ResultsBlock';\nimport CollapsedTocPoolSection from '../CollapsedTocPoolSection';\nimport { CollapsedTocContainer, SectionProgress, StatusIcon } from './CollapsedToc.styled';\nimport { RootAppState } from 'store/types';\n\nconst constants = {\n  minimalShownProgress: 10\n};\n\ntype CollapsedTocProps = {\n  isExpanded: boolean;\n  courseStructure: {\n    title: string;\n    sections: any[];\n    isAttemptSubmitted: boolean;\n  };\n  activeSectionId: string;\n  activeQuestionId: string;\n  navigateToIndex(): void;\n  navigateToQuestion(sectionId: string, questionId: string, isCourseOnOnePage: boolean): void;\n  navigateToResults(): void;\n  navigateToLearningObjective(id: any, isCourseOnOnePage: boolean): void;\n  isResultsActive: boolean;\n  isLearningObjectiveView: boolean;\n  colors: { [key: string]: any };\n  questionsForPool: any;\n  isQuestionPool: boolean;\n  isCourseOnOnePage: boolean;\n  isSubmitAtOnce: boolean;\n};\nexport class CollapsedToc extends React.Component<CollapsedTocProps, {}> {\n  showProgressScore = (score: number) => {\n    if (score <= constants.minimalShownProgress) {\n      return constants.minimalShownProgress;\n    }\n    return score;\n  };\n\n  renderSubmitOnceSectionProgress = (section: any, isAttemptSubmitted: boolean) => {\n    if (isAttemptSubmitted) {\n      return this.showProgressScore(section.score);\n    }\n    return this.showProgressScore(section.sectionProgress);\n  };\n\n  renderSectionProgress = (section: any) => {\n    return this.showProgressScore(section.score);\n  };\n\n  renderCircularProgressbar(section: any) {\n    const { colors, courseStructure, isSubmitAtOnce } = this.props;\n    const isAttemptSubmitted = courseStructure.isAttemptSubmitted;\n    return (\n      <CircularProgressbar\n        strokeWidth={24}\n        percentage={\n          isSubmitAtOnce\n            ? this.renderSubmitOnceSectionProgress(section, isAttemptSubmitted)\n            : this.renderSectionProgress(section)\n        }\n        styles={{\n          path: {\n            stroke: isFailed(section.status) ? colors.incorrectColor : colors.mainColor,\n            strokeLinecap: 'butt',\n            transition: 'stroke-dashoffset 0.5s ease 0s'\n          },\n          trail: {\n            stroke: transparentize(colors.textColor, 0.02),\n            transition: 'stroke 0.2s ease 0s'\n          }\n        }}\n      />\n    );\n  }\n\n  isPassedSection = (section: any) => {\n    const { courseStructure, isSubmitAtOnce } = this.props;\n    const isAttemptSubmitted = courseStructure.isAttemptSubmitted;\n\n    if (isSubmitAtOnce) {\n      return isAttemptSubmitted && isPassed(section.status);\n    } else {\n      return isPassed(section.status);\n    }\n  };\n\n  getSectionData = () => {\n    const { activeSectionId, courseStructure, activeQuestionId} = this.props;\n    let section: any = null;\n    let questions: any[] = [];\n    let activeQuestionIndex = -1;\n    let activeSectionIndex = -1;\n\n    if (activeSectionId) {\n      section = courseStructure.sections.find((item, index) => {\n        if (item.id === activeSectionId) {\n          activeSectionIndex = index;\n          return true;\n        }\n        return false;\n      }) || {};\n      questions = (section.questions || []).map((question: any, questionIndex: any) => ({\n        key: `${questionIndex}`,\n        question,\n        isAnsweredCorrectly: question.isAnsweredCorrectly,\n        affectsProgress: question.affectsProgress,\n        sectionId: section.id\n      }));\n      activeQuestionIndex = questions.findIndex(item => item.question.id === activeQuestionId);\n    }\n    return { section, questions, activeQuestionIndex, activeSectionIndex}\n  }\n\n  render() {\n    const {\n      courseStructure,\n      isExpanded,\n      activeQuestionId,\n      activeSectionId,\n      navigateToIndex,\n      navigateToQuestion,\n      navigateToResults,\n      navigateToLearningObjective,\n      isResultsActive,\n      isLearningObjectiveView,\n      questionsForPool,\n      isQuestionPool,\n      isCourseOnOnePage,\n      isSubmitAtOnce\n    } = this.props;\n\n    const isAttemptSubmitted = courseStructure.isAttemptSubmitted;\n    const { section, questions, activeQuestionIndex, activeSectionIndex } = this.getSectionData();\n\n    return (\n      <CollapsedTocContainer isExpanded={isExpanded} ariaLabel={localize('[navigation section]')}>\n        <Header collapsed navigateToIndex={navigateToIndex} tabIndex={isExpanded ? -1 : 0} />\n        {isQuestionPool && (\n          <CollapsedTocPoolSection\n            questionsForPool={questionsForPool}\n            navigateToQuestion={navigateToQuestion}\n            activeQuestionId={activeQuestionId}\n            activeQuestionIndex={activeQuestionIndex}\n            isSubmitAtOnce={isSubmitAtOnce}\n            isAttemptSubmitted={isAttemptSubmitted}\n          />\n        )}\n        {!isQuestionPool && activeSectionId && (\n          <NavigationBlock\n            activeItemIndex={activeQuestionIndex}\n            navigationElementsCount={(questions.length as any) + !!section.learningObjective}\n            role=\"menu\"\n          >\n            {section.learningObjective && (\n              <NavigationLearningItem\n                onClick={() => navigateToLearningObjective(section.id, isCourseOnOnePage)}\n                onKeyDown={event => {\n                  if (event.key === 'Enter') {\n                    navigateToLearningObjective(section.id, isCourseOnOnePage);\n                  }\n                }}\n                role=\"menuitem\"\n                tabIndex={0}\n                isActive={isLearningObjectiveView}\n              />\n            )}\n            {questions.map(item => (\n              <NavigationItem\n                key={item.key}\n                role=\"menuitem\"\n                tabIndex={0}\n                question={item.question}\n                isActive={item.question.id === activeQuestionId}\n                shouldSubmitAllQuestions={isSubmitAtOnce}\n                isAttemptSubmitted={isAttemptSubmitted}\n                {...(item.question.id !== activeQuestionId && {\n                  onClick: () =>\n                    navigateToQuestion(item.sectionId, item.question.id, isCourseOnOnePage),\n                  onKeyDown: event => {\n                    if (event.key === 'Enter') {\n                      navigateToQuestion(item.sectionId, item.question.id, isCourseOnOnePage);\n                    }\n                  }\n                })}\n              />\n            ))}\n          </NavigationBlock>\n        )}\n        {!isQuestionPool && section && section.affectsProgress && (\n          <SectionProgress isNavigationExist={maxCountTocNavigationElements < questions.length}>\n            <ProgressPopover\n              popoverPosition={'right-end'}\n              questions={questions}\n              score={section.score}\n              status={section.status}\n              sectionId={section.id}\n              ariaLabelledby={`section-status-${activeSectionIndex}`}\n            />\n            {this.isPassedSection(section) ? (\n              <StatusIcon>\n                <Icon name=\"ok\" size={6} color=\"buttonTextColor\" />\n              </StatusIcon>\n            ) : (\n              this.renderCircularProgressbar(section)\n            )}\n          </SectionProgress>\n        )}\n\n        { !isSubmitAtOnce && <ResultsBlock\n          ariaLabel={localize('[results]')}\n          collapsed\n          isActive={isResultsActive}\n          navigateToResults={navigateToResults}\n          tabIndex={isExpanded ? -1 : 0}\n        />}\n      </CollapsedTocContainer>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    colors: getColors(state),\n    isSubmitAtOnce: shouldSubmitAllQuestions(state)\n  };\n}\n\nexport default connect(mapStateToProps)(CollapsedToc);\n","import styled from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport { Z_INDEX } from 'constants/components';\nimport media from 'components/mixins/media';\nimport { Icon } from 'components/common';\nimport { pointerOnHover } from 'components/mixins/interactivity';\nimport buttonDefaultStyle from 'components/mixins/normalize';\n\nexport const TailIcon = styled(Icon)`\n  color: ${props => transparentize(props.theme.colors.textColor, 0.5)};\n`;\n\ntype TailProps = {\n  tabIndex: number;\n  ariaLabel: string;\n  isExpanded: boolean;\n}\nexport const Tail = styled.button.attrs((props: TailProps) => ({\n  tabIndex: props.tabIndex,\n  'aria-label': props.ariaLabel,\n  'data-test': 'hamburger-button'\n})) <TailProps>`\n  ${buttonDefaultStyle};\n  position: absolute;\n  top: 16px;\n  right: -54px;\n  padding: 16px;\n  z-index: ${Z_INDEX.TOC_TAIL};\n  ${pointerOnHover};\n  &:hover ${TailIcon} {\n    color: ${props => props.theme.colors.textColor};\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &:focus ${TailIcon} {\n    color: ${props => props.theme.colors.textColor};\n    outline: 1px solid black;\n  }\n\n  &:focus:not(:focus-visible) ${TailIcon} {\n    outline: none;\n  }\n\n  ${media.small`\n    top: 8px;\n    right: -45px;\n  `};\n\n  ${props =>\n    props.isExpanded &&\n    media.mobile`\n      top: 8px;\n      right: -38px;\n  `}};\n`;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport withNavigation from 'components/hocs/withNavigation';\nimport { getCurrentLocationHash } from 'utils/window';\nimport { getQuestionUrl, getLocationParams, getLearningObjectiveUrl } from 'utils/navigation';\nimport {\n  INDEX_PATH,\n  RESULTS_PATH,\n  QUESTION_PATH,\n  LEARNING_OBJECTIVE_PATH\n} from 'constants/navigation';\nimport { getCourseStructure, isAttemptSubmitted, isPassed } from 'store/course/selectors';\nimport { getTreeOfContentVisibility } from 'store/treeOfContent/selectors';\nimport {\n  getMasteryScoreValue,\n  isOverallMasteryScore,\n  isAllQuestionsOnOnePage,\n  shouldSubmitAllQuestions,\n  isQuestionPoolEnabled,\n  getTimerEnabled\n} from 'store/settings/selectors';\nimport { getAffectProgressSectionsCount, isSectionsPassed } from 'store/sections/selectors';\nimport {\n  getAffectProgressQuestionsCount,\n  getAnsweredAffectProgressQuestionsCount,\n  getAnsweredQuestionsProgress,\n  getPoolQuestions\n} from 'store/questions/selectors';\nimport { isLowResolution } from 'store/app/selectors';\nimport * as actions from 'store/treeOfContent/actions';\nimport * as courseTimerActions from 'store/timer/actions';\nimport * as courseQuestionActions from 'store/questions/actions';\nimport { TimerStatus } from 'constants/timer';\nimport { localize } from 'core/localization';\nimport { RootAppState } from 'store/types';\nimport { getTimerElapsed, getTimerStatus } from 'store/timer/selectors';\nimport ExpandedToc from './ExpandedToc';\nimport CollapsedToc from './CollapsedToc';\nimport { isLearningObjectiveView } from '../shell/RouteTransition/viewChecker';\nimport { Tail, TailIcon } from './TreeOfContent.styled';\n\ntype TreeOfContentProps = {\n  isExpanded: boolean;\n  courseStructure: {\n    title: string;\n    sections: { [key: string]: any }[];\n    isAttemptSubmitted: boolean;\n  };\n  isAppInLowResolution: boolean;\n  activeSectionId: string;\n  activeQuestionId: string;\n  navigateToIndex(): void;\n  navigateToUrl(url: string): void;\n  isNextPageResults(): boolean;\n  actions: { [key: string]: any };\n  ariaLabel: string;\n  isLearningObjectiveView: boolean;\n  state: { [key: string]: any };\n  masteryScore: number;\n  isCourseProgress: boolean;\n  affectProgressSectionsCount: number;\n  questionsForPool: any;\n  isQuestionPool: boolean;\n  scrollToId(id: string): void;\n  isCourseOnOnePage: boolean;\n  shouldSubmitAllQuestions: boolean;\n  affectProgressQuestionsCount: number;\n  affectAnsweredQuestionsCount: number;\n  answeredQuestionsProgress: number;\n  showSubmitButton: boolean;\n  isSectionsPassed: boolean;\n  isCoursePassed: boolean;\n  timerActions: { [key: string]: any };\n  questionActions: { [key: string]: any };\n  isTimerEnabled: boolean;\n  timerStatus: TimerStatus;\n  timeElapsed: number;\n};\n\nexport class TreeOfContent extends Component<TreeOfContentProps, {}> {\n  navigateToQuestion = (sectionId: string, questionId: string) => {\n    const {\n      isTimerEnabled,\n      timerActions,\n      questionActions,\n      timeElapsed,\n      isCourseOnOnePage,\n      timerStatus\n    } = this.props;\n\n    if (\n      isTimerEnabled &&\n      (timerStatus === TimerStatus.NOT_STARTED || timerStatus === TimerStatus.RESET)\n    ) {\n      timerActions.startTimer();\n      timerActions.setTimerElapsed(timeElapsed);\n    }\n    if (isCourseOnOnePage) {\n      this.navigate(getQuestionUrl(sectionId, questionId));\n      this.scrollNavigate(questionId);\n      questionActions.markAsOpened(questionId);\n    } else {\n      this.navigate(getQuestionUrl(sectionId, questionId));\n    }\n  };\n\n  navigateToResults = () => {\n    this.navigate(RESULTS_PATH);\n  };\n\n  navigateToIndex = () => {\n    this.navigate(INDEX_PATH);\n  };\n\n  navigateToLearningObjective = (sectionId: string, isCourseOnOnePage: boolean) => {\n    if (isCourseOnOnePage) {\n      this.navigate(getLearningObjectiveUrl(sectionId));\n      this.scrollNavigate(sectionId);\n    } else {\n      this.navigate(getLearningObjectiveUrl(sectionId));\n    }\n  };\n\n  submitAllAnswerOnce = (section: any) => {\n    const { isTimerEnabled, timerActions } = this.props;\n    if (timerActions && isTimerEnabled) {\n      timerActions.setTimerStatus(TimerStatus.STOPPED);\n      timerActions.updateTimerProgress();\n    }\n    this.props.actions.submitAllAnswerOnce(section);\n  };\n\n  navigate = (url: string) => {\n    if (this.props.isAppInLowResolution) {\n      this.toggleTreeOfContentVisibility();\n    }\n    this.props.navigateToUrl(url);\n  };\n\n  scrollNavigate = (id: string) => {\n    if (this.props.isAppInLowResolution) {\n      this.toggleTreeOfContentVisibility();\n    }\n    this.props.scrollToId(id);\n  };\n\n  toggleTreeOfContentVisibility = () => {\n    this.props.actions.toggleTreeOfContentVisibility();\n  };\n\n  render() {\n    const { isExpanded } = this.props;\n    const tocProps = {\n      courseStructure: this.props.courseStructure,\n      activeSectionId: this.props.activeSectionId,\n      activeQuestionId: this.props.activeQuestionId,\n      navigateToIndex: this.navigateToIndex,\n      navigateToResults: this.navigateToResults,\n      navigateToQuestion: this.navigateToQuestion,\n      navigateToLearningObjective: this.navigateToLearningObjective,\n      submitAllAnswerOnce: this.submitAllAnswerOnce,\n      isResultsActive: !this.props.activeSectionId,\n      isExpanded,\n      isLearningObjectiveView: this.props.isLearningObjectiveView,\n      courseProgress: this.props.state.course.score,\n      masteryScore: this.props.masteryScore,\n      isCourseProgress: this.props.isCourseProgress,\n      affectProgressSectionsCount: this.props.affectProgressSectionsCount,\n      questionsForPool: this.props.questionsForPool,\n      isQuestionPool: this.props.isQuestionPool,\n      isCourseOnOnePage: this.props.isCourseOnOnePage,\n      shouldSubmitAllQuestions: this.props.shouldSubmitAllQuestions,\n      affectProgressQuestionsCount: this.props.affectProgressQuestionsCount,\n      affectAnsweredQuestionsCount: this.props.affectAnsweredQuestionsCount,\n      answeredQuestionsProgress: this.props.answeredQuestionsProgress,\n      showSubmitButton: this.props.showSubmitButton,\n      isNextPageResults: this.props.isNextPageResults(),\n      isCoursePassed: this.props.isCoursePassed\n    };\n    return (\n      <React.Fragment>\n        <ExpandedToc {...tocProps} />\n        <Tail\n          isExpanded={isExpanded}\n          onClick={this.toggleTreeOfContentVisibility}\n          tabIndex={0}\n          ariaLabel={localize(\n            isExpanded ? '[hamburger aria label expanded]' : '[hamburger aria label collapse]'\n          )}\n        >\n          <TailIcon name=\"hamburger\" size={12} />\n        </Tail>\n        <CollapsedToc {...tocProps} />\n      </React.Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  const params = getLocationParams(QUESTION_PATH);\n  const learningObjectiveParams = getLocationParams(LEARNING_OBJECTIVE_PATH);\n  return {\n    isExpanded: getTreeOfContentVisibility(state),\n    courseStructure: getCourseStructure(state),\n    isAppInLowResolution: isLowResolution(state),\n    isLearningObjectiveView: isLearningObjectiveView.test(\n      getCurrentLocationHash().replace('#', '')\n    ),\n    activeSectionId: params.sectionId || learningObjectiveParams.sectionId,\n    activeQuestionId: params.questionId,\n    masteryScore: getMasteryScoreValue(state),\n    isCourseProgress: isOverallMasteryScore(state),\n    affectProgressSectionsCount: getAffectProgressSectionsCount(state),\n    questionsForPool: getPoolQuestions(state),\n    isQuestionPool: isQuestionPoolEnabled(state),\n    isCourseOnOnePage: isAllQuestionsOnOnePage(state),\n    shouldSubmitAllQuestions: shouldSubmitAllQuestions(state),\n    affectProgressQuestionsCount: getAffectProgressQuestionsCount(state),\n    affectAnsweredQuestionsCount: getAnsweredAffectProgressQuestionsCount(state),\n    answeredQuestionsProgress: getAnsweredQuestionsProgress(state),\n    showSubmitButton: !isAttemptSubmitted(state),\n    isSectionsPassed: isSectionsPassed(state),\n    isCoursePassed: isPassed(state),\n    timerStatus: getTimerStatus(state),\n    isTimerEnabled: getTimerEnabled(state),\n    timeElapsed: getTimerElapsed(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch),\n    timerActions: bindActionCreators(courseTimerActions, dispatch),\n    questionActions: bindActionCreators(courseQuestionActions, dispatch)\n  };\n}\n\nexport default withRouter(\n  withNavigation(connect(mapStateToProps, mapDispatchToProps)(TreeOfContent))\n);\n","import styled from 'styled-components';\nimport { Text, Icon } from 'components/common';\nimport media from 'components/mixins/media';\nimport {\n  secondaryFont,\n  secondaryFontText,\n  secondaryFontSmallText,\n  bold\n} from 'components/mixins/typography';\nimport { transparentize } from 'utils/color';\n\nexport const PageTitle = styled(Text)`\n  ${secondaryFont};\n  color: ${props => transparentize(props.theme.colors.textColor, 0.4)};\n  font-size: 12px;\n  font-weight: 600;\n`;\n\nexport const LearningObjectiveSectionTitle = styled(Text)`\n  margin: 12px 0 32px 0;\n\n  ${media.medium`\n    padding-right: 22px;\n  `}\n`;\n\nexport const LearningObjectiveWrapper = styled.div`\n  color: ${props => props.theme.colors.textColor};\n  padding: 32px 32px 32px 68px;\n  background: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n`;\n\nexport const LearningObjectiveContent = styled.div`\n  position: relative;\n`;\n\nexport const LearningObjectiveTitle = styled(Text)`\n  ${secondaryFontText};\n  ${bold};\n  margin-bottom: 5px;\n`;\n\nexport const LearningObjectiveText = styled(Text)`\n  ${secondaryFontText};\n  margin-bottom: 16px;\n`;\n\nexport const LearningObjectiveResult = styled(Text)`\n  ${secondaryFontSmallText};\n  font-style: italic;\n  font-weight: normal;\n  opacity: 0.7;\n`;\n\nexport const LearningObjectiveIcon = styled(Icon)`\n  color: ${props => props.theme.colors.mainColor};\n  left: -32px;\n  position: absolute;\n  top: 0;\n`;\n","import React, { Component } from 'react';\nimport NotFound from '../notFound/NotFound';\n\ntype RedirectToProps = {\n  match: { [index: string]: any };\n}\nexport default function withFallbackToNotFound<T>(WrappedComponent: React.ComponentType<T>, predicateForNotFound: any) {\n  return class RedirectTo extends Component<RedirectToProps & T, {}> {\n    render() {\n      if (typeof predicateForNotFound !== 'function') {\n        return <WrappedComponent {...this.props} />;\n      }\n      if (predicateForNotFound(this.props)) {\n        return <NotFound />;\n      }\n\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n}\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport withNavigation from 'components/hocs/withNavigation';\nimport { Button, Separator, CourseLogo } from 'components/common';\nimport {\n  getLogo,\n  isAllQuestionsOnOnePage,\n  isMainLogoShown,\n  getTimerEnabled\n} from 'store/settings/selectors';\nimport { BUTTON } from 'constants/components';\nimport Reviewable from 'components/review/Reviewable';\nimport { localize } from 'core/localization';\nimport * as sectionSelectors from 'store/sections/selectors';\nimport * as courseTimerActions from 'store/timer/actions';\nimport { getTimerElapsed, getTimerStatus } from 'store/timer/selectors';\nimport { TimerStatus } from 'constants/timer';\nimport { RootAppState } from 'store/types';\nimport { REVIEW_COMMENT_PROPERTIES, REVIEW_COMMENT_TYPES } from 'constants/review';\nimport { SKIP_TO_CONTENT_IDS } from 'constants/common';\nimport {\n  PageTitle,\n  LearningObjectiveSectionTitle,\n  LearningObjectiveContent,\n  LearningObjectiveWrapper,\n  LearningObjectiveTitle,\n  LearningObjectiveText,\n  LearningObjectiveResult,\n  LearningObjectiveIcon\n} from './LearningObjective.styled';\nimport withFallbackToNotFound from '../../../components/hocs/withFallbackToNotFound';\n\ntype LearningObjectiveProps = {\n  section: { [key: string]: any };\n  navigateToNextPage(): void;\n  logoUrl: string;\n  logoShown: boolean;\n  sectionId: any;\n  scrollToId(id: string): void;\n  isCourseOnOnePage: boolean;\n  timerActions: { [key: string]: any };\n  isTimerEnabled: boolean;\n  timerStatus: TimerStatus;\n  timeElapsed: number;\n};\nexport class LearningObjective extends Component<LearningObjectiveProps, {}> {\n  navigateToNextPage = () => {\n    const {\n      navigateToNextPage,\n      isTimerEnabled,\n      timerActions,\n      timeElapsed,\n      timerStatus\n    } = this.props;\n    navigateToNextPage();\n    if (\n      isTimerEnabled &&\n      (timerStatus === TimerStatus.NOT_STARTED || timerStatus === TimerStatus.RESET)\n    ) {\n      timerActions.startTimer();\n      timerActions.setTimerElapsed(timeElapsed);\n    }\n  };\n\n  scrollToNextPage = (id: string) => {\n    const { scrollToId } = this.props;\n    scrollToId(id);\n  };\n\n  render() {\n    const { section, logoUrl, logoShown, isCourseOnOnePage } = this.props;\n    const {\n      affectedProgressCount,\n      learningObjective,\n      title,\n      id,\n      affectedProgressCorrectlyAnsweredQuestionsCount\n    } = section;\n\n    return (\n      <Fragment>\n        {logoShown && !isCourseOnOnePage && <CourseLogo logoUrl={logoUrl} />}\n        <PageTitle>{localize('[section overview]')}</PageTitle>\n        <Reviewable\n          context={{\n            type: REVIEW_COMMENT_TYPES.SECTION,\n            property: REVIEW_COMMENT_PROPERTIES.TITLE,\n            id,\n            title\n          }}\n        >\n          <LearningObjectiveSectionTitle\n            appearance=\"h1\"\n            tabIndex={0}\n            id={SKIP_TO_CONTENT_IDS.LEARNING_OBJECTIVE_PAGE}\n            ignoreFocus={true}\n          >\n            {title}\n          </LearningObjectiveSectionTitle>\n        </Reviewable>\n        <LearningObjectiveWrapper>\n          <LearningObjectiveContent>\n            <LearningObjectiveIcon size={24} name=\"learning-objective\" />\n            <LearningObjectiveTitle appearance={'p'}>\n              {localize('[learning objective]')}\n            </LearningObjectiveTitle>\n            <LearningObjectiveText appearance={'p'}>{learningObjective}</LearningObjectiveText>\n            {!!affectedProgressCount && (\n              <LearningObjectiveResult appearance={'p'}>\n                {localize('[you need to answer X questions out of Y]', {\n                  correctQuestionsCount: affectedProgressCorrectlyAnsweredQuestionsCount,\n                  totalQuestionsCount: affectedProgressCount\n                })}\n              </LearningObjectiveResult>\n            )}\n          </LearningObjectiveContent>\n        </LearningObjectiveWrapper>\n        <Separator margin={48} opacity={0.1} color=\"textColor\" />\n        {!isCourseOnOnePage && (\n          <Button\n            layout={BUTTON.LAYOUT.PRIMARY}\n            onClick={this.navigateToNextPage}\n            tabIndex={0}\n            suffixIcon=\"arrow-down\"\n          >\n            {localize('[start section]')}\n          </Button>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: any) {\n  const isOnePage = isAllQuestionsOnOnePage(state);\n  const { sectionId } = (() => {\n    if (isOnePage) {\n      return ownProps;\n    }\n    return ownProps.match.params;\n  })();\n  const { title, learningObjective } = sectionSelectors.getSection(state, sectionId);\n\n  return {\n    logoUrl: getLogo(state),\n    logoShown: isMainLogoShown(state),\n    isCourseOnOnePage: isAllQuestionsOnOnePage(state),\n    section: {\n      id: sectionId,\n      title,\n      learningObjective,\n      affectedProgressCount: sectionSelectors.getAffectProgressQuestionsCountInSection(\n        state,\n        sectionId\n      ),\n      affectedProgressCorrectlyAnsweredQuestionsCount: sectionSelectors.getAffectCorrectlyAnsweredQuestionsCount(\n        state,\n        sectionId\n      )\n    },\n    timerStatus: getTimerStatus(state),\n    isTimerEnabled: getTimerEnabled(state),\n    timeElapsed: getTimerElapsed(state)\n  };\n}\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    timerActions: bindActionCreators(courseTimerActions, dispatch)\n  };\n}\n\nfunction predicateForRedirect(props: any) {\n  return !props.section;\n}\n\nexport default withNavigation(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(withFallbackToNotFound(LearningObjective, predicateForRedirect))\n);\n","import React from 'react';\nimport { withTheme } from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport { localize } from 'core/localization';\nimport { Figure } from './Figure.styled';\n\ntype RocketProps = {\n  theme: { [key: string]: any }\n};\nexport const Rocket = (props: RocketProps) => (\n  <Figure\n    width=\"260px\"\n    height=\"123px\"\n    viewBox=\"0 0 260 123\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    role=\"img\"\n    arialabel={`${localize('[aria label rocket]')}`}\n  >\n    <title>22A00D1A-3369-4516-81AB-CC2786BABD7B</title>\n    <desc>Created with sketchtool.</desc>\n    <defs>\n      <filter\n        x=\"0.0%\"\n        y=\"0.0%\"\n        width=\"100.0%\"\n        height=\"100.0%\"\n        filterUnits=\"objectBoundingBox\"\n        id=\"filter-1\"\n      >\n        <feGaussianBlur stdDeviation=\"0\" in=\"SourceGraphic\" />\n      </filter>\n      <filter\n        x=\"0.0%\"\n        y=\"0.0%\"\n        width=\"100.0%\"\n        height=\"100.0%\"\n        filterUnits=\"objectBoundingBox\"\n        id=\"filter-2\"\n      >\n        <feGaussianBlur stdDeviation=\"0\" in=\"SourceGraphic\" />\n      </filter>\n    </defs>\n    <g\n      id=\"styles-simple-course\"\n      stroke=\"none\"\n      strokeWidth=\"1\"\n      fill=\"none\"\n      fillRule=\"evenodd\"\n      transform=\"translate(-372.000000, -580.000000)\"\n    >\n      <g id=\"Group-16\" transform=\"translate(372.000000, 581.000000)\">\n        <path\n          d=\"M74.4791667,20.4233129 L20.9852982,20.4233129 C20.9852982,20.4233129 11.6071429,21.4348819 11.6071429,28.8895706 C11.6071429,36.3442592 \n          20.9852982,37.3558282 20.9852982,37.3558282 L52.8125,37.4163015 C52.8125,37.4163015 60.2604167,38.8676599 60.2604167,45.398773 \n          C60.2604167,51.9298861 52.8125,53.8650307 52.8125,53.8650307 L36.3690476,53.8650307 C36.3690476,53.8650307 23.0208333,54.6797948 \n          23.0208333,62.7546012 C23.0208333,70.8294077 36.3690476,72.0674847 36.3690476,72.0674847 L9.47916667,72.0674847 C9.47916667,72.0674847 \n          5.06725961e-16,73.7002629 0,80.4732691 C0,87.2462752 9.47916667,89 9.47916667,89 L217.344853,89 C217.344853,89 229.047619,87.6695881 \n          229.047619,80.4732691 C229.047619,73.27695 217.344853,72.0674847 217.344853,72.0674847 L197.020332,72.0674847 C197.020332,72.0674847 \n          185.152433,71.3602005 184.940476,64.0245399 C184.728519,56.6888793 197.020332,55.3163891 197.020332,55.3163891 L220.606061,54.5 \n          C220.606061,54.5 232.916667,56.3142786 232.916667,46.1244522 C232.916667,35.9346259 221.590909,37.3558282 221.590909,37.3558282 \n          L249.84375,37.4163015 C249.84375,37.4163015 260,36.8060045 260,28.8895706 C260,20.9731366 249.84375,20 249.84375,20 L74.4791667,20.4233129 Z\"\n          id=\"Path-8\"\n          fill={props.theme.colors.textColor}\n          opacity=\"0.0199999996\"\n          filter=\"url(#filter-1)\"\n        />\n        <g\n          id=\"startup\"\n          transform=\"translate(130.500000, 71.500000) scale(-1, 1) rotate(-315.000000) translate(-130.500000, -71.500000) translate(80.000000, 21.000000)\"\n        >\n          <g id=\"Layer_1\" transform=\"translate(-0.000000, 0.000000)\">\n            <path\n              d=\"M51.8696722,47.9219537 L47.922099,47.7701072 L48.0739455,51.7176803 C48.225792,58.2464987 53.6916849,63.7123916 60.2205033,63.8642381 \n              L64.1680764,64.0160846 L64.0162299,60.0685115 C63.8643834,53.5396931 58.3983452,48.0738002 51.8696722,47.9219537 Z\"\n              id=\"Shape\"\n              fill={transparentize(props.theme.colors.textColor, 0.8, { solidColor: true })}\n              fillRule=\"nonzero\"\n              opacity=\"0.600000024\"\n            />\n            <path\n              d=\"M73.1260029,44.4297747 C72.3669157,43.0633015 71.3039902,41.8486748 70.24121,40.7857493 C67.5082636,38.0528028 64.1679311,36.2307901 \n              60.5239057,35.3198564 C53.6915396,33.6496902 46.099941,35.4717029 40.7857493,40.7857493 C35.4715576,46.0997957 33.6496902,53.6913943 \n              35.3198564,60.5239057 C36.2307901,64.0160846 38.0528028,67.5081183 40.7857493,70.2410647 C41.8485295,71.3038449 43.2150027,72.3667704 \n              44.4297747,73.1258576 C36.5344831,73.4295506 28.3356438,70.5447577 22.2623649,64.4714788 C17.4037128,59.6128266 14.6707663,53.6913943 \n              13.7598326,47.4662689 C12.5452059,38.5081971 15.4299988,29.2464322 22.2623649,22.4140661 C29.094731,15.5817 38.5083424,12.6969071 \n              47.3145677,13.9115338 C53.5396931,14.8224675 59.612972,17.5555593 64.3197776,22.4140661 C70.544903,28.3356438 73.4296959,36.5346284 \n              73.1260029,44.4297747 Z\"\n              id=\"Shape\"\n              fill={props.theme.colors.textColor}\n              fillRule=\"nonzero\"\n              opacity=\"0.600000024\"\n            />\n            <path\n              d=\"M60.0685115,44.5816212 C55.8172453,18.6184848 33.497989,-0.512285575 5.86454101,0.246801632 L0.398648135,0.398648135 \n              L0.246801632,5.86454101 C-0.512285575,33.497989 18.6184848,55.8172453 44.5816212,60.0685115 L60.0685115,44.5816212 Z\"\n              id=\"Shape\"\n              strokeOpacity=\"0.3\"\n              stroke={props.theme.colors.textColor}\n              strokeWidth=\"1.6031746\"\n              fill={props.theme.colors.contentBodyColor}\n              fillRule=\"nonzero\"\n            />\n            <g id=\"Group\" transform=\"translate(0.225005, 0.225005)\" />\n            <path\n              d=\"M44.5816212,60.0685115 C46.099941,60.3722045 47.7701072,60.524051 49.2884269,60.6758975 L60.5239057,49.4404187 \n              C60.3720592,47.7702525 \n              60.2202127,46.2519328 59.9165196,44.7336131 L44.5816212,60.0685115 Z\"\n              id=\"Shape\"\n              fillOpacity=\"0.3\"\n              fill={props.theme.colors.textColor}\n              fillRule=\"nonzero\"\n              opacity=\"0.300000012\"\n            />\n            <circle\n              id=\"Oval\"\n              fillOpacity=\"0.6\"\n              fill={props.theme.colors.textColor}\n              fillRule=\"nonzero\"\n              cx=\"25.8475427\"\n              cy=\"25.9124952\"\n              r=\"10.8214286\"\n            />\n            <circle\n              id=\"Oval\"\n              fill={props.theme.colors.contentBodyColor}\n              fillRule=\"nonzero\"\n              cx=\"25.5833715\"\n              cy=\"25.648324\"\n              r=\"8.19883931\"\n            />\n            <path\n              d=\"M20.4404975,21.6551242 C23.3252905,18.7703313 27.8802496,18.7703313 30.7650426,21.6551242 C33.497989,24.3880707 \n              33.6498355,28.7911833 31.0687356,31.6759763 C31.2205821,31.5241298 31.3724286,31.5241298 31.3724286,31.3722833 C34.5609145,28.1837973 \n              34.5609145,23.0215974 31.3724286,19.8331115 C28.1839426,16.6446256 23.0217428,16.6446256 19.8332568,19.8331115 C16.6447709,23.0215974 \n              16.6447709,28.1837973 19.8332568,31.3722833 C19.9851033,31.5241298 20.1369498,31.5241298 20.1369498,31.6759763 C17.7075511,28.7911833 \n              17.7075511,24.3880707 20.4404975,21.6551242 Z\"\n              id=\"Shape\"\n              fillOpacity=\"0.1\"\n              fill={props.theme.colors.textColor}\n              fillRule=\"nonzero\"\n            />\n          </g>\n        </g>\n        <ellipse\n          id=\"Oval-6-Copy\"\n          fill={props.theme.colors.textColor}\n          opacity=\"0.100000001\"\n          filter=\"url(#filter-2)\"\n          cx=\"130\"\n          cy=\"118.5\"\n          rx=\"26\"\n          ry=\"3.5\"\n        />\n      </g>\n    </g>\n  </Figure>\n);\n\nexport default withTheme(Rocket);\n","import React from 'react';\nimport { withTheme } from 'styled-components';\nimport { localize } from 'core/localization';\nimport { Figure } from './Figure.styled';\n\ntype SadResultProps = {\n  theme: { [key: string]: any };\n};\nexport const SadResult = (props: SadResultProps) => (\n  <Figure\n    width=\"260px\"\n    height=\"142px\"\n    viewBox=\"0 0 260 142\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    arialabel={`${localize('[aria label failed course]')}`}\n  >\n    <title>C6B9A5D1-B3CB-45AF-9203-7F1332548A93</title>\n    <defs>\n      <filter\n        x=\"0.0%\"\n        y=\"0.0%\"\n        width=\"100.0%\"\n        height=\"100.0%\"\n        filterUnits=\"objectBoundingBox\"\n        id=\"filter-1\"\n      >\n        <feGaussianBlur stdDeviation=\"0\" in=\"SourceGraphic\" />\n      </filter>\n      <filter\n        x=\"0.0%\"\n        y=\"0.0%\"\n        width=\"100.0%\"\n        height=\"100.0%\"\n        filterUnits=\"objectBoundingBox\"\n        id=\"filter-2\"\n      >\n        <feGaussianBlur stdDeviation=\"0\" in=\"SourceGraphic\" />\n      </filter>\n      <circle id=\"path-3\" cx=\"185\" cy=\"95\" r=\"16\" />\n    </defs>\n    <g\n      id=\"Combo3(msSection,SubmitAll,Lim,NoContent)\"\n      stroke=\"none\"\n      strokeWidth=\"1\"\n      fill=\"none\"\n      fillRule=\"evenodd\"\n    >\n      <g\n        id=\"Combo3-09-Failed-All-atempts-has-been-used\"\n        transform=\"translate(-780.000000, -120.000000)\"\n      >\n        <g id=\"Group\" transform=\"translate(780.000000, 120.000000)\">\n          <ellipse\n            id=\"Oval-6\"\n            fill=\"#363E4E\"\n            opacity=\"0.100000001\"\n            filter=\"url(#filter-1)\"\n            cx=\"130\"\n            cy=\"138.5\"\n            rx=\"49\"\n            ry=\"3.5\"\n          />\n          <path\n            d=\"M74.4791667,35.6669996 L20.9852982,35.6669996 C20.9852982,35.6669996 11.6071429,36.6785686 11.6071429,44.1332573 C11.6071429,51.5879459\n            20.9852982,52.5995149 20.9852982,52.5995149 L52.8125,52.6599882 C52.8125,52.6599882 60.2604167,54.1113467 60.2604167,60.6424597\n            C60.2604167,67.1735728 52.8125,69.1087174 52.8125,69.1087174 L36.3690476,69.1087174 C36.3690476,69.1087174 23.0208333,69.9234815\n            23.0208333,77.9982879 C23.0208333,86.0730944 36.3690476,87.3111714 36.3690476,87.3111714 L9.47916667,87.3111714 C9.47916667,87.3111714\n            5.06725961e-16,88.9439496 0,95.7169558 C0,102.489962 9.47916667,104.243687 9.47916667,104.243687 L217.344853,104.243687 C217.344853,104.243687\n            229.047619,102.913275 229.047619,95.7169558 C229.047619,88.5206368 217.344853,87.3111714 217.344853,87.3111714 L197.020332,87.3111714\n            C197.020332,87.3111714 185.152433,86.6038872 184.940476,79.2682266 C184.728519,71.932566 197.020332,70.5600758 197.020332,70.5600758\n            L220.606061,69.7436867 C220.606061,69.7436867 232.916667,71.5579653 232.916667,61.3681389 C232.916667,51.1783126 221.590909,52.5995149\n            221.590909,52.5995149 L249.84375,52.6599882 C249.84375,52.6599882 260,52.0496912 260,44.1332573 C260,36.2168233 249.84375,35.2436867\n            249.84375,35.2436867 L74.4791667,35.6669996 Z\"\n            id=\"Path-8\"\n            fill=\"#363E4E\"\n            opacity=\"0.02\"\n            filter=\"url(#filter-2)\"\n          />\n          <path\n            d=\"M156.585786,9 L176,28.4142136 L176,100 C176,101.932997 175.216498,103.682997 173.949747,104.949747 C172.682997,106.216498\n            170.932997,107 169,107 L169,107 L110,107 C108.067003,107 106.317003,106.216498 105.050253,104.949747 C103.783502,103.682997\n            103,101.932997 103,100 L103,100 L103,16 C103,14.0670034 103.783502,12.3170034 105.050253,11.0502525 C106.317003,9.78350169\n            108.067003,9 110,9 L110,9 L156.585786,9 Z\"\n            id=\"Rectangle\"\n            strokeOpacity=\"0.3\"\n            stroke=\"#363E4E\"\n            strokeWidth=\"2\"\n            fill=\"#FFFFFF\"\n            transform=\"translate(139.500000, 58.000000) rotate(-15.000000) translate(-139.500000, -58.000000) \"\n          />\n          <path\n            d=\"M125.151542,48.6658927 C125.151542,50.5989353 124.256236,52.1658927 123.151816,52.1658927 C122.047121,52.1658927 121.151542,50.5989353\n            121.151542,48.6658927 C121.151542,46.7328501 122.047121,45.1658927 123.151816,45.1658927 C124.256236,45.1658927 125.151542,46.7328501\n            125.151542,48.6658927\"\n            id=\"Fill-38\"\n            fill=\"#363E4E\"\n            opacity=\"0.699999988\"\n            transform=\"translate(123.151542, 48.665893) rotate(-15.000000) translate(-123.151542, -48.665893) \"\n          />\n          <path\n            d=\"M151.231539,41.6777785 C151.231539,43.610821 150.336172,45.1777785 149.231676,45.1777785 C148.126906,45.1777785 147.231539,43.610821\n            147.231539,41.6777785 C147.231539,39.7447359 148.126906,38.1777785 149.231676,38.1777785 C150.336172,38.1777785 151.231539,39.7447359\n            151.231539,41.6777785\"\n            id=\"Fill-40\"\n            fill=\"#363E4E\"\n            opacity=\"0.699999988\"\n            transform=\"translate(149.231539, 41.677778) rotate(-15.000000) translate(-149.231539, -41.677778) \"\n          />\n          <path\n            d=\"M164.13009,80.5984991 C163.710485,80.5984991 163.302337,80.4433032 163.077021,80.1652793 C161.181639,77.8264378 158.455641,75.865109\n            155.194038,74.4927069 C151.835769,73.0799301 147.988199,72.3330817 144.067354,72.3330817 C136.554807,72.3330817 129.644697,75.0310374\n            125.582551,79.5502879 C125.22023,79.9535247 124.468379,80.0705604 123.903655,79.8119574 C123.338692,79.5533543 123.174478,79.0168977\n            123.536799,78.6134906 C125.70237,76.2044616 128.695693,74.1937291 132.192876,72.7990102 C135.80224,71.3593168 139.908303,70.5984991\n            144.067354,70.5984991 C148.422125,70.5984991 152.696459,71.4283117 156.428268,72.9984991 C160.049566,74.5220085 163.076305,76.699862\n            165.180772,79.2966252 C165.516838,79.7112759 165.318492,80.24177 164.737538,80.4816337 C164.545876,80.56085 164.336551,80.5984991\n            164.13009,80.5984991\"\n            id=\"Fill-42\"\n            fill=\"#363E4E\"\n            opacity=\"0.699999988\"\n            transform=\"translate(144.344340, 75.598499) rotate(-15.000000) translate(-144.344340, -75.598499) \"\n          />\n          <path\n            d=\"M145,4 L145,16 C145,20.418278 148.581722,24 153,24 L165,24 L165,24 L145,4 Z\"\n            id=\"Path-6\"\n            fill=\"#363E4E\"\n            opacity=\"0.3\"\n            transform=\"translate(155.000000, 14.000000) rotate(-15.000000) translate(-155.000000, -14.000000) \"\n          />\n          <g id=\"Oval\">\n            <use fill=\"#FFFFFF\" xlinkHref=\"#path-3\" />\n            <use\n              strokeOpacity=\"0.3\"\n              stroke=\"#363E4E\"\n              strokeWidth=\"2\"\n              fillOpacity=\"0.06\"\n              fill=\"#363E4E\"\n              xlinkHref=\"#path-3\"\n            />\n          </g>\n          <path\n            d=\"M190.744882,89.2474981 C191.060742,89.5648032 191.072891,89.8699049 190.781327,90.1628022 L185.970528,94.995606 L190.781327,99.828411\n            C191.072891,100.170124 191.072891,100.48743 190.781327,100.780326 C190.635545,100.926775 190.465467,101 190.271091,101 C190.076716,101\n            189.906637,100.926775 189.760856,100.780326 L185.022947,95.9475223 L180.212148,100.780326 C180.066367,100.926775 179.896288,101 179.701912,101\n            C179.507537,101 179.361754,100.926775 179.264568,100.780326 C178.924409,100.48743 178.924409,100.170124 179.264568,99.828411 L184.002474,94.995606\n            L179.264568,90.1628022 C178.924409,89.8699049 178.912261,89.5648032 179.228122,89.2474981 C179.543982,88.9301931 179.871991,88.9179886\n            180.212148,89.2108858 L185.022947,94.0436909 L189.760856,89.2108858 C190.101012,88.9179886 190.429022,88.9301931 190.744882,89.2474981 Z\"\n            id=\"Shape-Copy-3\"\n            stroke=\"#363E4E\"\n            strokeWidth=\"0.8\"\n            fill=\"#191E28\"\n            fillRule=\"nonzero\"\n            opacity=\"0.699999988\"\n            transform=\"translate(185.000000, 95.000000) rotate(-15.000000) translate(-185.000000, -95.000000) \"\n          />\n        </g>\n      </g>\n    </g>\n  </Figure>\n);\nexport default withTheme(SadResult);\n","import styled from 'styled-components';\nimport { Button, Text } from 'components/common';\nimport buttonDefaultStyle from 'components/mixins/normalize';\nimport { transparentize } from 'utils/color';\n\nexport const ButtonElement = styled(Button)`\n  ${buttonDefaultStyle};\n  flex: 0 0 auto;\n  width: 227px;\n  background-color: ${props => props.theme.colors.mainColor};\n  font-size: 14px;\n  margin-bottom: 24px;\n  &:hover {\n    color: ${props => props.theme.colors.textColor};\n  }\n  &:focus {\n    background-color: ${props => transparentize(props.theme.colors.mainColor, 0.9)};\n    color: ${props => props.theme.colors.textColor};\n    outline: 1px solid black;\n  }\n  &:focus:not(:focus-visible) {\n    outline: none;\n  }\n`;\n\nexport const DescriptionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 0 0 auto;\n  margin-bottom: 40px;\n`;\n\nexport const TitleElement = styled(Text)`\n  font-weight: 300;\n  line-height: 1.43;\n  text-align: center;\n  margin-bottom: 48px;\n  color: ${props => props.theme.colors.textColor};\n`;\n\nexport const ContinueLaterWrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  z-index: 1;\n`;\n","import * as React from 'react';\nimport { localize } from 'core/localization';\nimport { Link, CssAnimation } from 'components/common';\nimport { BUTTON, LINK } from 'constants/components';\nimport DescriptionWithBackground from '../descriptionWithBackground';\nimport {\n  DescriptionWrapper,\n  TitleElement,\n  ContinueLaterWrapper,\n  ButtonElement\n} from './StartNewAttempt.styled';\n\ntype StartNewAttemptProps = {\n  closePopup(): void;\n  popupSettings: { [key: string]: any };\n};\n\nexport const StartNewAttempt: React.FunctionComponent<StartNewAttemptProps> = (\n  props: StartNewAttemptProps\n) => {\n  const [restoreAttemptStarted, setRestoreAttemptStarted] = React.useState<boolean>(false);\n\n  const startNewAttemptHandler = async () => {\n    if (!restoreAttemptStarted) {\n      setRestoreAttemptStarted(true);\n      const { newAttempt, navigateToIndex } = props.popupSettings;\n      const { closePopup } = props;\n      await newAttempt();\n      closePopup();\n      navigateToIndex();\n    }\n  };\n\n  const renderDescription = () => (\n    <CssAnimation type={CssAnimation.AnimationType.fadeInDown}>\n      <DescriptionWrapper>\n        <DescriptionWithBackground\n          iconName=\"rounded-info\"\n          iconSize={12}\n          descriptionText={localize('[start new attempt text]')}\n        />\n      </DescriptionWrapper>\n    </CssAnimation>\n  );\n\n  return (\n    <CssAnimation type={CssAnimation.AnimationType.fadeInDown}>\n      <ContinueLaterWrapper>\n        <TitleElement appearance=\"span\" size={35}>\n          {localize('[start new attempt title]')}\n        </TitleElement>\n        {renderDescription()}\n        <ButtonElement layout={BUTTON.LAYOUT.PRIMARY} onClick={startNewAttemptHandler} tabIndex={0}>\n          {localize('[start new attempt]')}\n        </ButtonElement>\n        <Link\n          text={localize('[back to the course]')}\n          layout={LINK.LAYOUT.FORM}\n          onClick={props.closePopup}\n        />\n      </ContinueLaterWrapper>\n    </CssAnimation>\n  );\n};\n\nexport default StartNewAttempt;\n","import styled, { css } from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport { secondaryFont } from 'components/mixins/typography';\nimport { centerAbsoluteElement } from 'components/mixins/placement';\n\ntype CourseProgressProps = {\n  isPassed: boolean;\n};\n\ntype CourseProgressCircleProps = {\n  progress: number;\n  isPassed: boolean;\n};\n\nconst circleSize = '94px';\nconst iconSize = '12px';\nconst halfOfCircleSize = '47px';\n\nexport const CourseProgress = styled.div<CourseProgressProps>`\n  width: ${circleSize};\n  height: ${circleSize};\n  margin: 0 auto 30px;\n  position: relative;\n\n  &:before {\n    content: '';\n    display: block;\n    width: 1px;\n    height: 4px;\n    background: ${props => props.theme.colors.textColor};\n    position: absolute;\n    top: -1px;\n    left: 50%;\n  }\n`;\n\nexport const CourseProgressText = styled.div<CourseProgressProps>`\n  ${secondaryFont};\n  position: absolute;\n  ${centerAbsoluteElement};\n  font-size: 24px;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.5)};\n\n  span {\n    font-size: 14px;\n  }\n\n  ${props =>\n    props.isPassed &&\n    css`\n      color: ${props.theme.colors.correctColor};\n    `};\n`;\n\nexport const CourseProgressCircle = styled.div<CourseProgressCircleProps>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: ${circleSize};\n  height: ${circleSize};\n\n  border-radius: 50%;\n  padding: 0;\n  list-style: none;\n  border: none;\n\n  > * {\n    display: block;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin-top: calc(-${iconSize} / 2);\n    margin-left: calc(-${iconSize} / 2);\n    width: ${iconSize};\n    height: ${iconSize};\n    transform: rotate(${props => props.progress}deg) translate(0, -${halfOfCircleSize}) rotate(-${props => props.progress}deg);\n  }\n\n  span {\n    display: block;\n    height: ${iconSize};\n    max-width: 100%;\n    border-radius: 50%;\n    transition: 0.2s;\n    background: ${props =>\n      props.isPassed\n        ? props.theme.colors.correctColor\n        : transparentize(props.theme.colors.textColor, 0.5)};\n    padding-top: 3px;\n  }\n`;\n","import styled from 'styled-components';\n\n/* eslint-disable import/prefer-default-export */\n\ntype FigureProps = {\n  arialabel?: string;\n  role: string;\n};\nexport const Figure = styled.svg.attrs((props: FigureProps) => ({\n  role: props.role,\n  'aria-label': props.arialabel\n}))<FigureProps>`\n  max-width: 100%;\n  margin-bottom: -96px;\n`;\n","import React from 'react';\nimport { withTheme } from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport { Figure } from './Figure.styled';\n\ntype CoursePassedBackgroundProps = {\n  theme: { [key: string]: any };\n};\nexport const CoursePassedBackground = (props: CoursePassedBackgroundProps) => (\n  <Figure\n    width=\"260px\"\n    height=\"122px\"\n    viewBox=\"0 0 260 122\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    role=\"img\"\n  >\n    <defs>\n      <filter\n        id=\"prefix__a\"\n        width=\"100%\"\n        height=\"100%\"\n        x=\"0%\"\n        y=\"0%\"\n        filterUnits=\"objectBoundingBox\"\n      >\n        <feGaussianBlur in=\"SourceGraphic\" />\n      </filter>\n    </defs>\n    <g fill=\"none\" fill-rule=\"evenodd\">\n      <path\n        fill={transparentize(props.theme.colors.textColor, 1.0)}\n        d=\"M74.48.423H20.984s-9.378 1.012-9.378 8.467c0 7.454 9.378 8.466 9.378 8.466l31.828.06s7.447 1.452 7.447 7.983c0 6.53-7.447 8.466-7.447 \n        8.466H36.368s-13.348.815-13.348 8.89c0 8.074 13.348 9.312 13.348 9.312H9.479S0 53.7 0 60.473C0 67.246 9.48 69 9.48 69h207.865s11.703-1.33 \n        11.703-8.527c0-7.196-11.703-8.406-11.703-8.406H197.02s-11.868-.707-12.08-8.042c-.211-7.336 12.08-8.709 12.08-8.709l23.586-.816s12.31 1.814 \n        12.31-8.376-11.325-8.768-11.325-8.768l28.253.06S260 16.806 260 8.89C260 .973 249.844 0 249.844 0L74.479.423z\"\n        filter=\"url(#prefix__a)\"\n        opacity=\".02\"\n        transform=\"translate(0 53)\"\n      />\n      <g fill={transparentize(props.theme.colors.correctColor, 1.0)} fill-rule=\"nonzero\">\n        <path\n          d=\"M44.32 5.16c-.357.365-.52.892-.435 1.409L44.28 9l-2.076-1.148c-.22-.122-.463-.183-.705-.183-.242 0-.484.061-.705.183L38.72 \n          9l.396-2.431c.085-.517-.078-1.044-.435-1.41L37 3.438l2.321-.355c.494-.075.92-.401 1.14-.871L41.502 0l1.037 2.212c.22.47.647.796 \n          1.14.87L46 3.439l-1.68 1.721zM9.395 13.407c-.25.446-.271.997-.056 1.474l1.012 2.246-2.303-.571c-.244-.061-.494-.057-.728.005-.234.063-.452.185-.633.36l-1.709 \n          1.646-.246-2.451c-.052-.521-.346-.988-.786-1.25L1.878 13.64l2.15-.944c.458-.2.785-.625.877-1.137l.43-2.405 1.576 1.868c.334.397.83.601 1.327.546l2.334-.258-1.177 \n          2.098zM72.605 13.407c.25.446.271.997.056 1.474l-1.012 2.246 2.303-.571c.244-.061.494-.057.728.005.234.063.452.185.633.36l1.709 \n          1.646.246-2.451c.052-.521.346-.988.786-1.25l2.068-1.227-2.15-.944c-.458-.2-.785-.625-.877-1.137l-.43-2.405-1.576 \n          1.868c-.334.397-.83.601-1.327.546l-2.334-.258 1.177 2.098z\"\n          transform=\"translate(88 1)\"\n        />\n      </g>\n    </g>\n  </Figure>\n);\nexport default withTheme(CoursePassedBackground);\n","import React from 'react';\nimport { withTheme } from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport { Figure } from './Figure.styled';\n\ntype CourseFailedBackgroundProps = {\n  theme: { [key: string]: any };\n};\nexport const CourseFailedBackground = (props: CourseFailedBackgroundProps) => (\n  <Figure\n    width=\"260px\"\n    height=\"75px\"\n    viewBox=\"0 0 260 75\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    role=\"img\"\n  >\n    <defs>\n      <filter\n        id=\"prefix__a\"\n        width=\"100%\"\n        height=\"100%\"\n        x=\"0%\"\n        y=\"0%\"\n        filterUnits=\"objectBoundingBox\"\n      >\n        <feGaussianBlur in=\"SourceGraphic\" />\n      </filter>\n    </defs>\n    <path\n      fill={transparentize(props.theme.colors.textColor, 1.0)}\n      fillRule=\"evenodd\"\n      d=\"M74.48.423H20.984s-9.378 1.012-9.378 8.467c0 7.454 9.378 8.466 9.378 8.466l31.828.06s7.447 1.452 7.447 7.983c0 6.53-7.447 \n      8.466-7.447 8.466H36.368s-13.348.815-13.348 8.89c0 8.074 13.348 9.312 13.348 9.312H9.479S0 53.7 0 60.473C0 67.246 9.48 69 9.48 \n      69h207.865s11.703-1.33 11.703-8.527c0-7.196-11.703-8.406-11.703-8.406H197.02s-11.868-.707-12.08-8.042c-.211-7.336 12.08-8.709 \n      12.08-8.709l23.586-.816s12.31 1.814 12.31-8.376-11.325-8.768-11.325-8.768l28.253.06S260 16.806 260 8.89C260 .973 249.844 0 249.844 0L74.479.423z\"\n      filter=\"url(#prefix__a)\"\n      opacity=\".02\"\n      transform=\"translate(0 6)\"\n    />\n  </Figure>\n);\nexport default withTheme(CourseFailedBackground);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { transparentize } from 'utils/color';\nimport CircularProgressbar from 'react-circular-progressbar';\nimport { getColors } from 'store/settings/selectors';\nimport { Icon } from 'components/common';\nimport * as courseSelectors from 'store/course/selectors';\nimport { CIRCLE_DEGREES } from 'constants/common';\nimport { RootAppState } from 'store/types';\nimport {\n  CourseProgress,\n  CourseProgressText,\n  CourseProgressCircle\n} from './CourseProgressResult.styled';\nimport CoursePassedBackground from './CoursePassedBackground';\nimport CourseFailedBackground from './CourseFailedBackground';\n\ntype CourseProgressResultProps = {\n  masteryScore: number;\n  isPassed?: boolean;\n  score?: number;\n  colors?: { [key: string]: any };\n};\n\nexport const CourseProgressResult = ({\n  isPassed = true,\n  score = 0,\n  masteryScore = 0,\n  colors\n}: CourseProgressResultProps) => {\n  const progress = (masteryScore / 100) * CIRCLE_DEGREES;\n  return (\n    <>\n      {isPassed ? <CoursePassedBackground /> : <CourseFailedBackground />}\n      <CourseProgress isPassed={isPassed}>\n        <CourseProgressText isPassed={isPassed}>\n          {score}\n          <span>%</span>\n        </CourseProgressText>\n        <CircularProgressbar\n          strokeWidth={2}\n          percentage={score}\n          styles={{\n            path: {\n              stroke:\n                colors && (isPassed ? colors.correctColor : transparentize(colors.textColor, 0.3)),\n              strokeLinecap: 'butt',\n              transition: 'stroke-dashoffset 0.5s ease'\n            },\n            trail: {\n              stroke: colors && transparentize(colors.textColor, 0.02)\n            }\n          }}\n        />\n        <CourseProgressCircle progress={progress} isPassed={isPassed}>\n          <li>\n            <Icon name=\"ok\" size={6} color=\"buttonTextColor\" />\n          </li>\n        </CourseProgressCircle>\n      </CourseProgress>\n    </>\n  );\n};\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    colors: getColors(state),\n    isPassed: courseSelectors.isPassed(state),\n    score: courseSelectors.getScore(state)\n  };\n}\nexport default connect(mapStateToProps)(CourseProgressResult);\n","import download from 'downloadjs';\n\nexport default {\n  async loadFile(downloadUrl: any, fileName: any) {\n    const response: any = await fetch(`${downloadUrl}`).catch(er => console.error(er));\n    const blob = await response.blob();\n    const isChrome = navigator.userAgent.match('CriOS');\n    const isFirefox = navigator.userAgent.match('FxiOS');\n    // For ios and firefox chrome (Remove when webkit patch with fix is in production)\n    if (!isChrome && !isFirefox) {\n      return download(blob, fileName, blob.type);\n    }\n    const reader = new FileReader();\n    const out = new Blob([blob], { type: blob.type });\n    reader.onload = () => {\n      const win: any = window.open();\n      win.document.write(\n        `<iframe src=\"${reader.result}\" frameborder=\"0\" style=\"display: block; width: 100vw; height: 100vh; max-width: 100%;\" allowfullscreen />`\n      );\n    };\n    return reader.readAsDataURL(out);\n  }\n};\n","import requester from 'core/http/requester';\nimport progressStorage from 'core/progressStorage';\nimport { localize } from 'core/localization';\nimport { CONTENT_TYPES } from 'constants/common';\nimport { IdToUuid } from 'utils/string';\nimport fileLoader from './fileLoader';\n\nclass CertificateLoader {\n  getNewLogoUrl(logoUrl: string) {\n    const urlCheckPattern = /(http|https):\\/\\/(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-/]))?/;\n    if (logoUrl && !urlCheckPattern.test(logoUrl)) {\n      if (logoUrl.match(/\\/\\//g)) {\n        return `https:${logoUrl}`;\n      }\n      return `https://${logoUrl}`;\n    }\n    return logoUrl;\n  }\n\n  async getCertificateUrl(data: any, learnStorageUrl: any, selectedLanguage: any) {\n    const headers: any = progressStorage.getHeaders({\n      contentType: CONTENT_TYPES.JSON,\n      bearerToken: progressStorage.getToken()\n    });\n    headers['X-UI-Culture'] = selectedLanguage;\n\n    const { courseId, templateId, logoUrl } = data;\n    const logo = this.getNewLogoUrl(logoUrl);\n    const response: any = await requester.get(\n      `${learnStorageUrl}/api/learner/me/courses/${IdToUuid(courseId)}/attempts/last/certificate`,\n      {\n        query: {\n          templateId,\n          logoUrl: logo\n        },\n        headers\n      } as any\n    );\n    if (response.status !== 200) {\n      const error = response.json();\n      console.error(error.message);\n      return false;\n    }\n    const responseData = await response.json();\n    return responseData.url;\n  }\n\n  async downloadCertificate(data: any, learnStorageUrl: any, selectedLanguage: any) {\n    const downloadUrl = await this.getCertificateUrl(data, learnStorageUrl, selectedLanguage);\n    const fileName = `${localize('[certificate file name]')}.pdf`;\n    if (downloadUrl) {\n      return fileLoader.loadFile(downloadUrl, fileName);\n    }\n    return false;\n  }\n}\n\nexport default new CertificateLoader();\n","import styled from 'styled-components';\n\nconst AfterwordContainer = styled.div`\n  margin-top: 56px;\n  text-align: left;\n`;\n\nexport default AfterwordContainer;\n","import * as React from 'react';\nimport Contents from 'components/contents/Contents';\nimport * as courseSelectors from 'store/course/selectors';\nimport { connect } from 'react-redux';\n\nimport AfterwordContainer from './courseAfterword.styled';\nimport { RootAppState } from 'store/types';\n\ntype AfterwordContainerProps = {\n  isPassed: boolean;\n  passedAfterwordsIds: string[];\n  failedAfterwordsIds: string[];\n};\nexport const CourseAfterword = (props: AfterwordContainerProps) => {\n  const { isPassed, passedAfterwordsIds, failedAfterwordsIds } = props;\n  let afterWordsIds = isPassed ? passedAfterwordsIds : failedAfterwordsIds;\n\n  return (\n    <React.Fragment>\n      {afterWordsIds.length > 0 && (\n        <AfterwordContainer>\n          <Contents items={afterWordsIds} linkTabIndex={0} />\n        </AfterwordContainer>\n      )}\n    </React.Fragment>\n  );\n};\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    isPassed: courseSelectors.isPassed(state),\n    passedAfterwordsIds: courseSelectors.getPassedAfterwords(state),\n    failedAfterwordsIds: courseSelectors.getFailedAfterwords(state)\n  };\n}\n\nexport default connect(mapStateToProps)(CourseAfterword);\n","import styled from 'styled-components';\nimport { Text, Separator } from 'components/common';\nimport media from 'components/mixins/media';\n\ntype ContainerProps = {\n  logoShown?: boolean\n}\nexport const Container = styled.div<ContainerProps>`\n  text-align: center;\n  margin-top: ${props => (props.logoShown ? '0' : '40px')};\n`;\n\nexport const Figure = styled.div`\n  margin-bottom: 40px;\n`;\n\nexport const Header = styled(Text)`\n  margin-bottom: 32px;\n\n  ${media.small`\n    margin-bottom: 16px;\n  `};\n`;\n\nexport const StyledText = styled(Text)`\n  font-size: 16px;\n  color: ${props => props.theme.colors.textColor};\n\n  ${media.xlarge`\n  font-size: 16px;\n  `}\n\n  ${media.large`\n  font-size: 14px;\n  `}\n\n  ${media.mobile`\n  font-size: 13px;\n  `}\n`;\n\nexport const ButtonWrapper = styled.div`\n  margin-bottom: 20px;\n  position: relative;\n  & div[role='presentation'] {\n    display: block;\n  }\n  & button {\n    width: 100%;\n  }\n`;\n\nexport const SeparatorElement = styled(Separator)`\n  margin-top: 80px;\n  margin-bottom: 0;\n\n  ${media.mobile`\n    display: none;\n  `};\n`;\n\nexport const WidthLimiterContainer = styled.div`\n  display: inline-block;\n`;\n\nexport const AfterwordContainer = styled.div`\n  margin-top: 56px;\n`;\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { localize } from 'core/localization';\nimport Trophy from 'assets/figures/Trophy';\nimport Rocket from 'assets/figures/Rocket';\nimport SadResult from 'assets/figures/SadResult';\nimport withNavigation from 'components/hocs/withNavigation';\nimport { StatusTooltip, Button, Link, CourseLogo } from 'components/common';\nimport * as courseSelectors from 'store/course/selectors';\nimport * as courseActions from 'store/course/actions';\nimport * as popupActions from 'store/popup/actions';\nimport * as navigationActions from 'store/navigation/actions';\nimport CloseCoursePopup from 'components/popups/closeCourse';\nimport NpsPopup from 'components/popups/nps';\nimport startNewAttempt from 'components/popups/startNewAttempt';\nimport CourseProgressResult from 'components/common/CourseProgressResult';\n\nimport {\n  POPUP_ID_NPS_POPUP,\n  POPUP_ID_CLOSE_COURSE,\n  POPUP_ID_START_NEW_ATTEMPT\n} from 'constants/popups';\nimport * as settingSelectors from 'store/settings/selectors';\nimport { isAuthorized, isAnonymous } from 'store/user/selectors';\nimport { getAffectProgressSectionsCount, getSectionsPassedCount } from 'store/sections/selectors';\nimport certificateLoader from 'core/documentLoaders/certificateLoader';\nimport {\n  getAffectProgressQuestionsCount,\n  getCorrectlyAffectProgressAnsweredQuestionsCount,\n  hasReAnswerableQuestions\n} from 'store/questions/selectors';\nimport { getTimerStatus } from 'store/timer/selectors';\nimport { TimerStatus } from 'constants/timer';\nimport { BUTTON, TOOLTIP, LINK } from 'constants/components';\nimport CourseAfterword from 'components/common/courseAfterword';\nimport { isLtiInitialized } from 'store/modules/selectors';\nimport { RootAppState } from 'store/types';\nimport RemainingAttemptsBlock from 'components/remainingAttemptsBlock';\nimport { SKIP_TO_CONTENT_IDS } from 'constants/common';\nimport {\n  Container,\n  Figure,\n  Header,\n  StyledText,\n  ButtonWrapper,\n  SeparatorElement,\n  WidthLimiterContainer\n} from './ResultsPage.styled';\n\nconst MAX_SCORE = 100;\n\ntype ResultsPageProps = {\n  isPassed?: boolean;\n  isPreviewMode: boolean;\n  isReviewMode: boolean;\n  navigateToIndex(): void;\n  navigateToPrevPage(): void;\n  checkHasPrevPage(): any;\n  affectProgressQuestionsCount: number;\n  affectProgressSectionsCount: number;\n  correctlyAnsweredQuestionsCount: number;\n  title: string;\n  isScormMode: boolean;\n  isLti: boolean;\n  courseActions: { [key: string]: any };\n  courseId: string;\n  templateId: string;\n  score: number;\n  logoUrl: string;\n  logoShown: boolean;\n  isCrossDeviceSavingEnabled: boolean;\n  learnStorageUrl: string;\n  selectedLanguage: string;\n  courseHasBeenContinued: boolean;\n  userAuthorized: boolean;\n  isAllowedDownloadCertificate: boolean;\n  certificateDownloaded: boolean;\n  popupActions: { [key: string]: any };\n  isNpsEnabled: boolean;\n  isOverallMasteryScore: boolean;\n  masteryScore: number;\n  sectionsPassedCount: number;\n  isInProgress?: boolean;\n  shouldSubmitAllQuestions: boolean;\n  isFailed?: boolean;\n  navigationActions: { [key: string]: any };\n  isAttemptsLimited?: boolean;\n  isAnonymous?: boolean;\n  hasReanswerableQuestions?: boolean;\n  limitedAttemptsNumber: number;\n  attemptsUsed: number;\n  timerStatus: TimerStatus;\n};\n\ntype ResultsPageState = {\n  isCertificateLoading: boolean;\n  showCertificateLoadedError: boolean;\n  npsPopupWasOpened: boolean;\n};\nexport class ResultsPage extends PureComponent<ResultsPageProps, ResultsPageState> {\n  constructor(props: ResultsPageProps) {\n    super(props);\n    this.state = {\n      isCertificateLoading: false,\n      showCertificateLoadedError: false,\n      npsPopupWasOpened: false\n    };\n  }\n\n  continueCourse = () => {\n    const { checkHasPrevPage, navigateToPrevPage, navigateToIndex } = this.props;\n    if (checkHasPrevPage()) {\n      navigateToPrevPage();\n    } else {\n      navigateToIndex();\n    }\n  };\n\n  openNpsPopup({ certificateButton = false } = {}) {\n    this.props.popupActions.openPopup({\n      popupId: POPUP_ID_NPS_POPUP,\n      popupAriaLabelKey: '[aria label close nps popup]',\n      component: NpsPopup,\n      fromDownloadCertificateButton: certificateButton,\n      disablePopupClosing: true,\n      disableBottomLine: true\n    });\n    this.setState({ npsPopupWasOpened: true });\n  }\n\n  startNewAttempt = async () => {\n    const { navigateToIndex } = this.props;\n    await this.props.courseActions.startNewAttempt();\n    navigateToIndex();\n  };\n\n  openStartNewAttemptPopup = () => {\n    const { navigateToIndex } = this.props;\n    this.props.popupActions.openPopup({\n      popupId: POPUP_ID_START_NEW_ATTEMPT,\n      popupAriaLabelKey: '[aria label start new attempt popup]',\n      component: startNewAttempt,\n      newAttempt: this.props.courseActions.startNewAttempt,\n      navigateToIndex,\n      disablePopupClosing: false,\n      disableBottomLine: true\n    });\n  };\n\n  submitResults = async () => {\n    await this.props.courseActions.finished();\n\n    if (!this.props.isNpsEnabled) {\n      this.props.popupActions.openPopup({\n        popupId: POPUP_ID_CLOSE_COURSE,\n        popupAriaLabelKey: '[aria label close course popup]',\n        component: CloseCoursePopup,\n        disablePopupClosing: true\n      });\n      await this.props.courseActions.finalized();\n    }\n\n    if (this.props.isNpsEnabled) {\n      this.openNpsPopup();\n    }\n  };\n\n  downloadCertificate = async () => {\n    const data = {\n      courseId: this.props.courseId,\n      templateId: this.props.templateId,\n      courseTitle: this.props.title,\n      score: this.props.score,\n      logoUrl: this.props.logoUrl\n    };\n    this.setState({ isCertificateLoading: true });\n\n    const isCertificateDownloaded = await certificateLoader.downloadCertificate(\n      data,\n      this.props.learnStorageUrl,\n      this.props.selectedLanguage\n    );\n    await this.props.courseActions.certificateDownloaded(isCertificateDownloaded);\n    this.setState({\n      isCertificateLoading: false,\n      showCertificateLoadedError: !isCertificateDownloaded\n    });\n\n    if (this.props.isNpsEnabled && !this.state.npsPopupWasOpened) {\n      this.openNpsPopup({ certificateButton: true });\n    }\n  };\n\n  closeCourse = () => {\n    const { isNpsEnabled, userAuthorized } = this.props;\n    this.props.popupActions.openPopup({\n      popupId:\n        isNpsEnabled && !this.state.npsPopupWasOpened ? POPUP_ID_NPS_POPUP : POPUP_ID_CLOSE_COURSE,\n      popupAriaLabelKey:\n        isNpsEnabled && !this.state.npsPopupWasOpened\n          ? '[aria label close nps popup]'\n          : '[aria label close course popup]',\n      component:\n        isNpsEnabled && userAuthorized && !this.state.npsPopupWasOpened\n          ? NpsPopup\n          : CloseCoursePopup,\n      disablePopupClosing: true,\n      disableBottomLine: isNpsEnabled\n    });\n  };\n\n  hidePopover = async () => {\n    this.setState({ showCertificateLoadedError: false });\n  };\n\n  componentDidMount() {\n    document.title = `${localize('[title for results page]')} | ${this.props.title}`;\n  }\n\n  renderSubmitAtOnceButton() {\n    const {\n      isAttemptsLimited,\n      limitedAttemptsNumber,\n      attemptsUsed,\n      isInProgress,\n      isScormMode,\n      isLti\n    } = this.props;\n    return (\n      <>\n        {isAttemptsLimited &&\n          limitedAttemptsNumber - attemptsUsed > 0 &&\n          this.submitAtOnceStartNewAttemptButton()}\n        {!isAttemptsLimited && this.submitAtOnceStartNewAttemptButton()}\n        {!isInProgress && !isScormMode && !isLti && this.renderCloseCourseButton()}\n      </>\n    );\n  }\n\n  renderQuestionSubmitButton() {\n    const {\n      isPassed,\n      isScormMode,\n      isLti,\n      isAttemptsLimited,\n      isPreviewMode,\n      isReviewMode,\n      isInProgress,\n      hasReanswerableQuestions,\n      score,\n      timerStatus\n    } = this.props;\n    const isTimerStopped = timerStatus === TimerStatus.STOPPED;\n    return (\n      <>\n        {isInProgress ||\n        (isAttemptsLimited && score < MAX_SCORE && hasReanswerableQuestions && !isTimerStopped)\n          ? this.renderContinueCourseButton()\n          : ''}\n        {!isInProgress && !isScormMode && !isLti && this.renderCloseCourseButton()}\n        {!isAttemptsLimited &&\n          !isPassed &&\n          isPreviewMode &&\n          isReviewMode &&\n          this.submitAtOnceStartNewAttemptButton()}\n        {!isPreviewMode &&\n          !isReviewMode &&\n          !isAttemptsLimited &&\n          isPassed &&\n          this.renderStartNewAttemptButton()}\n      </>\n    );\n  }\n\n  renderDownloadCertificateButton() {\n    const { courseHasBeenContinued, certificateDownloaded } = this.props;\n    return (\n      <ButtonWrapper>\n        <StatusTooltip\n          popoverPosition={'top'}\n          layout={TOOLTIP.INCORRECT}\n          onRequestClose={this.hidePopover}\n          showTooltip={this.state.showCertificateLoadedError}\n          message={localize('[certificate failed load]')}\n          popoverButton={\n            <Button\n              type=\"submit\"\n              layout={courseHasBeenContinued || certificateDownloaded ? 'secondary' : 'primary'}\n              tabIndex={0}\n              onClick={this.downloadCertificate}\n              isLoading={this.state.isCertificateLoading}\n              onBlur={this.hidePopover}\n            >\n              {localize('[download certificate]')}\n            </Button>\n          }\n        />\n      </ButtonWrapper>\n    );\n  }\n\n  renderCloseCourseButton() {\n    return (\n      <ButtonWrapper>\n        <Button layout={'secondary'} tabIndex={0} onClick={this.closeCourse}>\n          {localize('[close course]')}\n        </Button>\n      </ButtonWrapper>\n    );\n  }\n\n  renderContinueCourseButton() {\n    return (\n      <ButtonWrapper>\n        <Button tabIndex={0} onClick={this.continueCourse}>\n          {localize('[continue course]')}\n        </Button>\n      </ButtonWrapper>\n    );\n  }\n\n  renderStartNewAttemptButton() {\n    return (\n      <Link\n        text={localize('[start new attempt]')}\n        layout={LINK.LAYOUT.FORM}\n        onClick={this.openStartNewAttemptPopup}\n        tabIndex={0}\n      />\n    );\n  }\n\n  submitAtOnceStartNewAttemptButton() {\n    return (\n      <ButtonWrapper>\n        <Button layout={BUTTON.LAYOUT.PRIMARY} tabIndex={0} onClick={this.startNewAttempt}>\n          {localize('[start new attempt]')}\n        </Button>\n        <RemainingAttemptsBlock />\n      </ButtonWrapper>\n    );\n  }\n\n  renderSubmitResultsButton() {\n    const { isPassed } = this.props;\n\n    return (\n      <ButtonWrapper>\n        <Button\n          layout={isPassed ? 'primary' : 'secondary'}\n          tabIndex={0}\n          onClick={this.submitResults}\n        >\n          {localize('[submit results]')}\n        </Button>\n      </ButtonWrapper>\n    );\n  }\n\n  renderMyCourseButton() {\n    const { learnStorageUrl, navigationActions } = this.props;\n    return (\n      <ButtonWrapper>\n        <Button\n          layout=\"primary\"\n          tabIndex={0}\n          onClick={() => navigationActions.goToUrl(learnStorageUrl)}\n          data-test=\"my-courses-button\"\n        >\n          {localize('[my courses]')}\n        </Button>\n      </ButtonWrapper>\n    );\n  }\n\n  mainFigure = () => {\n    const {\n      isPassed,\n      isInProgress,\n      isFailed,\n      affectProgressQuestionsCount,\n      isOverallMasteryScore,\n      masteryScore\n    } = this.props;\n    return affectProgressQuestionsCount > 0 && isOverallMasteryScore ? (\n      <Figure>\n        <CourseProgressResult masteryScore={masteryScore} />\n      </Figure>\n    ) : (\n      <Figure>\n        {isPassed && !isOverallMasteryScore && <Trophy />}\n        {isInProgress && !isOverallMasteryScore && <Rocket />}\n        {isFailed && !isOverallMasteryScore && <SadResult />}\n        {isOverallMasteryScore && <CourseProgressResult masteryScore={masteryScore} />}\n      </Figure>\n    );\n  };\n\n  headerText = () => {\n    const { isPassed, isInProgress, isFailed } = this.props;\n    return (\n      <Header appearance=\"h2\" id={SKIP_TO_CONTENT_IDS.RESULT_PAGE} ignoreFocus={true}>\n        {isPassed && localize('[congratulations]')}\n        {isInProgress && localize('[course is not passed yet]')}\n        {isFailed && localize('[course is not passed]')}\n      </Header>\n    );\n  };\n\n  coursePassStatusText = () => {\n    const { shouldSubmitAllQuestions, isOverallMasteryScore, score } = this.props;\n\n    if (shouldSubmitAllQuestions && isOverallMasteryScore) {\n      return localize('[you successfully passed the course with a score of x]', { score });\n    }\n    return localize('[you passed the course successfully]');\n  };\n\n  courseStatusText = () => {\n    const { isPassed, isInProgress, isFailed } = this.props;\n    return (\n      <StyledText>\n        {isPassed && this.coursePassStatusText()}\n        {isInProgress && localize('[you have not passed the course yet]')}\n        {isFailed && localize('[you have not passed the course]')}\n      </StyledText>\n    );\n  };\n\n  canNavigateToMyCourses = () => {\n    const { isAnonymous, isFailed, isScormMode, isPreviewMode, isLti } = this.props;\n    return !isAnonymous && isFailed && !isScormMode && !isPreviewMode && !isLti;\n  };\n\n  render() {\n    const {\n      isPassed,\n      affectProgressQuestionsCount,\n      correctlyAnsweredQuestionsCount,\n      isScormMode,\n      isLti,\n      isAllowedDownloadCertificate,\n      userAuthorized,\n      isCrossDeviceSavingEnabled,\n      affectProgressSectionsCount,\n      isOverallMasteryScore,\n      sectionsPassedCount,\n      logoUrl,\n      logoShown,\n      isFailed,\n      isAttemptsLimited,\n      shouldSubmitAllQuestions\n    } = this.props;\n    return (\n      <Container logoShown={logoShown}>\n        {logoShown && <CourseLogo logoUrl={logoUrl} />}\n        {this.mainFigure()}\n        {this.headerText()}\n        {this.courseStatusText()}\n        &nbsp;\n        {isAttemptsLimited && isFailed && (\n          <StyledText>{localize('[all attempts has been used]')}&nbsp;</StyledText>\n        )}\n        {affectProgressQuestionsCount > 0 && isOverallMasteryScore && (\n          <StyledText>\n            {localize('[you correctly answered X questions out of Y]', {\n              correctQuestionsCount: correctlyAnsweredQuestionsCount,\n              totalQuestionsCount: affectProgressQuestionsCount\n            })}\n          </StyledText>\n        )}\n        {affectProgressSectionsCount > 0 && !isOverallMasteryScore && (\n          <StyledText>\n            {localize('[you passed X out of Y sections]', {\n              correctSectionsCount: sectionsPassedCount,\n              totalSectionsCount: affectProgressSectionsCount\n            })}\n          </StyledText>\n        )}\n        <Container>\n          <WidthLimiterContainer>\n            {isAllowedDownloadCertificate &&\n              isPassed &&\n              userAuthorized &&\n              isCrossDeviceSavingEnabled &&\n              !isScormMode &&\n              this.renderDownloadCertificateButton()}\n            {!shouldSubmitAllQuestions && this.renderQuestionSubmitButton()}\n            {this.canNavigateToMyCourses() && this.renderMyCourseButton()}\n            {shouldSubmitAllQuestions && this.renderSubmitAtOnceButton()}\n            {(isScormMode || isLti) && this.renderSubmitResultsButton()}\n          </WidthLimiterContainer>\n          <CourseAfterword />\n        </Container>\n        <SeparatorElement />\n      </Container>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    isPassed: courseSelectors.isPassed(state),\n    isPreviewMode: settingSelectors.isPreviewMode(state),\n    isReviewMode: settingSelectors.isReviewMode(state),\n    title: courseSelectors.getCourseTitle(state),\n    affectProgressQuestionsCount: getAffectProgressQuestionsCount(state),\n    affectProgressSectionsCount: getAffectProgressSectionsCount(state),\n    correctlyAnsweredQuestionsCount: getCorrectlyAffectProgressAnsweredQuestionsCount(state),\n    isScormMode: settingSelectors.isScormMode(state),\n    isLti: isLtiInitialized(state),\n    courseId: courseSelectors.getCourseId(state),\n    templateId: courseSelectors.getTemplateId(state),\n    score: courseSelectors.getScore(state),\n    logoUrl: settingSelectors.getLogo(state),\n    logoShown: settingSelectors.isMainLogoShown(state),\n    isCrossDeviceSavingEnabled: settingSelectors.isCrossDeviceSavingEnabled(state),\n    learnStorageUrl: settingSelectors.getLearnServiceUrl(state),\n    selectedLanguage: settingSelectors.getSelectedLanguage(state),\n    courseHasBeenContinued: courseSelectors.hasBeenContinued(state),\n    userAuthorized: isAuthorized(state),\n    isAllowedDownloadCertificate: settingSelectors.isAllowedDownloadCertificate(state),\n    certificateDownloaded: courseSelectors.isCertificateDownloaded(state),\n    isNpsEnabled: settingSelectors.isNpsEnabled(state),\n    isOverallMasteryScore: settingSelectors.isOverallMasteryScore(state),\n    sectionsPassedCount: getSectionsPassedCount(state),\n    isInProgress: courseSelectors.isInProgress(state),\n    isAttemptsLimited: settingSelectors.isAttemptsLimited(state),\n    masteryScore: settingSelectors.getMasteryScoreValue(state),\n    hasReanswerableQuestions: hasReAnswerableQuestions(state),\n    shouldSubmitAllQuestions: settingSelectors.shouldSubmitAllQuestions(state),\n    limitedAttemptsNumber: settingSelectors.getLimitedAttemptsNumber(state),\n    isAnonymous: isAnonymous(state),\n    isFailed: courseSelectors.isFailed(state),\n    attemptsUsed: courseSelectors.getCourseAttempt(state),\n    timerStatus: getTimerStatus(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    courseActions: bindActionCreators(courseActions, dispatch),\n    navigationActions: bindActionCreators(navigationActions, dispatch),\n    popupActions: bindActionCreators(popupActions, dispatch)\n  };\n}\n\nexport default withNavigation(connect(mapStateToProps, mapDispatchToProps)(ResultsPage));\n","import styled, { css } from 'styled-components';\nimport media from 'components/mixins/media';\nimport { Z_INDEX, TOC } from 'constants/components';\nimport { MEDIA_TABLET, MEDIA_LARGE, MEDIA_XLARGE } from 'constants/screenResolutions';\nimport { getCustomScrollbars } from 'components/mixins/customScrollbars';\nimport { transition, pointerOnHover } from 'components/mixins/interactivity';\nimport { PageSidebar, PageContent } from 'components/shell/Layout';\nimport { PageContentChild } from 'components/shell/Layout/Layout.styled';\nimport { bodyBackground } from 'components/mixins/backgrounds';\nimport { transparentize } from 'utils/color';\n\ntype BlockoutProps = {\n  ariaHidden: any;\n  isTreeOfContentExpanded: boolean;\n};\n\nexport const Blockout = styled.div.attrs((props: BlockoutProps) => ({\n  'aria-hidden': props.ariaHidden\n}))<BlockoutProps>`\n  position: absolute;\n  right: 0;\n  top: 0;\n  z-index: ${Z_INDEX.BLOCKOUT};\n  opacity: 0;\n  background-color: ${props => transparentize(props.theme.colors.contentBodyColor, 0.9)};\n  ${transition('opacity')};\n  ${pointerOnHover()};\n  ${(props: BlockoutProps) =>\n    props.isTreeOfContentExpanded &&\n    css`\n      ${media.tablet`\n      width: 100%;\n      height: 100vh;\n      opacity: 1;\n    `}\n    `};\n`;\n\ntype CourseOverviewSidebarProps = {\n  isTreeOfContentExpanded: boolean;\n  background: any;\n};\n\nexport const CourseOverviewSidebar = styled(PageSidebar)<CourseOverviewSidebarProps>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: ${Z_INDEX.TOC};\n  width: ${TOC.EXPANDED_WIDTH}px;\n  height: 100%;\n  ${transition('left, transform')};\n  ${props => bodyBackground(props.background.body)};\n  ${media.small`\n    position: fixed;\n  `};\n  ${media.tablet`\n    & [data-sidebar-child]{\n      height: 100%;\n    }\n  `};\n  ${props =>\n    props.isTreeOfContentExpanded &&\n    css`\n      @media (max-width: ${TOC.EXPANDED_WIDTH + TOC.TAIL_WIDTH}px) {\n        width: auto;\n        right: 30px;\n      }\n    `};\n  ${props =>\n    !props.isTreeOfContentExpanded &&\n    css`\n      left: -${TOC.EXPANDED_WIDTH}px;\n      ${media.xsmall`\n        left: 0;\n        transform: translateX(-100%);\n      `};\n    `};\n`;\n\ntype CourseOverviewContentProps = {\n  background: any;\n  isTreeOfContentExpanded: boolean;\n};\n\nexport const CourseOverviewContent = styled(PageContent)<CourseOverviewContentProps>`\n  position: absolute;\n  top: 0;\n  left: ${TOC.EXPANDED_WIDTH}px;\n  width: calc(100% - ${TOC.EXPANDED_WIDTH}px);\n  height: 100%;\n  ${props => bodyBackground(props.background.body)};\n  ${transition('left, width')};\n  ${props =>\n    !props.isTreeOfContentExpanded &&\n    css`\n      left: 0 !important;\n      width: 100% !important;\n    `};\n  ${media.tablet`\n    width: 100% !important;\n    left: 0 !important;\n  `};\n\n  & ${PageContentChild} {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const PageContainer = styled.div`\n  max-height: 100vh;\n  margin: 0 auto;\n`;\n\ntype ContentContainerProps = {\n  logoShown: boolean;\n  isTreeOfContentExpanded: boolean;\n  isCourseOnOnePage?: boolean;\n  dynamicHeight: number;\n  isOnOnePageView: boolean;\n};\n\nexport const ContentContainer = styled.section<ContentContainerProps>`\n  width: ${props => (props.isCourseOnOnePage && props.isOnOnePageView ? `${100}%` : `${880}px`)};\n  height: ${props =>\n    props.isCourseOnOnePage && props.isOnOnePageView ? `${props.dynamicHeight - 1}px` : 'inherit'};\n  padding: ${props => {\n    if (props.isCourseOnOnePage && props.isOnOnePageView) {\n      return '0';\n    }\n    return props.logoShown ? '0 0 120px 0' : '70px 0 120px 0';\n  }};\n  margin-right: auto !important;\n  margin-left: auto !important;\n  position: relative;\n\n  &:focus {\n    outline: none;\n  }\n\n  @media (max-width: ${MEDIA_XLARGE}px) {\n    width: ${props => (props.isCourseOnOnePage && props.isOnOnePageView ? `${100}%` : `${750}px`)};\n  }\n\n  @media (max-width: ${props =>\n      props.isTreeOfContentExpanded ? MEDIA_LARGE - 40 : MEDIA_TABLET}px) {\n    width: ${props => (props.isCourseOnOnePage && props.isOnOnePageView ? `${100}%` : `${560}px`)};\n  }\n\n  ${media.small`\n    width: 100%;\n  `};\n\n  ${props =>\n    props.logoShown\n      ? css`\n          ${media.small`\n      padding: 0 30px 80px 30px;\n    `}\n        `\n      : css`\n          ${media.small`\n      padding: 50px 30px 80px 30px;\n    `}\n        `}\n`;\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  ${getCustomScrollbars()}\n  overflow-x: hidden;\n  background-color: ${props => props.theme.colors.secondaryColor};\n  -webkit-overflow-scrolling: touch;\n  ${media.small`\n    position: fixed;\n  `};\n`;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { TransitionGroup, Transition } from 'react-transition-group';\nimport { TweenMax } from 'gsap';\nimport { getChain } from 'store/navigation/selectors';\nimport { history } from 'store';\nimport { RootAppState } from 'store/types';\nimport { isLearningObjectiveView, isQuestionView } from 'components/shell/RouteTransition/viewChecker';\nimport { CourseOverviewContent } from './CourseOverview.styled';\n\n\nexport const COURSE_OVERVIEW_TRANSITION_DURATION = 0.4;\n\nexport const COURSE_OVERVIEW_TRANSITION_TIMEOUT = 1000;\n\ntype CourseOverviewRouteTransitionProps = {\n  children: any;\n  location: { [key: string]: any };\n  isTreeOfContentExpanded: boolean;\n  background: { [key: string]: any };\n  urlsChain: any[];\n  isCourseOnOnePage: boolean;\n};\n\nexport class CourseOverviewRouteTransition extends Component<\n  CourseOverviewRouteTransitionProps,\n  {}\n> {\n  prevUrl: string;\n\n  unlistenHistory: any;\n\n  constructor(props: CourseOverviewRouteTransitionProps) {\n    super(props);\n    this.prevUrl = '';\n    this.unlistenHistory = '';\n  }\n\n  componentDidMount() {\n    const { location } = this.props;\n    this.prevUrl = location.pathname;\n    this.unlistenHistory = history.listen(listenLocation => {\n      this.prevUrl = listenLocation.pathname;\n    });\n  }\n\n  componentWillUnmount() {\n    this.unlistenHistory();\n  }\n\n  getTransitionKey = (pathname: any) => {\n    if (\n      this.props.isCourseOnOnePage &&\n      (isQuestionView.test(pathname) || isLearningObjectiveView.test(pathname))\n    ) {\n      return 'courseOnOnePage';\n    }\n    return pathname;\n  };\n\n  onEnter = (node: any, isAppearing: any) => {\n    const { location, urlsChain } = this.props;\n    if (isAppearing) {\n      return undefined;\n    }\n    if (urlsChain.indexOf(this.prevUrl) < urlsChain.indexOf(location.pathname)) {\n      TweenMax.fromTo(\n        node,\n        COURSE_OVERVIEW_TRANSITION_DURATION,\n        { opacity: 0, y: 300 },\n        { opacity: 1, y: 0, delay: COURSE_OVERVIEW_TRANSITION_DURATION, clearProps: 'transform' }\n      );\n    } else {\n      TweenMax.fromTo(\n        node,\n        COURSE_OVERVIEW_TRANSITION_DURATION,\n        { opacity: 0, y: -300 },\n        { opacity: 1, y: 0, delay: COURSE_OVERVIEW_TRANSITION_DURATION, clearProps: 'transform' }\n      );\n    }\n    return null;\n  };\n\n  onExit = (node: any) => {\n    const { location, urlsChain } = this.props;\n    if (urlsChain.indexOf(this.prevUrl) < urlsChain.indexOf(location.pathname)) {\n      TweenMax.fromTo(\n        node,\n        COURSE_OVERVIEW_TRANSITION_DURATION,\n        { opacity: 1, y: 0 },\n        { opacity: 0, y: -300, clearProps: 'transform' }\n      );\n    } else {\n      TweenMax.fromTo(\n        node,\n        COURSE_OVERVIEW_TRANSITION_DURATION,\n        { opacity: 1, y: 0 },\n        { opacity: 0, y: 300, clearProps: 'transform' }\n      );\n    }\n  };\n\n  render() {\n    const { children, location, isTreeOfContentExpanded, background } = this.props;\n    return (\n      <TransitionGroup\n        component={CourseOverviewContent}\n        isTreeOfContentExpanded={isTreeOfContentExpanded}\n        background={background}\n      >\n        <Transition\n          key={this.getTransitionKey(location.pathname)}\n          in\n          appear={false}\n          onEnter={this.onEnter}\n          onExit={this.onExit}\n          timeout={COURSE_OVERVIEW_TRANSITION_TIMEOUT}\n        >\n          {children}\n        </Transition>\n      </TransitionGroup>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    urlsChain: getChain(state)\n  };\n}\n\nexport default connect(mapStateToProps)(CourseOverviewRouteTransition);\n","import { ActionTypes } from './types';\nimport { ThunkResult } from '../../types';\n\nexport const toggleAnswerIsSelected = (questionId: string, answerId: string): ThunkResult => dispatch => {\n  dispatch({\n    type: ActionTypes.QUESTION_MULTIPLECHOICE_TOGGLE_ANSWER_IS_SELECTED,\n    payload: { questionId, answerId }\n  });\n};\n\nexport const setSingleAnswerSelected = (questionId: string, answerId: string, questionType: string): ThunkResult => dispatch => {\n\n  switch (questionType) {\n    case ActionTypes.QUESTION_MULTIPLECHOICE_SET_SINGLE_ANSWER_SELECTED:\n      dispatch({\n        type: ActionTypes.QUESTION_MULTIPLECHOICE_SET_SINGLE_ANSWER_SELECTED,\n        payload: { questionId, answerId }\n      });\n      break;\n    case ActionTypes.SET_SINGLE_ANSWER_SELECTED:\n      dispatch({\n        type: ActionTypes.SET_SINGLE_ANSWER_SELECTED,\n        payload: { questionId, answerId }\n      });\n      break;\n    default:\n      dispatch({\n        type: ActionTypes.QUESTION_MULTIPLECHOICE_SET_SINGLE_ANSWER_SELECTED,\n        payload: { questionId, answerId }\n      });\n  }\n};\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { getUserAnswers } from 'store/questions/multipleChoice/selectors';\nimport { MultipleChoiceItems } from 'components/common';\nimport * as actions from 'store/questions/multipleChoice/actions';\nimport { RootAppState } from 'store/types';\nimport * as questionActions from '../../../store/questions/actions';\n\ninterface MultipleChoiceProps {\n  id: string;\n  type: string;\n  isSingleAnswer: boolean;\n  answers?: any[];\n  actions?: { [key: string]: any };\n  questionActions?: { [key: string]: any };\n  allowSubmit: boolean;\n  isAnswered: boolean;\n}\n\nexport class MultipleChoice extends React.Component<MultipleChoiceProps, {}> {\n  static defaultProps = {\n    isSingleAnswer: false,\n    answers: []\n  };\n  selectItem = (id: string, itemId: string, isMultiple: boolean) => {\n    if (isMultiple) {\n      this.props.actions && this.props.actions.toggleAnswerIsSelected(id, itemId);\n    } else {\n      this.props.actions &&\n        this.props.actions.setSingleAnswerSelected(\n          id,\n          itemId,\n          'QUESTION_MULTIPLECHOICE_SET_SINGLE_ANSWER_SELECTED'\n        );\n    }\n    if (this.props.allowSubmit) {\n      this.props.questionActions && this.props.questionActions.answerBeforeSubmit(id);\n    }\n  };\n\n  render() {\n    const { answers = [], isAnswered } = this.props;\n    return (\n      <MultipleChoiceItems\n        items={answers}\n        isMultiple={!this.props.isSingleAnswer}\n        selectItem={this.selectItem}\n        id={this.props.id}\n        ariaDisabled={isAnswered}\n        tabIndex={0}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: MultipleChoiceProps) {\n  return {\n    answers: getUserAnswers(state, ownProps.id)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch),\n    questionActions: bindActionCreators(questionActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MultipleChoice);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { getUserAnswers } from 'store/questions/multipleChoice/selectors';\nimport { MultipleChoiceItems } from 'components/common';\nimport * as actions from 'store/questions/multipleChoice/actions';\nimport { RootAppState } from 'store/types';\nimport * as questionActions from '../../../store/questions/actions';\n\ntype SingleChoiceImageProps = {\n  id: string;\n  type: string;\n  answers?: Array<any>;\n  actions?: { [key: string]: any };\n  questionActions?: { [key: string]: any };\n  allowSubmit: boolean;\n  isAnswered: boolean;\n};\nexport class SingleChoiceImage extends React.Component<SingleChoiceImageProps, {}> {\n  selectItem = (id: string, itemId: string) => {\n    this.props.actions &&\n      this.props.actions.setSingleAnswerSelected(id, itemId, 'SET_SINGLE_ANSWER_SELECTED');\n    if (this.props.allowSubmit) {\n      this.props.questionActions && this.props.questionActions.answerBeforeSubmit(id);\n    }\n  };\n\n  render() {\n    const { answers, isAnswered } = this.props;\n    return (\n      <MultipleChoiceItems\n        items={answers || []}\n        selectItem={this.selectItem}\n        id={this.props.id}\n        imageQuestion\n        ariaDisabled={isAnswered}\n        tabIndex={0}\n        isMultiple={false}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: SingleChoiceImageProps) {\n  return {\n    answers: getUserAnswers(state, ownProps.id)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch),\n    questionActions: bindActionCreators(questionActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleChoiceImage);\n","import styled from 'styled-components';\nimport { transparentize } from 'utils/color';\n\nexport const QuestionContainer = styled.section.attrs({\n  'data-test': 'question-container'\n})`\n  position: relative;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\ntype QuestionContainerOverlayProps = {\n  isShown: boolean;\n  bodyBackground: any;\n}\nexport const QuestionContainerOverlay = styled.div.attrs(props => ({\n  'data-test': 'question-overlay'\n})) <QuestionContainerOverlayProps>`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1;\n  display: ${props => (props.isShown ? 'block' : 'none')};\n  background-color: ${props =>\n    transparentize(\n      props.bodyBackground && props.bodyBackground.color ? props.bodyBackground.color : '#fff',\n      0.5\n    )};\n`;\n","import { ActionTypes } from './types';\nimport { ThunkResult } from '../../types';\n\nexport const statementAnswerIsSelected = (questionId: string, answerId: string, isCorrect: boolean): ThunkResult => dispatch => {\n  dispatch({\n    type: ActionTypes.QUESTION_STATEMENT_ANSWER_IS_SELECTED,\n    payload: { questionId, answerId, isCorrect }\n  });\n};\n","import styled from 'styled-components';\nimport media from 'components/mixins/media';\n\nexport const SwitchBlock = styled.div`\n  width: auto;\n  display: flex;\n  align-self: flex-start;\n  position: absolute;\n  top: 50%;\n  left: 10px;\n  margin-top: -15px;\n  ${media.mobile`\n    align-self: auto;\n    position: static;\n    margin-top: 0;\n  `};\n`;\n\nexport default SwitchBlock;\n","import * as React from 'react';\nimport { SwitchBlock } from './Switch.styled';\n\ntype SwitchContainerProps = {\n  children: any;\n};\n\nexport const SwitchContainer = (props: SwitchContainerProps) => <SwitchBlock>{props.children}</SwitchBlock>;\n\nexport default SwitchContainer;\n","const aux = (props: any) => props.children;\nexport default aux;\n","import styled from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport media from 'components/mixins/media';\nimport buttonDefaultStyle from 'components/mixins/normalize';\n\ntype SwitchOptionProps = {\n  role: string;\n  tabIndex: number;\n  selected: any;\n  ariaDisable: boolean;\n  ariaLabel: string;\n  ariaChecked: boolean;\n}\n\nexport const SwitchOption = styled.button.attrs((props: SwitchOptionProps) => ({\n  role: props.role,\n  'aria-disabled': props.ariaDisable,\n  'aria-label': props.ariaLabel,\n  'aria-checked': props.ariaChecked,\n  tabIndex: props.tabIndex\n})) <SwitchOptionProps>`\n  ${buttonDefaultStyle};\n  flex-shrink: 0;\n  align-self: self-start;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 29px;\n  width: 30px;\n  height: 30px;\n  background-color: ${props =>\n    props.selected\n      ? props.theme.colors.mainColor\n      : transparentize(props.theme.colors.textColor, 0.06)};\n  border-radius: 50%;\n  cursor: pointer;\n\n  &:before {\n    content: '';\n    display: inline-block;\n    width: 10px;\n    height: 10px;\n    background-color: ${props =>\n    props.selected\n      ? props.theme.colors.buttonTextColor\n      : transparentize(props.theme.colors.textColor, 0.01)};\n    border-radius: 50%;\n  }\n  &:hover,\n  &:focus {\n    &:before {\n      background-color: ${props =>\n    props.selected\n      ? props.theme.colors.buttonTextColor\n      : transparentize(props.theme.colors.textColor, 0.2)};\n    }\n  }\n\n  ${media.mobile`\n    margin-bottom: 16px;\n    margin-right: 0;\n    &:first-of-type {\n      margin-right: 16px;\n    }\n    &:last-of-type {\n      margin-left: 16px;\n      margin-right: 6px;\n    }\n  `};\n`;\n\nexport default SwitchOption;\n","import * as React from 'react';\nimport Aux from '../../../common/helpers/AuxWrapper';\nimport { SwitchOption } from './Option.styled';\n\ntype OptionProps = {\n  onClick?(): void,\n  selected: boolean;\n  ariaRole: string;\n  ariaLabel: string;\n  tabIndex: number;\n  ariaDisable: boolean;\n};\n\nexport const Option = (props: OptionProps) => {\n  const { onClick, selected, ariaRole, ariaLabel, tabIndex, ariaDisable } = props;\n  return (\n    <Aux>\n      <SwitchOption\n        role={ariaRole}\n        ariaLabel={ariaLabel}\n        ariaChecked={selected}\n        onClick={onClick}\n        selected={selected}\n        tabIndex={tabIndex}\n        ariaDisable={ariaDisable}\n      />\n    </Aux>\n  );\n};\n\nexport default Option;\n","import styled from 'styled-components';\n\ntype MobileAnswerSeparatorProps = {\n  margin?: number;\n  height?: number;\n  opacity?: number;\n  color: string;\n};\n\nconst DEFAULT_PROPS = {\n  MARGIN: 32,\n  HEIGHT: 2,\n  OPACITY: 0.08\n}\n\nexport const MobileAnswerSeparator = styled.div<MobileAnswerSeparatorProps>`\n  position: relative;\n  width: 60px;\n  height: ${props => (props.height || DEFAULT_PROPS.HEIGHT) + (props.margin || DEFAULT_PROPS.MARGIN) * 2}px;\n\n  &:after {\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: ${props => props.height || DEFAULT_PROPS.HEIGHT}px;\n    top: 50%;\n    transform: translateY(-50%);\n    left: 0;\n    background-color: ${props =>\n    props.theme.colors[props.color]\n      ? props.theme.colors[props.color]\n      : props.theme.colors.ctaButtonColor};\n    opacity: ${props => (props.opacity ? props.opacity : 0.08)};\n  }\n`;\n\nexport default MobileAnswerSeparator;\n","import styled, { css } from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport { Text } from 'components/common';\nimport media from 'components/mixins/media';\nimport { secondaryFont, bold } from 'components/mixins/typography';\nimport Switch from './Switch/Switch.styled';\nimport MobileAnswerSeparator from './MobileAnswerSeparator';\n\ntype AnswerTextProps = {\n  id: string;\n}\nexport const AnswerText = styled(Text) <AnswerTextProps>`\n  width: 100%;\n  line-height: 1.5;\n  padding-left: 138px;\n  white-space: pre-wrap;\n  color: ${props => props.theme.colors.textColor};\n  ${media.mobile`\n    padding-left: 0;\n  `};\n`;\n\nexport const CaptionMobileContainer = styled.div`\n  width: auto;\n  display: flex;\n  align-self: flex-start;\n  ${media.mobile`\n    display: none;\n    align-self: auto;\n  `};\n`;\n\nexport const CaptionWrapper = styled.div`\n  width: auto;\n  padding-right: 6px;\n  min-width: 119px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Caption = styled.div`\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  flex-shrink: 0;\n  align-items: center;\n  align-self: self-start;\n  justify-content: center;\n  width: 50px;\n  height: 24px;\n  margin-right: 7px;\n  margin-bottom: 18px;\n  padding: 2px 3px 4px;\n  background-color: ${props => transparentize(props.theme.colors.ctaButtonColor, 0.5)};\n  border-radius: 5px;\n  ${secondaryFont};\n  font-size: 12px;\n  ${bold};\n  text-align: center;\n  color: ${props => props.theme.colors.buttonTextColor};\n\n  &:first-of-type {\n    margin-right: 0;\n  }\n  &:last-of-type {\n    margin-left: 9px;\n  }\n  &:after {\n    content: '';\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    margin-left: -4px;\n    border: 4px solid transparent;\n    border-top: 4px solid ${props => transparentize(props.theme.colors.ctaButtonColor, 0.5)};\n  }\n  ${media.mobile`\n    margin-bottom: 2px;\n  `};\n`;\n\nexport const TextWrapper = styled.span`\n  width: 100%;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  line-height: normal;\n`;\n\nexport const AnswersList = styled.ul`\n  width: 100%;\n`;\n\ntype CaptionContainerProps = {\n  ariaHidden: boolean;\n}\nexport const CaptionContainer = styled.li.attrs((props: CaptionContainerProps) => ({\n  'aria-hidden': props.ariaHidden\n})) <CaptionContainerProps>`\n  display: flex;\n  align-self: flex-start;\n  width: auto;\n  ${media.mobile`\n    display: none;\n    align-self: auto;\n  `};\n`;\n\ntype AnswerListItemProps = {\n  tabIndex?: number;\n  ariaLabel: string;\n  role: string;\n  key: any;\n}\nexport const AnswerListItem = styled.li.attrs((props: AnswerListItemProps) => ({\n  tabIndex: props.tabIndex || 0,\n  'aria-label': props.ariaLabel,\n  role: props.role\n})) <AnswerListItemProps>`\n  display: flex;\n  align-items: center;\n  min-height: 50px;\n  padding: 10px 0;\n  transition: background-color 0.2s linear;\n  position: relative;\n  & ${Switch} {\n    &:before {\n      opacity: 0;\n      transition: opacity 0.2s linear;\n    }\n  }\n  &:hover,\n  &:focus {\n    background-color: ${props => transparentize(props.theme.colors.textColor, 0.06)};\n  }\n  &:hover ${Switch}, &:focus ${Switch} {\n    &:before {\n      opacity: 1;\n    }\n  }\n  ${MobileAnswerSeparator} {\n    display: none;\n  }\n  &:last-of-type {\n    ${MobileAnswerSeparator} {\n      display: none;\n    }\n  }\n  ${CaptionMobileContainer} {\n    display: none;\n  }\n  ${media.mobile`\n    flex-direction: column;\n    p {\n      text-align: center;\n    }\n    ${css`{\n      ${MobileAnswerSeparator} {\n        display: block;\n      }\n      ${CaptionMobileContainer} {\n        width: auto;\n        display: flex;\n        margin-bottom: 10px;\n        ${CaptionWrapper} {\n          width: auto;\n          min-width: 119px;\n          padding-right: 6px;\n          display: flex;\n          justify-content: space-between;\n  \n          ${Caption} {\n            &:first-of-type {\n              margin-right: 0;\n            }\n            &:last-of-type {\n              margin-left: calc(30% - 20px);\n              margin-right: calc(22% - 21px);\n            }\n          }\n        }\n      }\n    }`}\n  `};\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { localize } from 'core/localization';\nimport { getUserAnswers } from 'store/questions/statementChoice/selectors';\nimport * as actions from 'store/questions/statementChoice/actions';\nimport Switch from './Switch/index';\nimport Option from './Option/index';\nimport MobileAnswerSeparator from './MobileAnswerSeparator';\nimport {\n  AnswersList,\n  AnswerListItem,\n  AnswerText,\n  CaptionContainer,\n  CaptionMobileContainer,\n  CaptionWrapper,\n  Caption,\n  TextWrapper\n} from './Statement.styled';\nimport { RootAppState } from 'store/types';\nimport * as questionActions from '../../../store/questions/actions';\n\ntype StatementChoiceProps = {\n  id: string;\n  type: string;\n  answers?: Array<any>;\n  actions?: { [key: string]: any };\n  questionActions?: { [key: string]: any };\n  allowSubmit: boolean;\n  isAnswered: boolean;\n};\n\ntype StatementChoiceState = {\n  answers: Array<any>;\n  isAnswered: boolean;\n};\n\nexport class StatementChoice extends React.Component<StatementChoiceProps, StatementChoiceState> {\n  constructor(props: StatementChoiceProps) {\n    super(props);\n    this.state = {\n      answers: this.props.answers || [],\n      isAnswered: this.props.isAnswered\n    };\n  }\n\n  statementAnswerIsSelected = (answer: any, isTrue: boolean) => {\n    const { id } = this.props;\n    const { answers } = this.state;\n    answers.forEach(a => {\n      if (answer.id === a.id) {\n        answer.userSelected = true;\n        answer.isTrue = isTrue;\n      }\n    });\n    this.props.actions &&\n      this.props.actions.statementAnswerIsSelected(id, answer.id, answer.isTrue);\n    this.setState({ answers });\n    if (this.props.allowSubmit) {\n      this.props.questionActions && this.props.questionActions.answerBeforeSubmit(id);\n    }\n  };\n\n  componentDidUpdate(prevProps: StatementChoiceProps) {\n    if (this.props.id !== prevProps.id || this.props.answers !== prevProps.answers) {\n      this.setState({\n        answers: this.props.answers || [],\n        isAnswered: this.props.isAnswered\n      });\n    }\n  }\n\n  render() {\n    const { answers, isAnswered } = this.state;\n    const trueText = localize('[statement question true text]', 'True');\n    const falseText = localize('[statement question false text]', 'False');\n    return (\n      <AnswersList>\n        <CaptionContainer ariaHidden={true}>\n          <CaptionWrapper>\n            <Caption>\n              <TextWrapper title={trueText}>{trueText}</TextWrapper>\n            </Caption>\n            <Caption>\n              <TextWrapper title={falseText}>{falseText}</TextWrapper>\n            </Caption>\n          </CaptionWrapper>\n        </CaptionContainer>\n        {answers.map((answer: any, index: any) => (\n          <AnswerListItem\n            key={index}\n            role=\"radiogroup\"\n            ariaLabel={`answer${index}`}\n            aria-labelledby={`answer${index}`}\n          >\n            <CaptionMobileContainer>\n              <CaptionWrapper>\n                <Caption>\n                  <TextWrapper title={trueText}>{trueText}</TextWrapper>\n                </Caption>\n                <Caption>\n                  <TextWrapper title={falseText}>{falseText}</TextWrapper>\n                </Caption>\n              </CaptionWrapper>\n            </CaptionMobileContainer>\n            <Switch>\n              <Option\n                onClick={\n                  isAnswered ? undefined : () => this.statementAnswerIsSelected(answer, true)\n                }\n                ariaRole=\"radio\"\n                ariaLabel=\"true\"\n                selected={answer.isTrue && answer.userSelected}\n                tabIndex={0}\n                ariaDisable={isAnswered}\n              />\n              <Option\n                onClick={\n                  isAnswered ? undefined : () => this.statementAnswerIsSelected(answer, false)\n                }\n                ariaRole=\"radio\"\n                ariaLabel=\"false\"\n                selected={!answer.isTrue && answer.userSelected}\n                tabIndex={0}\n                ariaDisable={isAnswered}\n              />\n            </Switch>\n            <AnswerText id={`answer${index}`} appearance=\"p\">\n              {answer.text}\n            </AnswerText>\n            <MobileAnswerSeparator opacity={0.1} color=\"textColor\" />\n          </AnswerListItem>\n        ))}\n      </AnswersList>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: StatementChoiceProps) {\n  return {\n    answers: getUserAnswers(state, ownProps.id)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch),\n    questionActions: bindActionCreators(questionActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatementChoice);\n","import { ActionTypes } from './types';\nimport { ThunkResult } from '../../types';\n\nexport const openQuestionAnswerIsSelected = (\n  questionId: string,\n  answeredText: string\n): ThunkResult => dispatch => {\n  dispatch({\n    type: ActionTypes.OPEN_QUESTION_ANSWER_IS_SELECTED,\n    payload: { questionId, answeredText }\n  });\n};\n","import styled from 'styled-components';\nimport * as typography from 'components/mixins/typography';\nimport media from 'components/mixins/media';\nimport { transparentize } from 'utils/color';\n\nexport const EditableContainer = styled.div`\n  background-color: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n  margin: auto 0;\n  box-sizing: border-box;\n  position: relative;\n  z-index: 9;\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 40px;\n    border-left: 1px solid ${props => transparentize(props.theme.colors.mainColor, 0.7)};\n    transform: translate(-50%);\n  }\n\n  textarea {\n    ${typography.secondaryFontText};\n    box-sizing: border-box;\n    padding: 0 60px 0 70px;\n    line-height: 39px;\n    ${media.mobile`\n      padding: 0 29px 0 40px\n    `};\n  }\n  ${media.mobile`\n    &:after {\n      left: 30px;\n    }\n  `};\n`;\n\nexport default EditableContainer;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { getUserAnswers } from 'store/questions/openQuestion/selectors';\nimport * as actions from 'store/questions/openQuestion/actions';\nimport { localize } from 'core/localization';\nimport EditableTextarea from 'components/common/EditableTextarea';\nimport { RootAppState } from 'store/types';\nimport { EditableContainer } from './OpenQuestion.styled';\nimport * as questionActions from '../../../store/questions/actions';\n\ntype OpenQuestionProps = {\n  id: string;\n  type: string;\n  answers?: { [key: string]: any };\n  actions?: { [key: string]: any };\n  questionActions?: { [key: string]: any };\n  allowSubmit: boolean;\n  isAnswered?: boolean;\n};\n\ntype OpenQuestionState = {\n  answers: { [key: string]: any };\n};\n\nexport class OpenQuestion extends React.PureComponent<OpenQuestionProps, OpenQuestionState> {\n  constructor(props: OpenQuestionProps) {\n    super(props);\n    this.state = {\n      answers: this.props.answers || {}\n    };\n  }\n\n  onChangeHandler(event: any) {\n    const { answers = {} } = this.props;\n    answers.answeredText = event.target.value;\n    this.setState({\n      answers\n    });\n    if (this.props.allowSubmit) {\n      this.props.actions &&\n        this.props.actions.openQuestionAnswerIsSelected(this.props.id, answers.answeredText);\n      this.props.questionActions && this.props.questionActions.answerBeforeSubmit(this.props.id);\n    }\n  }\n\n  onFocusOutTextArea() {\n    const { answers } = this.state;\n    this.props.actions &&\n      this.props.actions.openQuestionAnswerIsSelected(answers.id, answers.answeredText);\n  }\n\n  render() {\n    const { isAnswered = false, answers = {} } = this.props;\n    return (\n      <EditableContainer>\n        <EditableTextarea\n          placeholder={`${localize('[placeholder textarea]')}`}\n          onResize={() => {}}\n          onBlur={() => this.onFocusOutTextArea()}\n          onChange={(e: any) => this.onChangeHandler(e)}\n          defaultValue={answers.answeredText}\n          disabled={isAnswered}\n          tabIndex={0}\n        />\n      </EditableContainer>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: OpenQuestionProps) {\n  return {\n    answers: getUserAnswers(state, ownProps.id)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch),\n    questionActions: bindActionCreators(questionActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenQuestion);\n","import { ActionTypes } from './types';\nimport { ThunkResult } from '../../types';\n\nexport const rankingAnswersAreSelected = (answers: any, questionId: string): ThunkResult => dispatch => {\n  dispatch({\n    type: ActionTypes.QUESTION_RANKING_ANSWERS_ARE_SELECTED,\n    payload: { answers, questionId }\n  });\n};\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport shuffleAnswerOptions from 'utils/questions';\nimport { getUserAnswers, getUserResponse } from 'store/questions/rankingText/selectors';\nimport * as actions from 'store/questions/rankingText/actions';\nimport { DragDrop } from 'components/common';\nimport { RootAppState } from 'store/types';\nimport * as questionActions from '../../../store/questions/actions';\nimport { isRandomizeAnswersEnabled } from 'store/settings/selectors';\n\ntype RankingTextProps = {\n  id: string;\n  type: string;\n  answers?: Array<any>;\n  actions?: { [key: string]: any };\n  isMultipleList?: boolean;\n  questionActions?: { [key: string]: any };\n  allowSubmit: boolean;\n  response?: Array<any>;\n  randomizeAnswersEnabled?: boolean;\n  isAnswered: boolean;\n};\n\nexport class RankingText extends React.Component<RankingTextProps, {}> {\n  moveItem(\n    items: any,\n    id: string,\n    action: any,\n    allowSubmit: boolean,\n    questionAction: any,\n    initialLoading = false\n  ) {\n    action.rankingAnswersAreSelected(items, id);\n    if (allowSubmit && !initialLoading) {\n      questionAction && questionAction.answerBeforeSubmit(id);\n    }\n  }\n\n  getElements() {\n    const { answers = [], response = [], randomizeAnswersEnabled } = this.props;\n    if (!response.length) {\n      if (randomizeAnswersEnabled) {\n        return answers;\n      }\n      return shuffleAnswerOptions(answers);\n    }\n    return response;\n  }\n\n  render() {\n    const listsOfItems = [{ id: this.props.id, items: this.getElements() }];\n    return (\n      <DragDrop\n        allowSubmit={this.props.allowSubmit}\n        moveItem={this.moveItem}\n        questionActions={this.props.questionActions}\n        actions={this.props.actions}\n        id={this.props.id}\n        isMultipleList={false}\n        listsOfItems={listsOfItems}\n        isAnswered={this.props.isAnswered}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: RankingTextProps) {\n  return {\n    answers: getUserAnswers(state, ownProps.id),\n    response: getUserResponse(state, ownProps.id),\n    randomizeAnswersEnabled: isRandomizeAnswersEnabled(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch),\n    questionActions: bindActionCreators(questionActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RankingText);\n","import { ActionTypes } from './types';\nimport { ThunkResult } from '../../types';\n\nexport const scenarioBranchtrackData = (score: number, isFinished: boolean, questionId: string): ThunkResult => dispatch => {\n  dispatch({\n    type: ActionTypes.QUESTION_SCENARIO_BRANCHTRACK_DATA,\n    payload: { score, isFinished, questionId }\n  });\n};\n","class BranchtrackProvider {\n  public static instances: { [key: string]: any };\n  private static messageProvider: string;\n  private static eventOrigin: string;\n  private static supportedMessageTypes: { [key: string]: any };\n  constructor() {\n    BranchtrackProvider.instances = {};\n    BranchtrackProvider.messageProvider = 'branchtrack';\n    BranchtrackProvider.eventOrigin = 'https://www.branchtrack.com';\n    BranchtrackProvider.supportedMessageTypes = {\n      // first time init\n      init: 'branchtrack:player:init',\n      // start of playing, t.i. before first scene appear, including on restart\n      start: 'branchtrack:player:start',\n      // new scene shown\n      scene: 'branchtrack:player:scene',\n      // user hit the choice\n      choice: 'branchtrack:player:choice',\n      // user reached last scene\n      finish: 'branchtrack:player:finish',\n      // user finished success\n      success: 'branchtrack:player:finish:success'\n    };\n  }\n\n  public createInstance(projectId: string) {\n    if (!projectId) {\n      return;\n    }\n    if (this.isEmpty(BranchtrackProvider.instances)) {\n      this.subscribeMessageEvent();\n    }\n\n    const branchtrack = new BranchtrackInstance(projectId);\n\n    BranchtrackProvider.instances[projectId] = branchtrack;\n    return branchtrack;\n  }\n\n  // TODO: need to clarify\n\n  public destroyInstance(instance: any) {\n    if (typeof BranchtrackProvider.instances[instance.projectId] !== 'undefined') {\n      delete BranchtrackProvider.instances[instance.projectId];\n    }\n\n    if (this.isEmpty(BranchtrackProvider.instances)) {\n      this.unsubscribeMessageEvent();\n    }\n  }\n\n  private subscribeMessageEvent() {\n    window.addEventListener('message', this.messageEventHadler);\n  }\n\n  private unsubscribeMessageEvent() {\n    window.removeEventListener('message', this.messageEventHadler);\n  }\n\n  private messageEventHadler(event: any) {\n    let data = null;\n\n    try {\n      if (event.origin === BranchtrackProvider.eventOrigin) {\n        data = JSON.parse(event.data);\n\n        if (data.provider !== BranchtrackProvider.messageProvider) {\n          return;\n        }\n        const messageDataType = data.type;\n        const projectId =\n          messageDataType !== BranchtrackProvider.supportedMessageTypes.success ? data.details.project.token : '';\n        const branchtrackInstance = BranchtrackProvider.instances[projectId];\n        if (typeof branchtrackInstance === 'undefined' || branchtrackInstance === null) {\n          return;\n        }\n        if (messageDataType === BranchtrackProvider.supportedMessageTypes.scene) {\n          if (typeof data.details.playlog.score === 'number' && data.details.playlog.score > 0) {\n            branchtrackInstance.score = data.details.playlog.score;\n          } else if (typeof data.details.scene.score === 'number' && data.details.scene.score > 0) {\n            branchtrackInstance.score = data.details.scene.score;\n          }\n        }\n        if (messageDataType === BranchtrackProvider.supportedMessageTypes.finish) {\n          branchtrackInstance.isFinished = true;\n        }\n      }\n    } catch (err) {\n      return false;\n    }\n  }\n\n  private isEmpty(obj: any) {\n    for (const key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n\nclass BranchtrackInstance {\n  projectId: string;\n  score: number;\n  isFinished: boolean;\n\n  constructor(projectId: string) {\n    this.projectId = projectId;\n    this.score = 0;\n    this.isFinished = false;\n  }\n}\n\nexport default new BranchtrackProvider();\n","import styled from 'styled-components';\nimport { transparentize } from 'utils/color';\n\nexport const ScenarioIframeSection = styled.div`\n  width: 100%;\n  & > iframe {\n    width: 100%;\n  }\n`;\nexport const ScenarioResults = styled.div`\n  width: 100%;\n  height: 500px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n  & > p {\n    color: ${props => transparentize(props.theme.colors.textColor, 0.6)};\n    font-size: 18px;\n    font-weight: bold;\n    margin-left: 15px;\n  }\n`;\n\nexport const IconContainer = styled.div`\n  width: 29px;\n  height: 29px;\n  border: 2px solid ${props => transparentize(props.theme.colors.textColor, 0.6)};\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  & > .icon {\n    color: ${props => transparentize(props.theme.colors.textColor, 0.6)};\n    font-size: 13px;\n  }\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { getEmbedCode, getProjectId, getUserAnswers } from 'store/questions/scenario/selectors';\nimport * as actions from 'store/questions/scenario/actions';\nimport Text from 'components/common/Text';\nimport Icon from 'components/common/Icon';\nimport { localize } from 'core/localization';\nimport BranchtrackProvider from './BranchTrackProvider/branchtrackProviderPlugin';\nimport { ScenarioIframeSection, ScenarioResults, IconContainer } from './Scenario.styled';\nimport { RootAppState } from 'store/types';\nimport * as questionActions from '../../../store/questions/actions';\n\ntype ScenarioProps = {\n  actions?: { [key: string]: any };\n  answers?: { [key: string]: any };\n  embedCode?: any;\n  questionId?: string;\n  projectId?: string;\n  isAnsweredCorrectly?: boolean;\n  isAnswered: boolean;\n  id: string;\n  questionActions?: { [key: string]: any };\n  allowSubmit: boolean;\n  type: string;\n};\n\nexport class Scenario extends React.Component<ScenarioProps, {}> {\n  question: any;\n  instance: any;\n  refFrameScenario: any;\n  instanceId: string;\n  embedCode: any;\n  score: number;\n  branchtrack: any;\n\n  constructor(props: ScenarioProps) {\n    super(props);\n    this.question = null;\n    this.instance = null;\n    this.refFrameScenario = React.createRef();\n    this.instanceId = props.projectId || '';\n    this.embedCode = props.embedCode;\n    this.score = this.getScoreBranchtrack();\n    this.branchtrack = BranchtrackProvider;\n  }\n\n  getEmbedHtml() {\n    return { __html: this.embedCode };\n  }\n\n  resetInstace() {\n    if (this.instance) {\n      this.instance.score = 0;\n      this.instance.isFinished = false;\n    }\n  }\n\n  branchTrackEventHandler = () => {\n    const { answers = {} } = this.props;\n    if (this.instance) {\n      answers.score = this.instance.score;\n      answers.isFinished = this.instance.isFinished;\n      this.props.actions &&\n        this.props.actions.scenarioBranchtrackData(\n          answers.score,\n          answers.isFinished,\n          this.props.questionId\n        );\n    }\n    if (this.props.allowSubmit) {\n      this.props.questionActions && this.props.questionActions.answerBeforeSubmit(this.props.id);\n    }\n  };\n\n  initBranchtrack() {\n    if (this.instanceId) {\n      this.instance = this.branchtrack.createInstance(this.instanceId);\n      this.props.answers && (this.props.answers.isFinished = this.instance.isFinished);\n    }\n  }\n\n  getScoreBranchtrack() {\n    if (this.instance) {\n      return this.instance.score;\n    }\n\n    return 0;\n  }\n\n  componentDidMount() {\n    this.initBranchtrack();\n    if (this.refFrameScenario.current) {\n      this.refFrameScenario.current.getElementsByTagName('iframe')[0].setAttribute('tabIndex', 1);\n    }\n    window.addEventListener('message', this.branchTrackEventHandler);\n  }\n\n  componentDidUpdate() {\n    if (!this.props.isAnsweredCorrectly && this.props.isAnswered) {\n      this.resetInstace();\n    }\n  }\n\n  componentWillUnmount() {\n    this.branchtrack.destroyInstance(this.instance);\n    window.removeEventListener('message', this.branchTrackEventHandler);\n  }\n\n  render() {\n    return !this.props.isAnsweredCorrectly && !this.props.isAnswered ? (\n      <ScenarioIframeSection\n        ref={this.refFrameScenario}\n        dangerouslySetInnerHTML={this.getEmbedHtml()}\n      />\n    ) : (\n      <ScenarioResults>\n        <IconContainer>\n          <Icon name=\"info\" />\n        </IconContainer>\n        <Text appearance=\"p\">{localize('[scenario submitted]')}</Text>\n      </ScenarioResults>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: ScenarioProps) {\n  return {\n    embedCode: getEmbedCode(state, ownProps.id),\n    projectId: getProjectId(state, ownProps.id),\n    answers: getUserAnswers(state, ownProps.id),\n    questionId: ownProps.id\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch),\n    questionActions: bindActionCreators(questionActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Scenario);\n","import {ActionTypes} from './types';\nimport { ThunkResult } from '../../types';\n\nexport const fillInTheBlankAnswer = (questionId: string, data: any): ThunkResult => dispatch => {\n  dispatch({\n    type: ActionTypes.FILL_IN_THE_BLANK_ANSWER,\n    payload: { questionId, data }\n  });\n};\n","import styled from 'styled-components';\nimport * as typography from 'components/mixins/typography';\nimport { transparentize } from 'utils/color';\nimport media from 'components/mixins/media';\n\nexport const AnswerContentWrapper = styled.div`\n  ${typography.secondaryFontText};\n  color: ${props => props.theme.colors.textColor};\n  padding: 0;\n\n  .dropdown > div {\n    display: flex !important;\n  }\n\n  a {\n    ${typography.links}\n  }\n\n  h1 {\n    ${typography.mainFontH1};\n  }\n  h2 {\n    ${typography.mainFontH2};\n  }\n  h3 {\n    ${typography.mainFontH3};\n  }\n  h4 {\n    ${typography.mainFontH4};\n  }\n\n  mark {\n    ${typography.highlighted};\n    font-weight: inherit;\n  }\n\n  cite {\n    display: block;\n    margin: 54px 0 54px 30px;\n    padding-left: 30px;\n    border-left: 2px solid ${props => props.theme.colors.mainColor};\n    ${typography.quote};\n    ${media.mobile`\n      margin: 44px 0;\n      padding-left: 0;\n      border-left: 0;\n      text-align: center;\n      &:before{\n        content: '';\n        display: block;\n        width: 25%;\n        height: 2px;\n        margin: 0 auto 20px;\n        background-color: ${(props: any) => props.theme.colors.mainColor};\n      }\n    `};\n  }\n\n  ol {\n    list-style-position: inside;\n    list-style-type: decimal;\n  }\n\n  ul {\n    list-style-position: inside;\n    list-style-type: disc;\n  }\n\n  b {\n    font-weight: bolder;\n  }\n\n  em {\n    font-style: italic;\n  }\n\n  u {\n    text-decoration: underline;\n  }\n\n  sub {\n    vertical-align: sub;\n    font-size: smaller;\n  }\n\n  strong {\n    font-weight: 700;\n  }\n\n  sup {\n    vertical-align: super;\n    font-size: smaller;\n  }\n\n  p {\n    cite {\n      img {\n        &[align='left'],\n        &[style*='float: left'],\n        &[style*='float:left'],\n        &[align='right'],\n        &[style*='float: right'],\n        &[style*='float:right'] {\n          margin: auto 15px;\n        }\n      }\n    }\n\n    img {\n      display: block;\n      max-width: 100%;\n      height: auto !important;\n      margin: 15px auto;\n\n      &[align='left'],\n      &[style*='float: left'],\n      &[style*='float:left'],\n      &[align='right'],\n      &[style*='float: right'],\n      &[style*='float:right'] {\n        margin: 15px;\n        max-width: 60%;\n      }\n\n      ${media.xsmall`\n        &[align='left'],\n        &[align='right'],\n        &[style*='float'] {\n          margin: 15px auto;\n          max-width: 100%;\n        }\n      `}\n    }\n  }\n\n  .fib-table-wrapper {\n    display: block;\n    overflow: auto;\n    text-align: center;\n  }\n\n  table {\n    ${typography.mainFont};\n    table-layout: fixed;\n    margin: 15px auto;\n    border: none;\n    border-collapse: collapse;\n    text-align: left;\n    display: inline-table;\n    line-height: normal;\n    vertical-align: top;\n\n    &[align='center'] {\n      margin: 15px auto;\n    }\n\n    input {\n      min-width: 0;\n      max-width: 100%;\n    }\n\n    caption {\n      margin-bottom: 16px;\n      ${typography.mainFontH4};\n    }\n\n    thead {\n      tr {\n        th {\n          padding: 13px 15px 11px;\n          background-color: ${props => props.theme.colors.mainColor};\n          color: ${props => props.theme.colors.contentBodyColor};\n        }\n      }\n    }\n    tbody {\n      tr {\n        td,\n        th {\n          padding: 21px 15px 21px;\n          border-bottom: 1px solid ${props => transparentize(props.theme.colors.textColor, 0.08)};\n          white-space: normal;\n          word-break: break-word;\n          overflow: hidden;\n        }\n\n        th {\n          background-color: ${props => props.theme.colors.mainColor};\n          color: ${props => props.theme.colors.contentBodyColor};\n        }\n      }\n    }\n  }\n`;\n\nexport const AnswerContainer = styled.div``;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { getUserAnswers } from 'store/questions/fillInTheBlank/selectors';\nimport * as actions from 'store/questions/fillInTheBlank/actions';\nimport Parser from 'html-react-parser';\nimport domToReact from 'html-react-parser/lib/dom-to-react';\nimport { localize } from 'core/localization';\nimport TextInput from '../../common/TextInput';\nimport DropdownInput from '../../common/DropdownInput';\nimport { AnswerContainer, AnswerContentWrapper } from './FillInTheBlank.styled';\nimport { RootAppState } from 'store/types';\nimport * as questionActions from '../../../store/questions/actions';\n\ntype FillInTheBlankProps = {\n  id: string;\n  type: string;\n  answerGroups?: { [key: string]: any };\n  actions?: { [key: string]: any };\n  children?: any;\n  questionContent?: any;\n  state?: { [key: string]: any };\n  questionActions?: { [key: string]: any };\n  allowSubmit: boolean;\n  isAnswered: boolean;\n};\n\ntype FillInTheBlankState = {\n  answerGroups: any;\n};\n\nexport class FillInTheBlank extends React.Component<FillInTheBlankProps, FillInTheBlankState> {\n  constructor(props: FillInTheBlankProps) {\n    super(props);\n    this.state = {\n      answerGroups: props.answerGroups\n    };\n  }\n\n  componentDidMount() {\n    const { answerGroups } = this.state;\n    this.props.actions &&\n      this.props.actions.fillInTheBlankAnswer(answerGroups.id, answerGroups.userAnswers);\n    this.wrappTables();\n    this.addTabIndexToLinks();\n  }\n\n  componentDidUpdate(prevProps: FillInTheBlankProps) {\n    if (prevProps.id !== this.props.id || prevProps.answerGroups !== this.props.answerGroups) {\n      this.setState({\n        answerGroups: this.props.answerGroups\n      });\n    }\n    this.wrappTables();\n    this.addTabIndexToLinks();\n  }\n\n  addTabIndexToLinks = () => {\n    const links: any = document.querySelectorAll('div>a');\n    for (const link of links) {\n      link.tabIndex = 0;\n    }\n  };\n\n  wrappTables = () => {\n    const el: any = document.querySelectorAll('div>table');\n    for (let i = 0; i < el.length; i++) {\n      const wrapper = document.createElement('figure');\n      el[i].parentNode.insertBefore(wrapper, el[i]);\n      wrapper.setAttribute('class', 'fib-table-wrapper');\n      wrapper.appendChild(el[i]);\n    }\n  };\n\n  onSelectChange(name: string, option: any) {\n    const { answerGroups } = this.state;\n    answerGroups.userAnswers = { ...answerGroups.userAnswers, [name]: option.value };\n    this.props.actions &&\n      this.props.actions.fillInTheBlankAnswer(answerGroups.id, answerGroups.userAnswers);\n    if (this.props.allowSubmit) {\n      this.props.questionActions && this.props.questionActions.answerBeforeSubmit(this.props.id);\n    }\n  }\n\n  onInputFocusOut(event: any) {\n    const { answerGroups } = this.state;\n    answerGroups.userAnswers = {\n      ...answerGroups.userAnswers,\n      [event.target.name]:\n        typeof event.target.value === 'string' || event.target.value instanceof String\n          ? event.target.value.trim()\n          : event.target.value\n    };\n    this.props.actions &&\n      this.props.actions.fillInTheBlankAnswer(answerGroups.id, answerGroups.userAnswers);\n    if (this.props.allowSubmit) {\n      this.props.questionActions && this.props.questionActions.answerBeforeSubmit(this.props.id);\n    }\n  }\n\n  render() {\n    const { answerGroups } = this.state;\n    const { isAnswered } = this.props;\n\n    const parseSelect = {\n      replace: (data: { attribs: any; children: any }) => {\n        const { attribs, children } = data;\n        if (attribs) {\n          const dataId = attribs['data-group-id'];\n          const answerValue = answerGroups.userAnswers[dataId];\n\n          if (attribs.class === 'blankSelect') {\n            return (\n              <DropdownInput\n                popoverPosition={'bottom'}\n                key={dataId}\n                name={dataId}\n                onChange={(event: any) => this.onSelectChange(dataId, event)}\n                value={answerValue}\n                placeholder={`${localize('[placeholder dropdown]')}`}\n                answeredPlaceholder={`${localize('[label your choice is]')}`}\n                data={domToReact(children, parseSelect).map((option: any) => ({\n                  value: option.props.value || ''\n                }))}\n                disabled={isAnswered}\n              >\n                {domToReact(children, parseSelect)}\n              </DropdownInput>\n            );\n          }\n          if (attribs.class === 'blankInput') {\n            return (\n              <TextInput\n                tabIndex={0}\n                key={dataId}\n                placeholder={`${localize('[placeholder text input]')}`}\n                name={dataId}\n                onBlur={(event: any) => this.onInputFocusOut(event)}\n                value={answerValue}\n                disabled={isAnswered}\n              />\n            );\n          }\n        }\n\n        return false;\n      }\n    };\n\n    if (!answerGroups.questionContent) {\n      answerGroups.questionContent = {\n        value: ''\n      };\n    }\n\n    if (!answerGroups.questionContent.value) {\n      answerGroups.questionContent.value = '';\n    }\n\n    return (\n      <AnswerContainer>\n        <AnswerContentWrapper>\n          {Parser(answerGroups.questionContent.value, parseSelect) || null}\n        </AnswerContentWrapper>\n      </AnswerContainer>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: FillInTheBlankProps) {\n  return {\n    answerGroups: getUserAnswers(state, ownProps.id)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch),\n    questionActions: bindActionCreators(questionActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FillInTheBlank);\n","import { IMAGE_DEFAULT_DOMAIN } from 'constants/common';\nimport { getImageNameByUrl } from 'utils/image';\nimport requester from './requester';\n\nconst getImage = async (relativeUrl: any) =>\n  requester.get(`${relativeUrl}`, { mode: 'no-cors', noCache: true });\n\nconst getImageCheckUrl = (imageUrl: any) => {\n  const imageName = getImageNameByUrl(imageUrl);\n  const imageFolderUrl = imageUrl.substring(0, imageUrl.indexOf('image/') + 6);\n\n  return imageFolderUrl.indexOf(IMAGE_DEFAULT_DOMAIN) !== -1\n    ? `${imageFolderUrl}exist/${imageName}`\n    : imageUrl;\n};\n\nexport default {\n  async isImageExists(imageUrl: any) {\n    const requestUrl = getImageCheckUrl(imageUrl);\n    const response = await getImage(requestUrl);\n    if (response.status === 404) {\n      return false;\n    }\n    return true;\n  }\n};\n","import { ActionTypes } from './types';\nimport { ThunkResult } from '../../types';\n\nexport const dragAndDropAnswersAreSelected = (\n  answers: any,\n  questionId: string\n): ThunkResult => dispatch => {\n  dispatch({\n    type: ActionTypes.QUESTION_DRAG_AND_DROP_ANSWERS_ARE_SELECTED,\n    payload: { answers, questionId }\n  });\n};\n","import styled, { css } from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport media from 'components/mixins/media';\n\ntype DragDropMobileWrapperProps = {\n  isImageLoaded: boolean;\n  isImageNotFound: boolean;\n}\nexport const DragDropMobileWrapper = styled.div<DragDropMobileWrapperProps>`\n  height: ${props => (props.isImageLoaded ? 'auto' : '182px')};\n  background: ${props =>\n    props.isImageNotFound || !props.isImageLoaded\n      ? transparentize(props.theme.colors.textColor, 0.02)\n      : 'transparent'};\n  padding: ${props => (props.isImageNotFound ? '16px 0' : '0')};\n\n  img {\n    display: block;\n    opacity: ${props => (props.isImageLoaded ? '1' : '0')};\n    max-width: 100%;\n    margin: ${props => (props.isImageNotFound ? '0 auto' : '0')};\n  }\n\n  ${media.xlarge`\n    overflow-x: auto;\n    -webkit-overflow-scrolling: auto;\n    position: relative;\n    display: block;\n    width: 100%;\n\n    img {\n      max-width: none;\n    }\n  `};\n`;\n\ntype DragDropMobileProps = {\n  position: any;\n  isImageLoaded: boolean;\n}\nexport const DragDropMobile = styled.div<DragDropMobileProps>`\n  ${props =>\n    props.position\n      ? css`\n          position: absolute;\n          top: ${props.position.y}px;\n          left: ${props.position.x}px;\n          transition: 0.3s;\n          transform: ${!props.isImageLoaded ? 'scale(0)' : ''};\n          opacity: ${!props.isImageLoaded ? '0.8' : '1'};\n        `\n      : css``};\n`;\n","import * as React from 'react';\nimport { localize } from 'core/localization';\nimport { NO_SELECTED_ID } from 'constants/common';\nimport DropdownInput from 'components/common/DropdownInput';\nimport CircleLoader from 'components/common/CircleLoader';\nimport { DragDropMobileWrapper, DragDropMobile } from './DragAndDropText.styles';\n\ntype DragAndDropMobileProps = {\n  id: string;\n  background?: any;\n  moveItem(arg1: any, arg2: any, arg3: any, arg4: boolean, arg5: any): void;\n  listsOfItems: any[];\n  dropspots?: any[];\n  response?: any[];\n  actions?: { [key: string]: any };\n  setPositionDependingImageScale?(): void;\n  handleImageLoaded(options1: any, options2: any): void;\n  allowSubmit: boolean;\n  questionActions?: { [key: string]: any };\n  isImageLoaded: boolean;\n  isImageNotFound: boolean;\n  retries?: number;\n  isAnswered: boolean;\n};\n\ntype DragAndDropMobileState = {\n  listsOfItems: any[];\n  retries: number;\n  isAnswered: boolean;\n}\n\nexport class DragAndDropMobile extends React.Component<DragAndDropMobileProps, DragAndDropMobileState> {\n  imageRefs: any;\n  constructor(props: DragAndDropMobileProps) {\n    super(props);\n    this.imageRefs = React.createRef();\n    this.state = {\n      listsOfItems: props.listsOfItems,\n      retries: props.retries || 0,\n      isAnswered: props.isAnswered || false\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps: DragAndDropMobileProps, prevState: DragAndDropMobileState) {\n    if (nextProps.retries !== prevState.retries) {\n      return {\n        retries: nextProps.retries,\n        listsOfItems: nextProps.listsOfItems\n      };\n    }\n    if (nextProps.isAnswered !== prevState.isAnswered) {\n      return {\n        isAnswered: nextProps.isAnswered,\n        listsOfItems: nextProps.listsOfItems\n      };\n    }\n    return null;\n  }\n\n  onSelectElement = (value: any, element: any, listsOfItems: any) => {\n    let droppableElement: any = [];\n    let destination: any = [];\n    if (element.current) {\n      return;\n    }\n    listsOfItems.forEach((list: any, index: any) => {\n      if (list.id === value) {\n        destination = index;\n      }\n    });\n\n    if (element.selected === undefined) {\n      if (listsOfItems[destination].items.length) {\n        listsOfItems[0].items.push(listsOfItems[destination].items[0]);\n      }\n      listsOfItems[0].items.forEach((item: any, index: any) => {\n        if (item.id === element.id) {\n          droppableElement = listsOfItems[0].items.splice(index, 1);\n        }\n      });\n    } else {\n      listsOfItems.forEach((item: any, index: any) => {\n        if (item.id === value && item.items.length) {\n          listsOfItems[0].items.push(listsOfItems[index].items[0]);\n        }\n        if (item.selected === element.value) {\n          droppableElement = listsOfItems[index].items.splice(0, 1);\n        }\n      });\n      if (element.selected === '') {\n        listsOfItems[0].items.forEach((item: any, index: any) => {\n          if (item.id === element.id) {\n            droppableElement = listsOfItems[0].items.splice(index, 1);\n          }\n        });\n      }\n    }\n\n    listsOfItems[destination].items = droppableElement;\n    this.setState({ listsOfItems });\n    this.props.moveItem(this.state.listsOfItems, this.props.id, this.props.actions, this.props.allowSubmit, this.props.questionActions);\n  };\n\n  render() {\n    const { dropspots = [], background = '', isImageLoaded, isImageNotFound } = this.props;\n    const { listsOfItems } = this.state;\n    const originalDropspots = dropspots.map(dropspot => ({\n      id: dropspot.id,\n      text: dropspot.text,\n      x: dropspot.x,\n      y: dropspot.y,\n      selected: ''\n    }));\n    const listsOfItemsMobile = Array.from(listsOfItems);\n    listsOfItemsMobile.forEach(element => {\n      if (element.items.length && element.id !== NO_SELECTED_ID) {\n        originalDropspots.forEach(item => {\n          if (item.text === element.items[0].text) {\n            item.selected = item.text;\n          }\n        });\n        element.selected = element.items[0].text;\n        element.isDropDisabled = true;\n      } else {\n        element.selected = '';\n        element.isDropDisabled = false;\n      }\n    });\n    return (\n      <DragDropMobileWrapper isImageLoaded={isImageLoaded} isImageNotFound={isImageNotFound}>\n        {!isImageNotFound &&\n          listsOfItemsMobile.map(\n            item =>\n              item.id !== NO_SELECTED_ID && (\n                <DragDropMobile\n                  key={item.id}\n                  position={item.position}\n                  isImageLoaded={isImageLoaded}\n                >\n                  <DropdownInput\n                    popoverPosition={'right'}\n                    isMatching\n                    key={item.id}\n                    name={item.id}\n                    onChange={(event: any) => this.onSelectElement(item.id, event, listsOfItems)}\n                    value={''}\n                    placeholder={''}\n                    answeredPlaceholder={''}\n                    matchingAnswer={item.selected}\n                    data={originalDropspots.map(\n                      option =>\n                        option.id !== NO_SELECTED_ID && {\n                          value: option.text,\n                          id: option.id,\n                          selected: option.selected,\n                          current: item.selected.length ? item.selected === option.selected : false\n                        }\n                    )}\n                  />\n                </DragDropMobile>\n              )\n          )}\n        {background && !isImageLoaded && <CircleLoader />}\n        <img\n          src={background}\n          ref={this.imageRefs}\n          onLoad={() =>\n            this.props.handleImageLoaded(this.imageRefs.current, this.state.listsOfItems)\n          }\n          alt={localize('[drag and drop question image]')}\n        />\n      </DragDropMobileWrapper>\n    );\n  }\n}\n\nexport default DragAndDropMobile;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport cloneDeep from 'lodash.clonedeep';\nimport { isTouchScreenDevice } from 'utils/window';\nimport imageLoader from 'core/http/imageLoader';\nimport { isAnswersFromPreviousAttemptEnabled } from 'store/settings/selectors';\nimport * as dragAndDropActions from 'store/questions/dragAndDropText/actions';\nimport DragDrop from 'components/common/DragDrop';\nimport { NO_SELECTED_ID } from 'constants/common';\nimport {\n  getUserAnswers,\n  getBackground,\n  getUserResponse\n} from 'store/questions/dragAndDropText/selectors';\nimport { getQuestionRetries } from 'store/questions/selectors';\nimport { RootAppState } from 'store/types';\nimport DragAndDropMobile from './DragAndDropMobile';\nimport * as questionActions from '../../../store/questions/actions';\n\ntype DragAndDropTextProps = {\n  id: string;\n  background?: string;\n  isMultipleList?: boolean;\n  dropspots?: any[];\n  response?: any[];\n  actions?: { [key: string]: any };\n  questionActions?: { [key: string]: any };\n  allowSubmit: boolean;\n  type: string;\n  shouldShowPreviousAnswers?: boolean;\n  retries?: number;\n  isAnswered: boolean;\n};\n\ntype DragAndDropTextState = {\n  isImageLoaded: boolean;\n  isImageNotFound: boolean;\n  listsOfItems: any[];\n};\n\nexport class DragAndDropText extends React.Component<DragAndDropTextProps, DragAndDropTextState> {\n  constructor(props: DragAndDropTextProps) {\n    super(props);\n    this.state = {\n      isImageLoaded: false,\n      isImageNotFound: false,\n      listsOfItems: []\n    };\n  }\n\n  getPositionDependingImageScale = (image: any, originalListPosition: any, listsOfItems: any) => {\n    const scale = image.width / image.naturalWidth;\n    listsOfItems.forEach((list: any, index: any) => {\n      if (list.position) {\n        if (isTouchScreenDevice()) {\n          listsOfItems[index].position.y = Math.round(originalListPosition[list.id].y * scale);\n          listsOfItems[index].position.x = Math.round(originalListPosition[list.id].x * scale);\n        } else {\n          listsOfItems[index].position.y = Math.round(\n            ((originalListPosition[list.id].y * scale) / image.height) * 100\n          );\n          listsOfItems[index].position.x = Math.round(\n            ((originalListPosition[list.id].x * scale) / image.width) * 100\n          );\n        }\n      }\n    });\n    return listsOfItems;\n  };\n\n  setPositionDependingImageScale = (\n    image?: any,\n    originalListPosition?: any,\n    listsOfItems?: any\n  ) => {\n    if (image !== null && image !== undefined) {\n      this.setState({\n        listsOfItems: this.getPositionDependingImageScale(image, originalListPosition, listsOfItems)\n      });\n    }\n  };\n\n  async changeImageState(imageUrl: any) {\n    const isImageExists = await imageLoader.isImageExists(imageUrl);\n    let imageNotFound = false;\n    if (!isImageExists) imageNotFound = true;\n    this.setState({\n      isImageNotFound: imageNotFound,\n      isImageLoaded: true\n    });\n  }\n\n  handleImageLoaded = (img: any, listsOfItems: any) => {\n    const { dropspots = [] } = this.props;\n    const originalListPosition: any[] = [];\n    dropspots.forEach(item => {\n      originalListPosition[item.id] = { y: item.y, x: item.x };\n    });\n    this.setPositionDependingImageScale(img, originalListPosition, listsOfItems);\n    window.addEventListener('resize', () =>\n      this.setPositionDependingImageScale(img, originalListPosition, listsOfItems)\n    );\n    this.changeImageState(this.props.background);\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', () => this.setPositionDependingImageScale());\n  }\n\n  moveItem(\n    items: any,\n    id: string,\n    action: any,\n    allowSubmit: boolean,\n    questionAction: any,\n    initialLoading = false\n  ) {\n    action.dragAndDropAnswersAreSelected(items, id);\n    if (allowSubmit && !initialLoading) {\n      questionAction && questionAction.answerBeforeSubmit(id);\n    }\n  }\n\n  render() {\n    const {\n      background,\n      dropspots = [],\n      response = [],\n      id,\n      actions,\n      shouldShowPreviousAnswers,\n      isAnswered,\n      retries = 0\n    } = this.props;\n    const { isImageLoaded, isImageNotFound } = this.state;\n    let listsOfItems = [\n      {\n        id: NO_SELECTED_ID,\n        items: dropspots,\n        isDropDisabled: false\n      }\n    ];\n    if (response.length) {\n      listsOfItems = response;\n    } else {\n      dropspots.forEach(element => {\n        const list = {\n          id: element.id,\n          items: [],\n          position: { y: element.y, x: element.x },\n          isDropDisabled: false\n        };\n        listsOfItems.push(list);\n      });\n    }\n\n    const props = {\n      moveItem: this.moveItem,\n      allowSubmit: this.props.allowSubmit,\n      questionActions: this.props.questionActions,\n      actions,\n      background,\n      id,\n      listsOfItems: cloneDeep(listsOfItems),\n      setPositionDependingImageScale: this.setPositionDependingImageScale,\n      getPositionDependingImageScale: this.getPositionDependingImageScale,\n      handleImageLoaded: this.handleImageLoaded,\n      isImageLoaded,\n      isImageNotFound,\n      isAnswered,\n      ...(!shouldShowPreviousAnswers && { retries })\n    };\n    return (\n      <div>\n        {!isTouchScreenDevice() ? (\n          <DragDrop {...props} dropspots={dropspots} isMultipleList={true} />\n        ) : (\n          <DragAndDropMobile {...props} dropspots={dropspots} />\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: DragAndDropTextProps) {\n  return {\n    dropspots: getUserAnswers(state, ownProps.id),\n    background: getBackground(state, ownProps.id),\n    response: getUserResponse(state, ownProps.id),\n    shouldShowPreviousAnswers: isAnswersFromPreviousAttemptEnabled(state),\n    retries: getQuestionRetries(state, ownProps.id)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(dragAndDropActions, dispatch),\n    questionActions: bindActionCreators(questionActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DragAndDropText);\n","import { ActionTypes } from './types';\nimport { ThunkResult } from '../../types';\n\nexport const matchingAnswersAreSelected = (answers: any, questionId: string): ThunkResult => dispatch => {\n  dispatch({\n    type: ActionTypes.QUESTION_MATCHING_ANSWERS_ARE_SELECTED,\n    payload: { answers, questionId }\n  });\n};\n","import styled from 'styled-components';\nimport * as typography from 'components/mixins/typography';\nimport { transparentize } from 'utils/color';\nimport media from 'components/mixins/media';\n\nexport const TextMatchingItem = styled.div.attrs({\n  'data-test': 'text-matching-item'\n})`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  margin-bottom: 10px;\n  ${typography.secondaryFontText};\n  color: ${props => props.theme.colors.textColor};\n\n  ${media.small`\n    margin-bottom: 48px;\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n  `};\n`;\n\nexport const TextMatchingItemKey = styled.div`\n  width: calc(50% - 50px);\n  padding: 3px 15px 5px;\n  background: ${props => transparentize(props.theme.colors.textColor, 0.06)};\n\n  ${media.small`\n    width: calc(100% - 44px);\n    margin-bottom: 8px;\n  `};\n`;\n\ntype TextMatchingItemSelectedProps = {\n  shownSelectedValue: any;\n}\n\nexport const TextMatchingItemSelected = styled.div.attrs(props => ({\n  'data-test': 'item-selected'\n})) <TextMatchingItemSelectedProps>`\n  width: calc(50% - 50px);\n  z-index: 1;\n  background: ${props =>\n    props.shownSelectedValue\n      ? transparentize(props.theme.colors.textColor, 0.06)\n      : transparentize(props.theme.colors.textColor, 0.02)};\n\n  ${media.small`\n    width: calc(100% - 44px);\n    margin-bottom: 8px;\n  `};\n`;\n\nexport const DropdownInputWrapper = styled.div.attrs({\n  'data-test': 'dropdown-input-wrapper'\n})`\n  width: 100px;\n  display: flex;\n  justify-content: center;\n\n  ${media.small`\n    width: 44px;\n  `};\n`;\n\nexport const DropdownInputContainer = styled.div`\n  .dropdown-button {\n    width: 40px;\n    height: 40px;\n    min-height: 40px;\n\n    ${media.small`\n      width: 32px;\n      height: 32px;\n      min-height: 32px;\n    `};\n  }\n\n  .chosen-value {\n    display: none;\n  }\n\n  .downshift-dropdown {\n    max-width: 325px;\n  }\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { getUserAnswers, getUserResponse } from 'store/questions/textMatching/selectors';\nimport * as actions from 'store/questions/textMatching/actions';\nimport shuffle from 'lodash.shuffle';\nimport cloneDeep from 'lodash.clonedeep';\nimport { localize } from 'core/localization';\nimport { DropdownInput } from '../../common';\nimport {\n  TextMatchingItem,\n  TextMatchingItemKey,\n  TextMatchingItemSelected,\n  DropdownInputWrapper,\n  DropdownInputContainer\n} from './TextMatching.styled';\nimport { RootAppState } from 'store/types';\nimport * as questionActions from '../../../store/questions/actions';\n\ntype TextMatchingProps = {\n  id: string;\n  type: string;\n  answers?: Array<any>;\n  actions?: { [key: string]: any };\n  questionActions?: { [key: string]: any };\n  allowSubmit: boolean;\n  response?: Array<any>;\n  isAnswered: boolean;\n};\n\ntype TextMatchingState = {\n  answers: Array<any>;\n  shuffleAnswersKey: Array<any>;\n  isAnswered: boolean;\n};\nexport class TextMatching extends React.Component<TextMatchingProps, TextMatchingState> {\n  constructor(props: TextMatchingProps) {\n    super(props);\n    const { response = [], answers = [], isAnswered = false } = props;\n    this.state = {\n      answers: cloneDeep(response.length ? this.getOptionsWithAnswerKeys() : answers),\n      shuffleAnswersKey: shuffle(response.length ? response : answers),\n      isAnswered\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps: TextMatchingProps, prevState: TextMatchingState) {\n    if (nextProps.isAnswered !== prevState.isAnswered) {\n      return {\n        isAnswered: nextProps.isAnswered\n      };\n    }\n    return null;\n  }\n\n  getResponseOptionById = (id: string) => {\n    const { response = [] } = this.props;\n    return response.find(option => option.id === id)\n  }\n\n  getOptionsWithAnswerKeys = () => {\n    const { answers = [] } = this.props;\n    return answers.map(answer => ({\n      ...answer,\n      ...{ selectedKey: this.getResponseOptionById(answer.id)?.selectedKey || '' },\n      ...{ shownSelectedValue: this.getResponseOptionById(answer.id)?.shownSelectedValue || '' }\n    }));\n  }\n\n  markItemInList = (list: any, selectedKey: any, option: any) => {\n    let newList: Array<any> = Array.from(list);\n    newList.forEach((item: any, index: any) => {\n      if (item.selectedKey === selectedKey) {\n        newList[index].selectedKey = '';\n      }\n      if (item.value === option.value) {\n        newList[index].selectedKey = selectedKey;\n      }\n      if (item.shownSelectedValue === option.value) {\n        newList[index].shownSelectedValue = '';\n      }\n      if (item.key === selectedKey) {\n        newList[index].shownSelectedValue = option.value;\n      }\n    });\n    return newList;\n  };\n\n  onSelectMatching(selectedKey: any, option: any) {\n    const { answers, shuffleAnswersKey } = this.state;\n    const { id } = this.props;\n    if (option) {\n      this.setState({\n        answers: this.markItemInList(answers, selectedKey, option),\n        shuffleAnswersKey: this.markItemInList(shuffleAnswersKey, selectedKey, option)\n      });\n      this.props.actions && this.props.actions.matchingAnswersAreSelected(answers, id);\n\n      if (this.props.allowSubmit) {\n        this.props.questionActions && this.props.questionActions.answerBeforeSubmit(this.props.id);\n      }\n      const activeElem = document.activeElement as HTMLElement;\n      if (activeElem) {\n        activeElem.blur();\n      }\n    }\n  }\n\n  isAnyValueSelected() {\n    const { answers } = this.state;\n    return answers\n      .map(answer => answer && answer.selectedKey && answer.selectedKey.length)\n      .some(value => value);\n  }\n\n  componentDidUpdate(previousProps: TextMatchingProps, previousState: TextMatchingState) {\n    if (previousState.isAnswered !== this.state.isAnswered && this.props.response?.length) {\n      this.setState({\n        answers: cloneDeep(this.getOptionsWithAnswerKeys()),\n        shuffleAnswersKey: shuffle(this.props.response)\n      });\n    }\n  }\n\n  renderDropdownInput(data: any) {\n    const {\n      index,\n      item,\n      inputData,\n      position = 'right',\n      placeholder,\n      buttonAnimation = '',\n      isMatchingOption = false\n    } = data;\n    return (\n      <DropdownInput\n        popoverPosition={position}\n        isMatching\n        isMatchingOption={isMatchingOption}\n        key={item.id + index}\n        name={item.id + index}\n        onChange={(event: any) => this.onSelectMatching(item.key, event)}\n        value={''}\n        placeholder={placeholder}\n        answeredPlaceholder={`${localize('[label your choice is]')}`}\n        matchingAnswer={item.shownSelectedValue}\n        data={inputData}\n        disabled={false}\n        buttonAnimation={buttonAnimation}\n      >\n        {' '}\n      </DropdownInput>\n    );\n  }\n\n  render() {\n    const { answers, shuffleAnswersKey } = this.state;\n    return (\n      <div data-test=\"text-matching\">\n        {answers.map((item, index) => {\n          const mapAnswersToOptions = () =>\n          shuffleAnswersKey.map(option => ({\n              value: option.value || '',\n              selected: option.selectedKey,\n              current: option.selectedKey === item.key\n            }));\n\n          const buttonAnimation = index === 0 && !this.isAnyValueSelected() ? 'pulse' : '';\n          const placeholders = {\n            plus: `${localize('[placeholder dropdown for]')} ${item.key}`,\n            matchingOption: `${localize('[click on the plus to define the match]')}`\n          };\n\n          return (\n            <TextMatchingItem key={item.id}>\n              <TextMatchingItemKey>{item.key}</TextMatchingItemKey>\n              <DropdownInputWrapper>\n                <DropdownInputContainer>\n                  {this.renderDropdownInput({\n                    index,\n                    item,\n                    inputData: mapAnswersToOptions(),\n                    placeholder: placeholders.plus,\n                    buttonAnimation\n                  })}\n                </DropdownInputContainer>\n              </DropdownInputWrapper>\n              <TextMatchingItemSelected shownSelectedValue={item.shownSelectedValue}>\n                {this.renderDropdownInput({\n                  index,\n                  item,\n                  inputData: mapAnswersToOptions(),\n                  position: 'bottom',\n                  placeholder: placeholders.matchingOption,\n                  isMatchingOption: true\n                })}\n              </TextMatchingItemSelected>\n            </TextMatchingItem>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: TextMatchingProps) {\n  return {\n    answers: getUserAnswers(state, ownProps.id),\n    response: getUserResponse(state, ownProps.id)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch),\n    questionActions: bindActionCreators(questionActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TextMatching);\n","import { ActionTypes } from './types';\nimport { ThunkResult } from '../../types';\n\nexport const hotspotQuestionAnswer = (data: any, questionId: string): ThunkResult => dispatch => {\n  dispatch({\n    type: ActionTypes.HOTSPOT_QUESTION_ANSWER,\n    payload: { data, questionId }\n  });\n};\n","import styled from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport Icon from 'components/common/Icon';\nimport { defaultBoxShadowColor } from 'constants/common';\n\nexport const Wrapper = styled.div.attrs({\n  'data-test': 'hotspot-on-image-wrapper'\n})`\n  width: 100%;\n  max-width: 100%;\n  display: inline-block;\n  vertical-align: bottom;\n  text-align: left;\n  padding: 0;\n`;\n\ntype ImageSpotsWrapper = {\n  isImageNotFound: boolean;\n  isImageLoading: boolean;\n}\nexport const ImageSpotsWrapper = styled.div<ImageSpotsWrapper>`\n  position: relative;\n  width: 100%;\n  max-width: 100%;\n  display: inline-block;\n  vertical-align: bottom;\n  pointer-events: ${props => (props.isImageNotFound ? 'none' : 'auto')};\n\n  height: ${props => (props.isImageLoading ? '182px' : 'auto')};\n  overflow: ${props => (props.isImageLoading ? 'hidden' : 'auto')};\n  background: ${props =>\n    props.isImageNotFound || props.isImageLoading\n      ? transparentize(props.theme.colors.textColor, 0.02)\n      : 'transparent'};\n  padding: ${props => (props.isImageNotFound ? '16px 0' : '0')};\n`;\n\ntype ImageProps = {\n  isImageNotFound: boolean;\n  src: string;\n  alt: string;\n  tabIndex: number;\n  role: string;\n  onLoad: any;\n  onClick: any;\n  style: any;\n}\nexport const Image = styled.img.attrs(props => ({\n  'data-test': 'hotspot-image'\n})) <ImageProps>`\n  display: block;\n  outline: none;\n  margin: ${props => (props.isImageNotFound ? '0 auto' : '0')};\n`;\n\nexport const CloseIcon = styled(Icon)`\n  position: absolute;\n  top: -10px;\n  right: -8px;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  opacity: 0;\n  cursor: pointer;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.6)};\n  background-color: ${props => transparentize(props.theme.colors.contentBodyColor, 0.9)};\n  box-shadow: 0 1px 3px 0 ${transparentize(defaultBoxShadowColor, 0.1)};\n\n  &:before {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nexport const Spot = styled.div`\n  position: relative;\n  width: 30px;\n  height: 30px;\n  display: block;\n  cursor: pointer;\n  animation: pulse 1.5s infinite;\n  background-color: ${props => transparentize(props.theme.colors.contentBodyColor, 0.1)};\n  box-shadow: 0 2px 10px 0 ${transparentize(defaultBoxShadowColor, 0.1)};\n  border-radius: 50%;\n  outline: none;\n  overflow: hidden;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    width: 50%;\n    right: 0px;\n    bottom: 0;\n    background: linear-gradient(\n      to bottom,\n      ${props => props.theme.colors.mainColor} 0%,\n      ${props => props.theme.colors.mainColor} 50%,\n      ${props => props.theme.colors.mainColor} 50%,\n      ${props => props.theme.colors.contentBodyColor} 50%,\n      ${props => props.theme.colors.contentBodyColor} 100%\n    );\n  }\n\n  &:after {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    width: 50%;\n    left: 0px;\n    bottom: 0;\n    background: linear-gradient(\n      to top,\n      ${props => props.theme.colors.mainColor} 0%,\n      ${props => props.theme.colors.mainColor} 50%,\n      ${props => props.theme.colors.mainColor} 50%,\n      ${props => props.theme.colors.contentBodyColor} 50%,\n      ${props => props.theme.colors.contentBodyColor} 100%\n    );\n  }\n\n  @keyframes pulse {\n    0% {\n      box-shadow: 0 0 0 0 ${props => transparentize(props.theme.colors.contentBodyColor, 0.5)};\n    }\n    50% {\n      box-shadow: 0 0 0 6px ${props => transparentize(props.theme.colors.contentBodyColor, 0.3)};\n    }\n    100% {\n      box-shadow: 0 0 0 8px ${props => transparentize(props.theme.colors.contentBodyColor, 0.05)};\n    }\n  }\n`;\n\ntype SpotWrapperProps = {\n  top: number;\n  left: number;\n}\n\nexport const SpotWrapper = styled.div.attrs(props => ({\n  'data-test': 'spot-wrapper'\n})) <SpotWrapperProps>`\n  display: block;\n  position: absolute;\n  top: ${props => props.top}px;\n  left: ${props => props.left}px;\n  transform: translate(-50%, -50%);\n  outline: none;\n\n  &:hover,\n  &:focus {\n    ${Spot} {\n      animation: none;\n    }\n\n    ${CloseIcon} {\n      opacity: 1;\n\n      &:hover {\n        color: ${props => transparentize(props.theme.colors.textColor, 0.9)};\n        background-color: ${props => props.theme.colors.contentBodyColor};\n        opacity: 1;\n      }\n    }\n  }\n`;\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { getUserAnswers } from 'store/questions/hotspot/selectors';\nimport * as actions from 'store/questions/hotspot/actions';\nimport CircleLoader from 'components/common/CircleLoader';\nimport imageLoader from 'core/http/imageLoader';\nimport { localize } from 'core/localization';\nimport { Wrapper, Image, ImageSpotsWrapper, Spot, SpotWrapper, CloseIcon } from './Hotspot.styled';\nimport { RootAppState } from 'store/types';\nimport * as questionActions from '../../../store/questions/actions';\n\ntype HotspotProps = {\n  id: string;\n  type: string;\n  answers?: { [key: string]: any };\n  actions?: { [key: string]: any };\n  questionActions?: { [key: string]: any };\n  allowSubmit: boolean;\n  isAnswered?: boolean;\n};\n\ntype HotspotState = {\n  answers: { [key: string]: any };\n  isImageLoading: boolean;\n  markers: any;\n  isImageNotFound: boolean;\n};\n\nexport class Hotspot extends PureComponent<HotspotProps, HotspotState> {\n  constructor(props: HotspotProps) {\n    super(props);\n    const { answers = [] } = props;\n    this.state = {\n      answers,\n      isImageLoading: true,\n      markers: answers.markers,\n      isImageNotFound: false\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps: HotspotProps, prevState: HotspotProps) {\n    if (\n      prevState.answers !== nextProps.answers &&\n      nextProps.answers &&\n      !nextProps.answers.markers.length\n    ) {\n      return {\n        answers: nextProps.answers,\n        markers: []\n      };\n    }\n    if (\n      prevState.answers !== nextProps.answers &&\n      nextProps.answers &&\n      nextProps.answers.markers.length\n    ) {\n      return {\n        answers: nextProps.answers,\n        markers: [...nextProps.answers.markers]\n      };\n    }\n    return null;\n  }\n\n  getCoordinates = (event: any) => {\n    if (event.target.tagName !== 'IMG') {\n      return;\n    }\n    const rect = event.target.getBoundingClientRect();\n    const x = Math.round(event.clientX - rect.left);\n    const y = Math.round(event.clientY - rect.top);\n    const { id } = this.state.answers;\n    this.setState({\n      markers: this.addMarker({ x, y })\n    });\n    this.props.actions && this.props.actions.hotspotQuestionAnswer(this.addMarker({ x, y }), id);\n\n    if (this.props.allowSubmit) {\n      this.props.questionActions && this.props.questionActions.answerBeforeSubmit(this.props.id);\n    }\n  };\n\n  addMarker = (marker: any) => {\n    const { markers } = this.state;\n    const { isMultiple } = this.state.answers;\n    let newMarkers = Array.from(markers);\n    if (!isMultiple) {\n      newMarkers = [marker];\n    } else {\n      newMarkers.push(marker);\n    }\n    return newMarkers;\n  };\n\n  removeMarker = (index: any) => {\n    const { id } = this.props;\n    const { markers } = this.state;\n    const newMarkers = Array.from(markers);\n    newMarkers.splice(index, 1);\n    this.setState({\n      markers: newMarkers\n    });\n    this.props.actions && this.props.actions.hotspotQuestionAnswer(newMarkers, id);\n\n    if (this.props.allowSubmit) {\n      this.props.questionActions && this.props.questionActions.answerBeforeSubmit(this.props.id);\n    }\n  };\n\n  async changeImageState(imageUrl: any) {\n    const isImageExists = await imageLoader.isImageExists(imageUrl);\n    let imageNotFound = false;\n    if (!isImageExists) {\n      imageNotFound = true;\n    }\n    this.setState({\n      isImageNotFound: imageNotFound,\n      isImageLoading: false\n    });\n  }\n\n  render() {\n    const { background } = this.state.answers;\n    const { isImageLoading, markers, isImageNotFound } = this.state;\n    return (\n      <Wrapper>\n        {background ? (\n          <ImageSpotsWrapper isImageLoading={isImageLoading} isImageNotFound={isImageNotFound}>\n            {isImageLoading && <CircleLoader />}\n            <Image\n              isImageNotFound={isImageNotFound}\n              src={background}\n              alt={localize('[hotspot content image alt]')}\n              tabIndex={0}\n              role=\"img\"\n              onLoad={() => this.changeImageState(background)}\n              onClick={!isImageNotFound ? this.getCoordinates : null}\n              style={isImageLoading ? { opacity: '0' } : null}\n            />\n\n            {markers.map((marker: any, index: any) => (\n              <SpotWrapper\n                key={index}\n                tabIndex={0}\n                role=\"banner\"\n                top={marker.y}\n                left={marker.x}\n                onClick={() => this.removeMarker(index)}\n              >\n                <Spot />\n                <CloseIcon size={4} name=\"close-popup\" />\n              </SpotWrapper>\n            ))}\n          </ImageSpotsWrapper>\n        ) : null}\n      </Wrapper>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: HotspotProps) {\n  return {\n    answers: getUserAnswers(state, ownProps.id)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch),\n    questionActions: bindActionCreators(questionActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Hotspot);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  SINGLE_CHOICE,\n  MULTIPLE_CHOICE,\n  SINGLE_CHOICE_IMAGE,\n  STATEMENT_CHOICE,\n  OPEN_QUESTION,\n  RANKING_TEXT,\n  SCENARIO,\n  FILL_IN_THE_BLANK,\n  DRAG_AND_DROP_TEXT,\n  TEXT_MATCHING,\n  HOTSPOT\n} from 'constants/questionTypes';\nimport { isRandomizedOptionsLoaded } from 'store/course/selectors';\nimport { isRandomizeAnswersEnabled } from 'store/settings/selectors';\nimport { RootAppState } from 'store/types';\nimport MultipleChoice from './MultipleChoice';\nimport SingleChoiceImage from './SingleChoiceImage';\nimport { QuestionContainer, QuestionContainerOverlay } from './Question.styled';\nimport StatementChoice from './Statement';\nimport OpenQuestion from './OpenQuestion';\nimport RankingText from './RankingText';\nimport Scenario from './Scenario';\nimport FillInTheBlank from './FillInTheBlank';\nimport DragAndDropText from './DragAndDropText';\nimport TextMatching from './TextMatching';\nimport Hotspot from './Hotspot';\n\ntype QuestionProps = {\n  id: string;\n  type: string;\n  isAnswered: boolean;\n  allowSubmit?: boolean;\n  bodyBackground: { [key: string]: any };\n  hasRandomizedOptionsLoaded?: boolean;\n  randomizeAnswersEnabled?: boolean;\n};\n\nexport class Question extends React.PureComponent<QuestionProps, {}> {\n  render() {\n    const {\n      id,\n      type,\n      isAnswered,\n      bodyBackground,\n      allowSubmit = false,\n      randomizeAnswersEnabled,\n      hasRandomizedOptionsLoaded\n    } = this.props;\n    return (\n      <QuestionContainer>\n        {randomizeAnswersEnabled &&\n          hasRandomizedOptionsLoaded &&\n          renderQuestion(id, type, isAnswered, allowSubmit)}\n        {!randomizeAnswersEnabled && renderQuestion(id, type, isAnswered, allowSubmit)}\n        <QuestionContainerOverlay isShown={isAnswered} bodyBackground={bodyBackground} />\n      </QuestionContainer>\n    );\n  }\n}\n\nfunction renderQuestion(id: string, type: string, isAnswered: boolean, allowSubmit: boolean) {\n  switch (type) {\n    case SINGLE_CHOICE:\n      return (\n        <MultipleChoice\n          id={id}\n          allowSubmit={allowSubmit}\n          type={type}\n          isSingleAnswer\n          isAnswered={isAnswered}\n        />\n      );\n    case SINGLE_CHOICE_IMAGE:\n      return (\n        <SingleChoiceImage id={id} allowSubmit={allowSubmit} type={type} isAnswered={isAnswered} />\n      );\n    case MULTIPLE_CHOICE:\n      return (\n        <MultipleChoice id={id} allowSubmit={allowSubmit} type={type} isAnswered={isAnswered} />\n      );\n    case STATEMENT_CHOICE:\n      return (\n        <StatementChoice id={id} allowSubmit={allowSubmit} type={type} isAnswered={isAnswered} />\n      );\n    case OPEN_QUESTION:\n      return <OpenQuestion id={id} allowSubmit={allowSubmit} type={type} isAnswered={isAnswered} />;\n    case RANKING_TEXT:\n      return <RankingText id={id} allowSubmit={allowSubmit} type={type} isAnswered={isAnswered} />;\n    case SCENARIO:\n      return <Scenario id={id} allowSubmit={allowSubmit} type={type} isAnswered={isAnswered} />;\n    case FILL_IN_THE_BLANK:\n      return (\n        <FillInTheBlank id={id} allowSubmit={allowSubmit} type={type} isAnswered={isAnswered} />\n      );\n    case DRAG_AND_DROP_TEXT:\n      return (\n        <DragAndDropText id={id} allowSubmit={allowSubmit} type={type} isAnswered={isAnswered} />\n      );\n    case TEXT_MATCHING:\n      return <TextMatching id={id} allowSubmit={allowSubmit} type={type} isAnswered={isAnswered} />;\n    case HOTSPOT:\n      return <Hotspot id={id} allowSubmit={allowSubmit} type={type} />;\n    default:\n      return null;\n  }\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    randomizeAnswersEnabled: isRandomizeAnswersEnabled(state),\n    hasRandomizedOptionsLoaded: isRandomizedOptionsLoaded(state)\n  };\n}\n\nexport default connect(mapStateToProps)(Question);\n","import React from 'react';\nimport styled from 'styled-components';\nimport media from 'components/mixins/media';\nimport { secondaryFont } from 'components/mixins/typography';\nimport { transparentize } from 'utils/color';\nimport { localize } from 'core/localization';\nimport { INFORMATION_CONTENT } from 'constants/questionTypes';\n\nexport const Container = styled.div`\n  ${secondaryFont};\n  color: ${props => transparentize(props.theme.colors.textColor, 0.5)};\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.4;\n\n  ${media.mobile`\n    font-size: 12px;\n  `}\n`;\n\ntype PageCounterProps = {\n  index: number;\n  total: number;\n  isCourseOnOnePage: boolean;\n  questionType: string;\n};\n\nexport const PageCounter = ({\n  index,\n  total,\n  isCourseOnOnePage,\n  questionType\n}: PageCounterProps) => (\n  <Container>\n    {!isCourseOnOnePage &&\n      localize('[page counter caption]', { index, total }, `${index} out of ${total}`)}\n    {isCourseOnOnePage &&\n      questionType !== INFORMATION_CONTENT &&\n      localize('[question pool counter caption]', { index, total })}\n    {isCourseOnOnePage && questionType === INFORMATION_CONTENT && localize('[content page title]')}\n  </Container>\n);\n\nexport default PageCounter;\n","import styled from 'styled-components';\nimport media from 'components/mixins/media';\nimport { secondaryFont } from 'components/mixins/typography';\nimport { transparentize } from 'utils/color';\n\nconst containerMobileStyleBlock = `font-size: 12px;`;\n\nexport const Container = styled.div.attrs({\n  'data-test': 'question-pool-pagination'\n})`\n  ${secondaryFont};\n  color: ${props => transparentize(props.theme.colors.textColor, 0.4)};\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.4;\n\n  ${media.mobile} ${containerMobileStyleBlock}\n`;\n","import React from 'react';\nimport { localize } from 'core/localization';\nimport { Container } from './PoolCounter.styled';\n\ntype PoolCounterProps = {\n  index: number;\n  total: number;\n};\n\nexport const PoolCounter = ({ index, total }: PoolCounterProps) => (\n  <Container>\n    {localize('[question pool counter caption]', { index, total }, `${index} out of ${total}`)}\n  </Container>\n);\n\nexport default PoolCounter;\n","import PropTypes from 'prop-types';\n\n/* eslint-disable import/prefer-default-export */\nexport const createContainer = (typeName: any) => {\n  const Container = (props: any) => props.children;\n  Container.propTypes = { children: PropTypes.element.isRequired };\n  Container.typeName = typeName;\n  return Container;\n};\n","import styled from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport media from 'components/mixins/media';\n\ntype ContainerProps = {\n  ariaLabel: string;\n  role: string;\n}\nexport const Container = styled.div.attrs((props: ContainerProps) => ({\n  'aria-label': props.ariaLabel,\n  role: props.role\n}))<ContainerProps>`\n  background-color: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n  padding: 24px 0px;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${props => props.theme.colors.textColor};\n`;\n\nexport const IconContainer = styled.div`\n  margin: 0 20px 0 40px;\n  text-align: center;\n  ${media.xsmall`\n    margin-left: 16px;\n    text-align: left;\n  `};\n  & .icon {\n    line-height: inherit;\n  }\n`;\n\nexport const Body = styled.div`\n  margin: 32px 40px 0;\n  ${media.xsmall`\n    margin: 0 16px;\n  `};\n`;\n\nexport const ContentLoaderContainer = styled.div`\n  display: flex;\n  flex: 1;\n  margin-bottom: 20px;\n`;\n\nexport const ContentContainer = styled.div.attrs(props => ({\n  tabIndex: props.tabIndex\n}))`\n  &:focus {\n    outline: none;\n  }\n`;\n","import * as React from 'react';\nimport { createContainer } from 'components/common/helpers/containerComponentCreator';\n\nimport { Container, ContentContainer, IconContainer, Header, Body } from './ContentBlock.styled';\n\ntype ContentBlockProps = {\n  role: string;\n  tabIndex?: number;\n  ariaLabel?: string;\n  contentRef?(): void;\n  children: any[];\n  isCorrect?: boolean;\n  isLoading?: boolean;\n  value?: string;\n  title?: string;\n};\n\nexport const ContentBlock = ({ contentRef, children, role, tabIndex, ariaLabel }: ContentBlockProps) => {\n  const { Icon, Content, Title } = getChildrenObject(children);\n  children.forEach((child: React.ReactChildren) => {\n    validationChildren(child)\n  })\n  return (\n    <Container ariaLabel={ariaLabel || ''} role={role} tabIndex={tabIndex} ref={contentRef}>\n      <Header>\n        <IconContainer>{Icon}</IconContainer>\n        {Title}\n      </Header>\n      {Content && (\n        <Body>\n          <ContentContainer tabIndex={tabIndex}>{Content}</ContentContainer>\n        </Body>\n      )}\n    </Container>\n  );\n};\n\nconst typeNames = {\n  icon: 'icon',\n  title: 'title',\n  content: 'content'\n};\nContentBlock.Icon = createContainer(typeNames.icon);\nContentBlock.Title = createContainer(typeNames.title);\nContentBlock.Content = createContainer(typeNames.content);\n\nfunction validationChildren(children: any) {\n  const childrenObj = getChildrenObject(children);\n\n  if (!childrenObj.Icon) {\n    return new Error(`ContentBlock: Invalid Prop children, must contain ContentBlock.Icon`);\n  }\n  if (!childrenObj.Title) {\n    return new Error(`Page: Invalid Prop children, must contain ContentBlock.Title`);\n  }\n}\n\nfunction getChildrenObject(children: any[]) {\n  return React.Children.toArray(children).reduce((acc: any, child: any) => {\n    switch (child.type.typeName) {\n      case typeNames.icon: {\n        acc.Icon = child;\n        break;\n      }\n      case typeNames.content: {\n        acc.Content = child;\n        break;\n      }\n      case typeNames.title: {\n        acc.Title = child;\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n    return acc;\n  }, {});\n}\n\nexport default ContentBlock;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { localize } from 'core/localization';\nimport { ShapedIcon, Collapse, Delay, Text } from 'components/common';\nimport { ICON, SIZES } from 'constants/components';\nimport Contents from 'components/contents/Contents';\nimport ContentBlock from 'components/contents/ContentBlock';\nimport { OPEN_QUESTION } from 'constants/questionTypes';\nimport {\n  isQuestionAnswered,\n  isQuestionAnsweredCorrectly,\n  getQuestionResponse\n} from 'store/questions/selectors';\nimport * as questionActions from 'store/questions/actions';\nimport { RootAppState } from 'store/types';\n\ntype FeedbackProps = {\n  actions?: { [key: string]: any };\n  question: { [key: string]: any };\n  delay: number;\n  duration?: number;\n  animate: boolean;\n  onShown?(): void;\n  onHidden?(): void;\n  isAnswered?: boolean;\n  isAnsweredCorrectly?: boolean;\n  questionResponse?: Array<any>;\n  questionPageRef?: any;\n};\n\nexport class Feedback extends React.PureComponent<FeedbackProps, {}> {\n  refFeedback: any;\n\n  constructor(props: FeedbackProps) {\n    super(props);\n    this.refFeedback = React.createRef();\n  }\n\n  static defaultProps = {\n    delay: 0,\n    duration: 200,\n    animate: true\n  };\n\n  onShown = () => {\n    const { onShown, animate } = this.props;\n    if (onShown && this.refFeedback.current) {\n      onShown();\n      this.refFeedback.current.focus();\n    }\n    if (animate) {\n      this.props.actions &&\n        this.props.actions.animateFeedback({\n          questionId: this.props.question.id,\n          isAnimating: false\n        });\n    }\n  };\n\n  onHidden = () => {\n    const { onHidden, animate, questionPageRef } = this.props;\n    if (onHidden) onHidden();\n    if (animate) {\n      this.props.actions &&\n        this.props.actions.animateFeedback({\n          questionId: this.props.question.id,\n          isAnimating: false\n        });\n    }\n    questionPageRef && questionPageRef.current && questionPageRef.current.focus();\n  };\n\n  render() {\n    const { animate, delay, isAnswered } = this.props;\n\n    if (!animate) {\n      this.onShown();\n      return this.renderContent();\n    }\n\n    return (\n      <Delay wait={delay}>\n        <Collapse\n          delayOpacityTransition={true}\n          isExpanded={isAnswered}\n          onExpanded={this.onShown}\n          onCollapsed={this.onHidden}\n          scrollIntoView={true}\n        >\n          {this.renderContent()}\n        </Collapse>\n      </Delay>\n    );\n  }\n\n  renderContent = () => {\n    const { isAnsweredCorrectly, question } = this.props;\n    const { isSurvey } = this.props.question;\n    const isOpenQuestionType = question.type === OPEN_QUESTION;\n    const isCorrect = isSurvey || isAnsweredCorrectly;\n    const items = this.feedbackContentItems();\n    return (\n      <ContentBlock\n        role=\"dialog\"\n        tabIndex={0}\n        ariaLabel={getTitle(isCorrect, isSurvey, isOpenQuestionType)}\n        contentRef={this.refFeedback}\n      >\n        <ContentBlock.Icon>\n          <ShapedIcon\n            name={isCorrect ? 'ok' : 'close'}\n            color={'buttonTextColor'}\n            shapeColor={isCorrect ? 'correctColor' : 'incorrectColor'}\n            size={SIZES.LARGE}\n            shape={ICON.SHAPES.ROUND_FULL_COLOR}\n          />\n        </ContentBlock.Icon>\n        <ContentBlock.Title>\n          <Text appearance=\"h4\">{getTitle(isCorrect, isSurvey, isOpenQuestionType)}</Text>\n        </ContentBlock.Title>\n        {items.length > 0 && (\n          <ContentBlock.Content>\n            <Contents items={items} />\n          </ContentBlock.Content>\n        )}\n      </ContentBlock>\n    );\n  };\n\n  feedbackContentItems() {\n    const {\n      isAnsweredCorrectly,\n      correctFeedback,\n      incorrectFeedback,\n      isGeneralFeedback,\n      answers,\n      isSurvey\n    } = this.props.question;\n    const { questionResponse = [] } = this.props;\n    if (isGeneralFeedback !== undefined && !isGeneralFeedback) {\n      let items: any[] = [];\n      questionResponse.forEach(item => {\n        const currentAnswer = answers.find((answer: any) => answer.id === item);\n        if (currentAnswer.explanationBlocks) {\n          currentAnswer.explanationBlocks.forEach((block: any) => items.push(block.id));\n        }\n      });\n      return items;\n    }\n    if (isSurvey) {\n      return correctFeedback;\n    }\n    return isAnsweredCorrectly ? correctFeedback : incorrectFeedback;\n  }\n}\n\nfunction getTitle(isCorrect: boolean, isSurvey: boolean, isOpenQuestionType: boolean) {\n  if (isOpenQuestionType) {\n    return isCorrect\n      ? localize('[your answer has been stored]')\n      : localize('[your answer is empty and was not stored]');\n  }\n\n  return localize(\n    isSurvey ? '[your answer has been stored]' : isCorrect ? '[thats correct]' : '[thats incorrect]'\n  );\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return { actions: bindActionCreators(questionActions, dispatch) };\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: FeedbackProps) {\n  const questionId = ownProps.question.id;\n  return {\n    isAnswered: isQuestionAnswered(state, questionId),\n    isAnsweredCorrectly: isQuestionAnsweredCorrectly(state, questionId),\n    questionResponse: getQuestionResponse(state, questionId)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Feedback);\n","import styled, { css } from 'styled-components';\nimport {\n  Button as ButtonComponent,\n  Separator as SeparatorComponent,\n  Text\n} from 'components/common';\n\ntype ControlContainerProps = {\n  visible?: boolean\n}\nexport const ControlContainer = styled.div.attrs(props => ({\n  tabIndex: props.tabIndex\n}))<ControlContainerProps>`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  &:focus {\n    outline: none;\n  }\n  &.hideHint {\n    transform: translate(0, 100%);\n  }\n  ${props =>\n    props.visible &&\n    css`\n      visibility: visible;\n    `};\n  ${props =>\n    props.visible &&\n    css`\n      visibility: hidden;\n      opacity: 0;\n    `};\n`;\n\nexport const Button = styled(ButtonComponent)`\n  flex-shrink: 0;\n`;\n\nexport const ButtonSeparator = styled(SeparatorComponent)`\n  margin: 0;\n`;\n\nexport const TitleText = styled(Text)`\n  font-weight: 600;\n`;\n\nexport const ContainerHint = styled.div.attrs({\n  'data-test': 'hint-container'\n})`\n  position: relative;\n  padding-bottom: 69px;\n`;\n","import * as React from 'react';\nimport { localize } from 'core/localization';\nimport ContentBlock from 'components/contents/ContentBlock';\nimport Contents from 'components/contents/Contents';\nimport { Icon, Separator, Collapse } from 'components/common';\nimport { ControlContainer, Button, ButtonSeparator, TitleText, ContainerHint } from './Hint.styled';\nimport { RECALCULATE_LOCATION_TIME_MS } from '../../../constants/common';\n\ntype HintProps = {\n  items: Array<string>;\n  shouldRecalculateScrollLocation(reCalculate?: boolean): any;\n  isCourseOnOnePage?: boolean;\n};\n\ntype HintState = {\n  isExpanded: boolean;\n};\n\nexport class Hint extends React.PureComponent<HintProps, HintState> {\n  constructor(props: HintProps) {\n    super(props);\n    this.state = { isExpanded: false };\n  }\n\n  componentDidUpdate(prevProps: HintProps) {\n    if (prevProps.items !== this.props.items) {\n      this.setState({ isExpanded: false });\n    }\n\n    if (this.props.isCourseOnOnePage) {\n      this.recalculateScrollLocation();\n    }\n  }\n\n  componentWillUnmount = () => {\n    if (this.props.isCourseOnOnePage) {\n      clearTimeout(this.recalculateScrollLocation());\n    }\n  };\n\n  recalculateScrollLocation = () =>\n    setTimeout(() => {\n      this.props.shouldRecalculateScrollLocation(true);\n    }, RECALCULATE_LOCATION_TIME_MS);\n\n  toggleIsExpanded = () => {\n    this.setState(prevState => ({ isExpanded: !prevState.isExpanded }));\n  };\n\n  render() {\n    const { items } = this.props;\n    const { isExpanded } = this.state;\n    return (\n      <ContainerHint>\n        <ControlContainer>\n          <ButtonSeparator opacity={0.1} color=\"textColor\" />\n          <Button\n            tabIndex={1}\n            layout=\"secondary\"\n            onClick={this.toggleIsExpanded}\n            textTransform=\"uppercase\"\n            size=\"small\"\n            aria-expanded={isExpanded}\n          >\n            {localize(isExpanded ? '[hide hint]' : '[show hint]')}\n          </Button>\n          <ButtonSeparator opacity={0.1} color=\"textColor\" />\n        </ControlContainer>\n        <Collapse\n          isExpanded={isExpanded}\n          scrollIntoView={true}\n          duration={300}\n          opacityDuration=\"500\"\n        >\n          <Separator margin={32} opacity={0.1} color=\"textColor\" />\n          <ContentBlock title=\"Hint\" role=\"status\">\n            <ContentBlock.Icon>\n              <Icon name=\"hint\" color=\"mainColor\" size={22} />\n            </ContentBlock.Icon>\n            <ContentBlock.Title>\n              <TitleText>{localize('[hint]')}</TitleText>\n            </ContentBlock.Title>\n            <ContentBlock.Content>\n              <Contents items={items} />\n            </ContentBlock.Content>\n          </ContentBlock>\n        </Collapse>\n      </ContainerHint>\n    );\n  }\n}\nexport default Hint;\n","import styled from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport media from 'components/mixins/media';\nimport { defaultBoxShadowColor } from 'constants/common';\n\nexport const Container = styled.div`\n  display: inline-block;\n  width: inherit;\n  height: 84px;\n  background: ${props => props.theme.colors.contentBodyColor};\n  box-shadow: 0 2px 10px 0 ${transparentize(defaultBoxShadowColor, 0.1)};\n  padding: 0 15px 8px 15px;\n  -webkit-transform: translate3d(0, 0, 0);\n  transform: translate3d(0, 0, 0);\n  ${media.small`\n    width: 100%;\n    padding-bottom: 0;\n  `};\n`;\n\nexport const IframeElement = styled.iframe.attrs((props: any) => ({\n  allow: props.allow,\n  audioid: props.audioid\n}))`\n  height: 65px;\n  width: 100%;\n  border: none;\n`;\n","import * as React from 'react';\nimport { withTheme } from 'styled-components';\nimport { getStyles } from 'utils/element';\nimport { getDOMNode, getAttributesNodeElement } from 'utils/dom';\nimport { addQueryStringParameter } from 'utils/window';\nimport cloneDeep from 'lodash.clonedeep';\nimport { Container, IframeElement } from './VoiceOver.styled';\n\ntype VoiceOverProps = {\n  embedCode: string;\n  theme: { [key: string]: any };\n  tabIndex: number;\n  isCourseOnOnePage: boolean;\n};\n\nconst disableAutoPlay = (src: string) => {\n  const clonedUrl = cloneDeep(src);\n  const url = new URL(clonedUrl);\n  const urlParams = url.searchParams;\n  urlParams.set('autoplay', '0');\n  url.search = urlParams.toString();\n  return url.toString();\n};\n\nexport class VoiceOver extends React.PureComponent<VoiceOverProps, {}> {\n  static defaultProps = {\n    tabIndex: 0\n  };\n\n  getIframeSrcWithStyleVariable(src: string) {\n    return addQueryStringParameter(\n      src,\n      'style_variables',\n      encodeURIComponent(getStyles(this.props.theme))\n    );\n  }\n\n  renderIframeElement() {\n    const { isCourseOnOnePage, tabIndex } = this.props;\n    const iframeNode = getDOMNode(this.props.embedCode);\n    const attrName = getAttributesNodeElement(iframeNode);\n    const iframeAttr: { [key: string]: any } = {};\n\n    attrName.forEach(name => {\n      iframeAttr[name] = iframeNode.attributes[name].nodeValue;\n    });\n\n    iframeAttr.tabIndex = tabIndex;\n    iframeAttr.src = this.getIframeSrcWithStyleVariable(iframeAttr.src);\n\n    if (isCourseOnOnePage) {\n      iframeAttr.src = disableAutoPlay(iframeAttr.src);\n    }\n\n    return <IframeElement {...iframeAttr} />;\n  }\n\n  render() {\n    return <Container>{this.renderIframeElement()}</Container>;\n  }\n}\n\nexport default withTheme(VoiceOver);\n","\nexport function getDOMNode(embedCode: string):any {\n  const nodeElement = new DOMParser().parseFromString(embedCode, 'text/html');\n  return nodeElement.body.firstChild;\n}\n\nexport function getAttributesNodeElement(elem: any) {\n  const attributes = elem.attributes; // eslint-disable-line\n  const length = attributes.length; // eslint-disable-line\n\n  const result = new Array(length);\n  for (let i = 0; i < length; i++) {\n    result[i] = attributes[i].name;\n  }\n  return result;\n}\n","import styled from 'styled-components';\nimport { transition } from 'components/mixins/interactivity';\nimport { transparentize } from 'utils/color';\nimport { secondaryFont } from 'components/mixins/typography';\nimport { Text } from 'components/common';\n\ntype ActionButtonsContainerProps = {\n  isHidden: boolean;\n};\nexport const ActionButtonsContainer = styled.div<ActionButtonsContainerProps>`\n  ${transition('opacity', '0.2s')};\n  opacity: ${props => (props.isHidden ? 0 : 1)};\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: baseline;\n\n  & > button {\n    margin-bottom: 8px;\n    margin-right: 24px;\n  }\n\n  & > .tooltip {\n    bottom: 105%;\n    left: 0;\n  }\n`;\n\ntype NavButtonsBlockProps = {\n  tabIndex: number;\n};\nexport const NavButtonsBlock = styled.div.attrs((props: NavButtonsBlockProps) => ({\n  tabIndex: props.tabIndex\n}))<NavButtonsBlockProps>`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 49px;\n\n  & > button {\n    margin: 0 24px 20px 0;\n  }\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const SurveyHint = styled.p`\n  ${secondaryFont};\n  font-size: 12px;\n  line-height: 24px;\n  margin-bottom: 8px;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.5)};\n  align-self: center;\n\n  & + div {\n    width: 100%;\n  }\n`;\n\ntype RemainingAttemptsReminderTextProps = {\n  ariaLabel: string;\n  tabIndex: number;\n  role: string;\n};\nexport const RemainingAttemptsReminderText = styled(Text).attrs(\n  (props: RemainingAttemptsReminderTextProps) => ({\n    tabIndex: props.tabIndex,\n    role: props.role,\n    'aria-label': props.ariaLabel\n  })\n)<RemainingAttemptsReminderTextProps>`\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 24px;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.4)};\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const RemainingAttemptsReminder = styled.div`\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  position: relative;\n  width: 100%;\n`;\n\nexport const SubmitOnceButtonWrapper = styled.div``;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport * as courseTimerActions from 'store/timer/actions';\nimport { localize } from 'core/localization';\nimport * as questionActions from 'store/questions/actions';\nimport { BUTTON, TOOLTIP } from 'constants/components';\nimport { INFORMATION_CONTENT, SCENARIO } from 'constants/questionTypes';\nimport { Button, CssAnimation, StatusTooltip } from 'components/common';\nimport {\n  isQuestionAnswered,\n  isQuestionAnsweredCorrectly,\n  isFeedbackAnimating,\n  getAffectProgressQuestionsCount\n} from 'store/questions/selectors';\nimport {\n  isQuestionPoolEnabled,\n  isAttemptsLimited,\n  getLimitedAttemptsNumber,\n  getTimerEnabled\n} from 'store/settings/selectors';\nimport { getTimerStatus } from 'store/timer/selectors';\nimport { TimerStatus } from 'constants/timer';\nimport { RootAppState } from 'store/types.js';\nimport {\n  RemainingAttemptsReminder,\n  RemainingAttemptsReminderText,\n  ActionButtonsContainer,\n  NavButtonsBlock,\n  SurveyHint\n} from './ActionsBlock.styled';\n\ntype ActionBlocksState = {\n  isJustSubmitted: boolean;\n  showTooltip: boolean;\n  isInformationContent: any;\n  canGoNext: boolean;\n};\n\nexport type ActionBlocksProps = {\n  actions?: { [key: string]: any };\n  question: { [key: string]: any };\n  goToNextPage(): void;\n  isNextPageResults: boolean;\n  feedbackAnimated?: boolean;\n  questionCountInSection: number;\n  questionIndex: number;\n  isQuestionPool?: boolean;\n  scrollToId?(id?: string): void;\n  currentScrollLocationId?: any;\n  isLastBlock?: any;\n  isCourseOnOnePage?: boolean;\n  isLimitedAttempts?: boolean;\n  limitedAttemptsNumber?: number;\n  timerStatus?: TimerStatus;\n  timerActions?: { [key: string]: any };\n  isTimerEnabled?: boolean;\n  affectProgressQuestionsCount?: number;\n};\nexport class ActionBlocks<T extends ActionBlocksProps> extends React.Component<\n  T,\n  ActionBlocksState\n> {\n  constructor(props: T) {\n    super(props);\n    this.state = {\n      isJustSubmitted: false,\n      showTooltip: false,\n      isInformationContent: this.props.question.type === INFORMATION_CONTENT,\n      canGoNext: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      canGoNext: this.canGoToNextQuestion()\n    });\n  }\n\n  componentDidUpdate(prevProps: ActionBlocksProps) {\n    if (prevProps.question.id !== this.props.question.id) {\n      this.setState({ isJustSubmitted: false });\n    }\n  }\n\n  render() {\n    const { isJustSubmitted, isInformationContent } = this.state;\n    const { question, feedbackAnimated = false } = this.props;\n    const { isSurvey } = question;\n    const canGoNext = this.canGoToNextQuestion();\n    const remainingAttempts = this.getRemainingAttempts();\n    const isAttemptAllowed = this.isAttemptAllowed();\n    return (\n      <ActionButtonsContainer isHidden={feedbackAnimated}>\n        {!isInformationContent && (!question.isAnswered || feedbackAnimated) && (\n          <React.Fragment>\n            {question.type === SCENARIO ? (\n              <StatusTooltip\n                popoverPosition={'top'}\n                layout={TOOLTIP.INCORRECT}\n                onRequestClose={this.hidePopover}\n                showTooltip={this.state.showTooltip}\n                message={localize('[scenario tooltip text]')}\n                popoverButton={\n                  <Button tabIndex={0} onClick={this.submit} onBlur={this.hidePopover}>\n                    {localize('[submit]')}\n                  </Button>\n                }\n              />\n            ) : (\n              <React.Fragment>\n                <Button tabIndex={0} onClick={this.submit}>\n                  {localize('[submit]')}\n                </Button>\n                {isSurvey && !canGoNext && (\n                  <SurveyHint>{localize('[survey question hint]')}</SurveyHint>\n                )}\n              </React.Fragment>\n            )}\n            {isAttemptAllowed && (\n              <RemainingAttemptsReminder>\n                <RemainingAttemptsReminderText\n                  data-test=\"remaining-attempts\"\n                  ellipsis\n                  ariaLabel={`${localize('[remaining attempts]')} ${remainingAttempts}`}\n                  tabIndex={-1}\n                  role=\"status\"\n                >\n                  {`(${localize('[remaining attempts]')} ${remainingAttempts})`}\n                </RemainingAttemptsReminderText>\n              </RemainingAttemptsReminder>\n            )}\n          </React.Fragment>\n        )}\n        {!feedbackAnimated &&\n          (isJustSubmitted ? (\n            <CssAnimation type={CssAnimation.AnimationType.slideInDown}>\n              {this.renderNavButtonsBlock()}\n            </CssAnimation>\n          ) : (\n            this.renderNavButtonsBlock()\n          ))}\n      </ActionButtonsContainer>\n    );\n  }\n\n  nextButtonLayout() {\n    const { question } = this.props;\n    const { isAnsweredCorrectly, isSurvey } = question;\n    const isInformationContent = question.type === INFORMATION_CONTENT;\n    return isInformationContent || isAnsweredCorrectly || isSurvey\n      ? BUTTON.LAYOUT.PRIMARY\n      : BUTTON.LAYOUT.SECONDARY;\n  }\n\n  renderNavButtonsBlock() {\n    const {\n      question,\n      questionIndex,\n      questionCountInSection,\n      isCourseOnOnePage,\n      isNextPageResults\n    } = this.props;\n    const { isAnsweredCorrectly, isSurvey } = question;\n    const isLastPageInSection = questionIndex + 1 === questionCountInSection;\n    const isInformationContent = question.type === INFORMATION_CONTENT;\n    const canGoNext = this.canGoToNextQuestion();\n\n    return (\n      <NavButtonsBlock tabIndex={-1}>\n        {this.canTryAgainQuestion() && (\n          <Button tabIndex={0} onClick={this.tryAgain}>\n            {localize('[try again]')}\n          </Button>\n        )}\n        {!isCourseOnOnePage &&\n          canGoNext &&\n          this.renderNextButton(\n            isInformationContent,\n            isAnsweredCorrectly,\n            isSurvey,\n            isLastPageInSection\n          )}\n\n        {isCourseOnOnePage &&\n          isNextPageResults &&\n          this.renderNextButton(\n            isInformationContent,\n            isAnsweredCorrectly,\n            isSurvey,\n            isLastPageInSection\n          )}\n      </NavButtonsBlock>\n    );\n  }\n\n  renderNextButton(\n    isInformationContent: boolean,\n    isAnsweredCorrectly: boolean,\n    isSurvey: boolean,\n    isLastPageInSection: boolean\n  ) {\n    const {\n      timerActions,\n      isTimerEnabled,\n      isNextPageResults,\n      affectProgressQuestionsCount\n    } = this.props;\n    const goToNextPage = () => {\n      if (\n        timerActions &&\n        isTimerEnabled &&\n        isNextPageResults &&\n        affectProgressQuestionsCount <= 0\n      ) {\n        timerActions.setTimerStatus(TimerStatus.STOPPED);\n        timerActions.updateTimerProgress();\n      }\n      const { goToNextPage } = this.props;\n      goToNextPage();\n    };\n\n    return (\n      <Button\n        data-test=\"button-next\"\n        layout={this.nextButtonLayout()}\n        onClick={goToNextPage}\n        tabIndex={0}\n        suffixIcon=\"arrow-down\"\n      >\n        {this.getNextNavigationText(isLastPageInSection)}\n      </Button>\n    );\n  }\n\n  hidePopover = async () => {\n    this.setState({ showTooltip: false });\n  };\n\n  submit = () => {\n    const { question } = this.props;\n    if (question.type === SCENARIO) {\n      if (question.response.isFinished) {\n        this.props.actions && this.props.actions.answer(question.id);\n        this.props.actions &&\n          this.props.actions.animateFeedback({\n            questionId: question.id,\n            isAnimating: true\n          });\n        this.setState({ isJustSubmitted: true, showTooltip: false });\n      } else {\n        this.setState({ showTooltip: true });\n      }\n    } else {\n      this.props.actions && this.props.actions.answer(question.id);\n      this.props.actions &&\n        this.props.actions.animateFeedback({\n          questionId: question.id,\n          isAnimating: true\n        });\n      this.setState({\n        isJustSubmitted: true,\n        canGoNext: this.canGoToNextQuestion()\n      });\n    }\n  };\n\n  getNextNavigationText = (isLastPageInSection: boolean) => {\n    const { isNextPageResults, isQuestionPool } = this.props;\n    if (isNextPageResults) {\n      return localize('[go to results]');\n    }\n    if (isQuestionPool) {\n      return localize('[next]');\n    }\n    return localize(isLastPageInSection ? '[next section]' : '[next]');\n  };\n\n  canGoToNextQuestion() {\n    return this.props.question.type === INFORMATION_CONTENT ? true : this.props.question.isAnswered;\n  }\n\n  canTryAgainQuestion() {\n    const { question, isLimitedAttempts, timerStatus } = this.props;\n    const isAttemptAllowed = this.isAttemptAllowed() || !isLimitedAttempts;\n    const isTimerStopped = timerStatus === TimerStatus.STOPPED;\n\n    return (\n      isAttemptAllowed &&\n      question.type !== INFORMATION_CONTENT &&\n      question.isAnswered &&\n      !question.isAnsweredCorrectly &&\n      !question.isSurvey &&\n      !isTimerStopped\n    );\n  }\n\n  isAttemptAllowed() {\n    const { question, isLimitedAttempts } = this.props;\n    const remainingAttempts = this.getRemainingAttempts();\n    return (\n      isLimitedAttempts &&\n      !question.isSurvey &&\n      !question.isAnsweredCorrectly &&\n      remainingAttempts > 0\n    );\n  }\n\n  getRemainingAttempts() {\n    const { question, isLimitedAttempts, limitedAttemptsNumber } = this.props;\n    return isLimitedAttempts && limitedAttemptsNumber\n      ? (limitedAttemptsNumber as number) - question.attemptNumber\n      : 0;\n  }\n\n  tryAgain = () => {\n    const { question } = this.props;\n    this.props.actions && this.props.actions.resetProgress(question);\n    this.props.actions && this.props.actions.updateRetries(question.id);\n    this.setState({ isJustSubmitted: false });\n    this.props.actions &&\n      this.props.actions.animateFeedback({ questionId: question.id, isAnimating: true });\n  };\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: ActionBlocksProps) {\n  const questionId = ownProps.question.id;\n  return {\n    isAnswered: isQuestionAnswered(state, questionId),\n    isAnsweredCorrectly: isQuestionAnsweredCorrectly(state, questionId),\n    feedbackAnimated: isFeedbackAnimating(state, questionId),\n    isLimitedAttempts: isAttemptsLimited(state),\n    limitedAttemptsNumber: getLimitedAttemptsNumber(state),\n    timerStatus: getTimerStatus(state),\n    isQuestionPool: isQuestionPoolEnabled(state),\n    isTimerEnabled: getTimerEnabled(state),\n    affectProgressQuestionsCount: getAffectProgressQuestionsCount(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(questionActions, dispatch),\n    timerActions: bindActionCreators(courseTimerActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActionBlocks);\n","import styled from 'styled-components';\nimport { Text } from 'components/common';\nimport media from 'components/mixins/media';\n\nexport const QuestionTitleWrapper = styled.div`\n  & > .reviewable-container {\n    height: auto;\n  }\n  outline: none;\n`;\n\nexport const QuestionTitle = styled(Text).attrs({\n  'data-test': 'question-title'\n})`\n  margin: 12px 0 32px;\n\n  ${media.medium`\n    padding-right: 22px;\n  `}\n`;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { INFORMATION_CONTENT } from 'constants/questionTypes';\nimport { REVIEW_COMMENT_PROPERTIES, REVIEW_COMMENT_TYPES } from 'constants/review';\nimport {\n  getSection,\n  getQuestionIndex,\n  getQuestionCount,\n  sectionExists\n} from 'store/sections/selectors';\nimport {\n  getBackground,\n  getLogo,\n  isMainLogoShown,\n  isShowLearningHintsEnabled,\n  isQuestionPoolEnabled,\n  getQuestionPoolSize,\n  isAllQuestionsOnOnePage\n} from 'store/settings/selectors';\nimport { Separator, CourseLogo } from 'components/common';\nimport Contents from 'components/contents/Contents';\nimport withFallbackToNotFound from 'components/hocs/withFallbackToNotFound';\nimport withNavigation from 'components/hocs/withNavigation';\nimport Question from 'components/questions/Question';\nimport Reviewable from 'components/review/Reviewable';\nimport { localize } from 'core/localization';\nimport * as questionActions from 'store/questions/actions';\nimport {\n  getQuestion,\n  isQuestionAnswered,\n  isQuestionAnsweredCorrectly,\n  questionExists,\n  getQuestionResponse,\n  getPoolQuestionIndex\n} from 'store/questions/selectors';\nimport PageCounter from 'components/question/PageCounter';\nimport PoolCounter from 'components/question/PoolCounter';\nimport Feedback from 'components/question/Feedback';\nimport Hint from 'components/question/Hint';\nimport VoiceOver from 'components/question/VoiceOver';\nimport { getCourseTitle } from 'store/course/selectors';\nimport { RootAppState } from 'store/types';\nimport ActionBlock from './actionsBlock/ActionsBlock';\nimport { QuestionTitle, QuestionTitleWrapper } from './QuestionPage.styled';\nimport { SKIP_TO_CONTENT_IDS } from 'constants/common';\n\nexport type QuestionPageProps = {\n  section: { [key: string]: any };\n  question: { [key: string]: any };\n  actions: { [key: string]: any };\n  navigateToNextPage(): void;\n  isNextPageResults(): boolean;\n  questionIndex: number;\n  questionCountInSection: number;\n  bodyBackground: { [key: string]: any };\n  logoUrl: string;\n  logoShown: boolean;\n  title: string;\n  questionResponse: any[];\n  isQuestionPool: boolean;\n  questionPoolSize: number;\n  poolQuestionIndex: number;\n  sectionId: any;\n  questionId: any;\n  currentScrollLocationId: any;\n  scrollToId(id: string): void;\n  isLastBlock: any;\n  isCourseOnOnePage: boolean;\n  onePageQuestionIndex: number;\n  questionCountInOnePage: number;\n  showLearningHints: boolean;\n  shouldRecalculateScrollLocation(reCalculate: boolean): any;\n};\n\nexport type QuestionPageState = {\n  showTooltip: boolean;\n  feedbackContentList: any[];\n};\nexport class QuestionPage<T extends QuestionPageProps> extends Component<T, QuestionPageState> {\n  questionPageRef: any;\n  constructor(props: T) {\n    super(props);\n    this.state = {\n      showTooltip: false,\n      feedbackContentList: []\n    };\n    this.questionPageRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (!this.props.isCourseOnOnePage) {\n      this.props.actions.markAsOpened(this.props.question.id);\n      this.setTitlePage();\n    }\n    this.props.actions.loadFeedback(this.props.question.id);\n  }\n\n  componentDidUpdate(prevProps: QuestionPageProps) {\n    if (prevProps.question.id !== this.props.question.id) {\n      this.props.actions.loadFeedback(this.props.question.id);\n    }\n    if (this.props.isCourseOnOnePage) {\n      this.props.shouldRecalculateScrollLocation(true);\n    }\n  }\n\n  hidePopover = async () => {\n    this.setState({ showTooltip: false });\n  };\n\n  getNextNavigationText = (isLastPageInSection: boolean) => {\n    const { isNextPageResults } = this.props;\n    if (isNextPageResults()) {\n      return localize('[go to results]');\n    }\n    return localize(isLastPageInSection ? '[next section]' : '[next]');\n  };\n\n  setTitlePage = () => {\n    const { question } = this.props;\n    const isInformationContent = question.type === INFORMATION_CONTENT;\n    if (isInformationContent) {\n      document.title = `${localize('[content page title]')} | ${this.props.title}`;\n    } else {\n      document.title = `${localize('[questions page title]')} | ${this.props.title}`;\n    }\n  };\n\n  render() {\n    const {\n      question,\n      questionIndex,\n      questionCountInSection,\n      bodyBackground,\n      logoUrl,\n      logoShown,\n      isQuestionPool,\n      questionPoolSize,\n      poolQuestionIndex,\n      currentScrollLocationId,\n      isLastBlock,\n      isCourseOnOnePage,\n      onePageQuestionIndex,\n      questionCountInOnePage\n    } = this.props;\n    const questionType = question.type === INFORMATION_CONTENT ? INFORMATION_CONTENT : 'question';\n\n    return (\n      <Fragment>\n        {logoShown && !isCourseOnOnePage && <CourseLogo logoUrl={logoUrl} />}\n        {isQuestionPool && <PoolCounter index={poolQuestionIndex + 1} total={questionPoolSize} />}\n        {!isQuestionPool && (\n          <PageCounter\n            index={isCourseOnOnePage ? onePageQuestionIndex + 1 : questionIndex + 1}\n            total={isCourseOnOnePage ? questionCountInOnePage : questionCountInSection}\n            isCourseOnOnePage={isCourseOnOnePage}\n            questionType={questionType}\n          />\n        )}\n        <QuestionTitleWrapper\n          ref={this.questionPageRef}\n          tabIndex={0}\n          id={SKIP_TO_CONTENT_IDS.QUESTION_PAGE}\n        >\n          <Reviewable context={{ type: questionType, id: question.id, title: question.title }}>\n            <QuestionTitle appearance=\"h1\">{question.title}</QuestionTitle>\n          </Reviewable>\n        </QuestionTitleWrapper>\n        {this.renderInstructions()}\n        <Question\n          id={question.id}\n          type={question.type}\n          isAnswered={question.isAnswered}\n          bodyBackground={bodyBackground}\n        />\n        {this.renderInformationContentOrHints()}\n        {this.renderFeedback()}\n        <ActionBlock\n          question={question}\n          goToNextPage={this.navigateToNextPage}\n          isNextPageResults={isCourseOnOnePage ? isLastBlock : this.props.isNextPageResults()}\n          questionCountInSection={questionCountInSection}\n          questionIndex={questionIndex}\n          scrollToId={this.props.scrollToId}\n          currentScrollLocationId={currentScrollLocationId}\n          isLastBlock={isLastBlock}\n          isCourseOnOnePage={isCourseOnOnePage}\n        />\n        {this.renderVoiceOver()}\n      </Fragment>\n    );\n  }\n\n  navigateToNextPage = () => {\n    const { navigateToNextPage } = this.props;\n    navigateToNextPage();\n  };\n\n  getQuestionIndex = () => {\n    const {\n      questionIndex,\n      isCourseOnOnePage,\n      isQuestionPool,\n      poolQuestionIndex,\n      onePageQuestionIndex\n    } = this.props;\n\n    if (isCourseOnOnePage) {\n      return onePageQuestionIndex + 1;\n    }\n\n    if (isQuestionPool) {\n      return poolQuestionIndex + 1;\n    }\n\n    return questionIndex + 1;\n  };\n\n  getTotalQuestionCount = () => {\n    const {\n      questionCountInSection,\n      isCourseOnOnePage,\n      questionCountInOnePage,\n      isQuestionPool,\n      questionPoolSize\n    } = this.props;\n\n    if (isCourseOnOnePage) {\n      return questionCountInOnePage;\n    }\n\n    if (isQuestionPool) {\n      return questionPoolSize;\n    }\n\n    return questionCountInSection;\n  };\n\n  renderQuestionHeader = () => {\n    const { question, logoUrl, logoShown, isCourseOnOnePage } = this.props;\n\n    const questionType = question.type === INFORMATION_CONTENT ? INFORMATION_CONTENT : 'question';\n    return (\n      <React.Fragment>\n        {logoShown && !isCourseOnOnePage && <CourseLogo logoUrl={logoUrl} />}\n        <PageCounter\n          index={this.getQuestionIndex()}\n          total={this.getTotalQuestionCount()}\n          isCourseOnOnePage={isCourseOnOnePage}\n          questionType={questionType}\n        />\n        <QuestionTitleWrapper tabIndex={0} id={SKIP_TO_CONTENT_IDS.QUESTION_PAGE}>\n          <Reviewable context={{ type: questionType, id: question.id, title: question.title }}>\n            <QuestionTitle appearance=\"h1\">{question.title}</QuestionTitle>\n          </Reviewable>\n        </QuestionTitleWrapper>\n        {this.renderInstructions()}\n      </React.Fragment>\n    );\n  };\n\n  renderInformationContentOrHints() {\n    const { question, showLearningHints } = this.props;\n    if (\n      question.hints.length === 0 ||\n      (!showLearningHints && question.type !== INFORMATION_CONTENT)\n    ) {\n      return <Separator margin={32} opacity={0.1} color=\"textColor\" />;\n    }\n    if (question.type === INFORMATION_CONTENT) {\n      return <Contents items={question.hints} />;\n    }\n    return (\n      <Reviewable\n        context={{\n          type: REVIEW_COMMENT_TYPES.QUESTION,\n          property: REVIEW_COMMENT_PROPERTIES.LEARNING_CONTENT,\n          id: question.id,\n          title: question.title\n        }}\n      >\n        <Hint\n          items={question.hints}\n          shouldRecalculateScrollLocation={this.props.shouldRecalculateScrollLocation}\n          isCourseOnOnePage={this.props.isCourseOnOnePage}\n        />\n      </Reviewable>\n    );\n  }\n\n  renderFeedback() {\n    const { question } = this.props;\n    if (question.type === INFORMATION_CONTENT) {\n      return null;\n    }\n\n    return (\n      <Feedback\n        question={question}\n        animate={true}\n        delay={200}\n        questionPageRef={this.questionPageRef}\n      />\n    );\n  }\n\n  renderInstructions() {\n    const { question } = this.props;\n    const { instructions, type } = question;\n    return (\n      <React.Fragment>\n        {instructions.length > 0 && <Contents items={instructions} />}\n        {type !== INFORMATION_CONTENT && instructions.length !== 0 && (\n          <Separator opacity={0.1} color=\"textColor\" />\n        )}\n      </React.Fragment>\n    );\n  }\n\n  renderVoiceOver() {\n    const { question, isCourseOnOnePage } = this.props;\n    return (\n      !!question.voiceOver && (\n        <Reviewable\n          isVoiceOver={true}\n          isCourseOnOnePage={isCourseOnOnePage}\n          context={{\n            type: REVIEW_COMMENT_TYPES.INFORMATION_CONTENT,\n            property: REVIEW_COMMENT_PROPERTIES.VOICE_OVER,\n            id: question.id,\n            title: question.title\n          }}\n        >\n          <VoiceOver\n            tabIndex={0}\n            embedCode={question.voiceOver}\n            isCourseOnOnePage={isCourseOnOnePage}\n          />\n        </Reviewable>\n      )\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: any) {\n  const isOnePage = isAllQuestionsOnOnePage(state);\n  const { sectionId, questionId } = (() => {\n    if (isOnePage) {\n      return ownProps;\n    }\n    return ownProps.match.params;\n  })();\n\n  return {\n    logoUrl: getLogo(state),\n    logoShown: isMainLogoShown(state),\n    section: getSection(state, sectionId),\n    questionIndex: getQuestionIndex(state, sectionId, questionId),\n    questionCountInSection: getQuestionCount(state, sectionId),\n    question: getQuestion(state, questionId),\n    isAnswered: isQuestionAnswered(state, questionId),\n    isAnsweredCorrectly: isQuestionAnsweredCorrectly(state, questionId),\n    bodyBackground: getBackground(state).body,\n    title: getCourseTitle(state),\n    sectionExists: sectionExists(state, sectionId),\n    questionExists: questionExists(state, questionId),\n    questionResponse: getQuestionResponse(state, questionId),\n    isQuestionPool: isQuestionPoolEnabled(state),\n    questionPoolSize: getQuestionPoolSize(state),\n    poolQuestionIndex: getPoolQuestionIndex(state, questionId),\n    isCourseOnOnePage: isAllQuestionsOnOnePage(state),\n    showLearningHints: isShowLearningHintsEnabled(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return { actions: bindActionCreators(questionActions, dispatch) };\n}\n\nfunction predicateForRedirect(props: any) {\n  return !props.sectionExists || !props.questionExists;\n}\n\nexport default withNavigation(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(withFallbackToNotFound(QuestionPage, predicateForRedirect))\n);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport * as courseTimerActions from 'store/timer/actions';\nimport { TimerStatus } from 'constants/timer';\nimport {\n  getTimerEnabled,\n  isQuestionPoolEnabled,\n  getQuestionPoolSize\n} from 'store/settings/selectors';\nimport { RootAppState } from '../../../../store/types.js';\nimport {\n  isQuestionAnswered,\n  isQuestionAnsweredCorrectly,\n  isFeedbackAnimating,\n  isAllAffectedQuestionsAnswered\n} from '../../../../store/questions/selectors';\nimport { RESULTS_PATH } from '../../../../constants/navigation';\nimport { localize } from '../../../../core/localization';\nimport * as questionActions from '../../../../store/questions/actions';\nimport { BUTTON, TOOLTIP } from '../../../../constants/components';\nimport { INFORMATION_CONTENT, SCENARIO } from '../../../../constants/questionTypes';\nimport { Button, StatusTooltip } from '../../../../components/common';\nimport { isAttemptSubmitted } from '../../../../store/course/selectors';\nimport { ActionBlocks, ActionBlocksProps } from './ActionsBlock';\nimport SubmitOnceButton from '../../../../components/submitOnce';\nimport {\n  ActionButtonsContainer,\n  SurveyHint,\n  SubmitOnceButtonWrapper,\n  NavButtonsBlock\n} from './ActionsBlock.styled';\n\ninterface ActionsBlockSubmitOnceProps extends ActionBlocksProps {\n  overallNumberOfQuestions: number;\n  courseQuestionIndex: number;\n  isEveryAffectedQuestionsAnswered?: boolean;\n  showSubmitButton?: boolean;\n  isCourseSubmitted?: boolean;\n  isLastPage?: boolean;\n  navigateToUrl(url: string): void;\n  questionPoolSize?: number;\n  isQuestionPool?: boolean;\n  timerActions?: { [key: string]: any };\n  isTimerEnabled?: boolean;\n}\n\nexport class ActionsBlockSubmitOnce extends ActionBlocks<ActionsBlockSubmitOnceProps> {\n  constructor(props: ActionsBlockSubmitOnceProps) {\n    super(props);\n    this.state = {\n      isJustSubmitted: false,\n      showTooltip: false,\n      isInformationContent: this.props.question.type === INFORMATION_CONTENT,\n      canGoNext: false\n    };\n  }\n\n  render() {\n    const { isInformationContent } = this.state;\n    const {\n      question,\n      isCourseSubmitted,\n      courseQuestionIndex,\n      overallNumberOfQuestions,\n      isCourseOnOnePage\n    } = this.props;\n    const { isSurvey } = question;\n    const isLastPage = courseQuestionIndex + 1 === overallNumberOfQuestions;\n    return (\n      <ActionButtonsContainer isHidden={false}>\n        {!isCourseSubmitted && !isInformationContent && (\n          <React.Fragment>\n            {question.type === SCENARIO ? (\n              <StatusTooltip\n                popoverPosition={'top'}\n                layout={TOOLTIP.INCORRECT}\n                showTooltip={this.state.showTooltip}\n                message={localize('[scenario tooltip text]')}\n                popoverButton={\n                  <Button\n                    tabIndex={0}\n                    onClick={this.next}\n                    onBlur={this.hidePopover}\n                    data-test=\"button-next\"\n                    layout={this.questionNextButtonLayout()}\n                  >\n                    {localize('[next]')}\n                  </Button>\n                }\n              />\n            ) : (\n              !isLastPage &&\n              !isCourseOnOnePage && (\n                <React.Fragment>\n                  <Button\n                    tabIndex={0}\n                    onClick={this.next}\n                    data-test=\"button-next\"\n                    layout={this.questionNextButtonLayout()}\n                  >\n                    {localize('[next]')}\n                  </Button>\n                  {isSurvey && <SurveyHint>{localize('[survey question hint]')}</SurveyHint>}\n                </React.Fragment>\n              )\n            )}\n          </React.Fragment>\n        )}\n        {!isLastPage &&\n          !isCourseSubmitted &&\n          isInformationContent &&\n          !isCourseOnOnePage &&\n          this.renderNavButtonsBlock()}\n        {isCourseSubmitted && this.renderNavButtonsBlock()}\n        {this.renderSubmitAtOnceButtonWrapper()}\n      </ActionButtonsContainer>\n    );\n  }\n\n  questionNextButtonLayout() {\n    const {\n      question: { isAnswered },\n      isEveryAffectedQuestionsAnswered\n    } = this.props;\n    if (isEveryAffectedQuestionsAnswered) {\n      return BUTTON.LAYOUT.SECONDARY;\n    }\n    if (isAnswered) {\n      return BUTTON.LAYOUT.PRIMARY;\n    }\n    return BUTTON.LAYOUT.SECONDARY;\n  }\n\n  canTryAgainQuestion() {\n    const { question, isCourseSubmitted } = this.props;\n\n    return (\n      question.type !== INFORMATION_CONTENT &&\n      isCourseSubmitted &&\n      question.isAnswered &&\n      !question.isAnsweredCorrectly &&\n      !question.isSurvey\n    );\n  }\n\n  renderSubmitAtOnceButtonWrapper() {\n    const {\n      showSubmitButton,\n      courseQuestionIndex,\n      isEveryAffectedQuestionsAnswered,\n      isCourseOnOnePage,\n      overallNumberOfQuestions\n    } = this.props;\n    const isLastQuestion = courseQuestionIndex + 1 === overallNumberOfQuestions;\n    const isActive =\n      isLastQuestion ||\n      (isCourseOnOnePage\n        ? isEveryAffectedQuestionsAnswered && isLastQuestion\n        : isEveryAffectedQuestionsAnswered);\n\n    return (\n      isActive &&\n      showSubmitButton && (\n        <SubmitOnceButtonWrapper\n          className=\"submit-button-wrapper\"\n          data-test=\"submit-button-wrapper\"\n        >\n          <SubmitOnceButton\n            onClick={this.submitAllAnswers}\n            isActive={isActive && showSubmitButton}\n            tabIndex={0}\n          />\n        </SubmitOnceButtonWrapper>\n      )\n    );\n  }\n\n  nextButtonLayout() {\n    const { isCourseSubmitted, isEveryAffectedQuestionsAnswered } = this.props;\n    return isCourseSubmitted || isEveryAffectedQuestionsAnswered\n      ? BUTTON.LAYOUT.SECONDARY\n      : BUTTON.LAYOUT.PRIMARY;\n  }\n\n  renderNavButtonsBlock() {\n    const {\n      questionIndex,\n      questionCountInSection,\n      goToNextPage,\n      isQuestionPool,\n      questionPoolSize,\n      isCourseOnOnePage\n    } = this.props;\n    const isLastPageInSection =\n      questionIndex + 1 === (isQuestionPool ? questionPoolSize : questionCountInSection);\n    const canGoNext = this.canGoToNextQuestion();\n    return (\n      !isCourseOnOnePage &&\n      canGoNext && (\n        <NavButtonsBlock tabIndex={-1}>\n          <Button\n            data-test=\"button-next\"\n            layout={this.nextButtonLayout()}\n            onClick={goToNextPage}\n            tabIndex={0}\n            suffixIcon=\"arrow-down\"\n          >\n            {this.getNextNavigationText(isLastPageInSection)}\n          </Button>\n        </NavButtonsBlock>\n      )\n    );\n  }\n\n  next = () => {\n    const { question, goToNextPage, courseQuestionIndex, overallNumberOfQuestions } = this.props;\n\n    const isLastPage = courseQuestionIndex + 1 === overallNumberOfQuestions;\n\n    if (isLastPage) {\n      this.props.actions && this.props.actions.submitAllAtOnce();\n      goToNextPage();\n    } else {\n      this.props.actions && this.props.actions.answerBeforeSubmit(question.id);\n      this.setState({\n        canGoNext: true\n      });\n      goToNextPage();\n    }\n  };\n\n  submitAllAnswers = () => {\n    const { isTimerEnabled, actions, timerActions, navigateToUrl } = this.props;\n    if (timerActions && isTimerEnabled) {\n      timerActions.setTimerStatus(TimerStatus.STOPPED);\n      timerActions.updateTimerProgress();\n    }\n    if (actions !== undefined) {\n      actions.submitAllAtOnce();\n    }\n    navigateToUrl(RESULTS_PATH);\n  };\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: ActionsBlockSubmitOnceProps) {\n  const questionId = ownProps.question.id;\n  return {\n    isAnswered: isQuestionAnswered(state, questionId),\n    isAnsweredCorrectly: isQuestionAnsweredCorrectly(state, questionId),\n    feedbackAnimated: isFeedbackAnimating(state, questionId),\n    isCourseSubmitted: isAttemptSubmitted(state),\n    showSubmitButton: !isAttemptSubmitted(state),\n    isEveryAffectedQuestionsAnswered: isAllAffectedQuestionsAnswered(state),\n    questionPoolSize: getQuestionPoolSize(state),\n    isQuestionPool: isQuestionPoolEnabled(state),\n    isTimerEnabled: getTimerEnabled(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(questionActions, dispatch),\n    timerActions: bindActionCreators(courseTimerActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActionsBlockSubmitOnce);\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { INFORMATION_CONTENT } from 'constants/questionTypes';\nimport {\n  getSection,\n  getQuestionIndex,\n  getCourseQuestionIndex,\n  getQuestionCount,\n  getCourseQuestionCount,\n  sectionExists\n} from 'store/sections/selectors';\n\nimport {\n  getBackground,\n  getLogo,\n  isMainLogoShown,\n  isAllQuestionsOnOnePage,\n  isShowLearningHintsEnabled,\n  isQuestionPoolEnabled,\n  getQuestionPoolSize\n} from 'store/settings/selectors';\nimport withFallbackToNotFound from 'components/hocs/withFallbackToNotFound';\nimport withNavigation from 'components/hocs/withNavigation';\nimport Question from 'components/questions/Question';\nimport * as questionActions from 'store/questions/actions';\nimport {\n  getQuestion,\n  isQuestionAnswered,\n  isQuestionAnsweredCorrectly,\n  questionExists,\n  getQuestionResponse,\n  getPoolQuestionIndex\n} from 'store/questions/selectors';\nimport Feedback from 'components/question/Feedback';\nimport { getCourseTitle, isAttemptSubmitted } from 'store/course/selectors';\nimport { RootAppState } from 'store/types';\nimport { QuestionPage, QuestionPageProps } from './QuestionPage';\nimport ActionsBlockSubmitOnce from './actionsBlock/ActionsBlockSubmitOnce';\n\ninterface QuestionPagePropsSubmitOnce extends QuestionPageProps {\n  courseQuestionIndex: number;\n  overallNumberOfQuestions: number;\n  isCourseSubmitted?: boolean;\n  navigateToUrl(url: string): void;\n}\n\nexport class QuestionPageSubmitOnce extends QuestionPage<QuestionPagePropsSubmitOnce> {\n  constructor(props: QuestionPagePropsSubmitOnce) {\n    super(props);\n    this.state = {\n      showTooltip: false,\n      feedbackContentList: []\n    };\n  }\n\n  render() {\n    const {\n      question,\n      questionIndex,\n      courseQuestionIndex,\n      questionCountInSection,\n      overallNumberOfQuestions,\n      bodyBackground,\n      isCourseSubmitted,\n      navigateToUrl,\n      isCourseOnOnePage,\n      isLastBlock\n    } = this.props;\n\n    return (\n      <Fragment>\n        {this.renderQuestionHeader()}\n        <Question\n          id={question.id}\n          type={question.type}\n          allowSubmit={true}\n          isAnswered={isCourseSubmitted && question.isAnswered}\n          bodyBackground={bodyBackground}\n        />\n        {this.renderInformationContentOrHints()}\n        {this.renderFeedback()}\n        <ActionsBlockSubmitOnce\n          navigateToUrl={navigateToUrl}\n          question={question}\n          goToNextPage={this.navigateToNextPage}\n          isNextPageResults={isCourseOnOnePage ? isLastBlock : this.props.isNextPageResults()}\n          questionCountInSection={questionCountInSection}\n          overallNumberOfQuestions={overallNumberOfQuestions}\n          questionIndex={questionIndex}\n          courseQuestionIndex={courseQuestionIndex}\n          isCourseOnOnePage={isCourseOnOnePage}\n        />\n\n        {this.renderVoiceOver()}\n      </Fragment>\n    );\n  }\n\n  canGoToNextQuestion() {\n    const { question, isCourseSubmitted } = this.props;\n    if (question.type === INFORMATION_CONTENT) {\n      return true;\n    } else if (isCourseSubmitted) {\n      return question.isAnswered;\n    } else {\n      return false;\n    }\n  }\n\n  renderFeedback() {\n    const { question, isCourseSubmitted } = this.props;\n    if (question.type === INFORMATION_CONTENT || !isCourseSubmitted) {\n      return <></>;\n    }\n\n    return <Feedback question={question} animate={true} delay={200} />;\n  }\n}\n\nfunction mapStateToProps(state: RootAppState, ownProps: any) {\n  const isOnePage = isAllQuestionsOnOnePage(state);\n  const { sectionId, questionId } = (() => {\n    if (isOnePage) {\n      return ownProps;\n    }\n    return ownProps.match.params;\n  })();\n  return {\n    logoUrl: getLogo(state),\n    logoShown: isMainLogoShown(state),\n    section: getSection(state, sectionId),\n    courseQuestionIndex: getCourseQuestionIndex(state, questionId),\n    questionIndex: getQuestionIndex(state, sectionId, questionId),\n    questionCountInSection: getQuestionCount(state, sectionId),\n    overallNumberOfQuestions: getCourseQuestionCount(state),\n    question: getQuestion(state, questionId),\n    isAnswered: isQuestionAnswered(state, questionId),\n    isAnsweredCorrectly: isQuestionAnsweredCorrectly(state, questionId),\n    bodyBackground: getBackground(state).body,\n    title: getCourseTitle(state),\n    sectionExists: sectionExists(state, sectionId),\n    questionExists: questionExists(state, questionId),\n    isCourseSubmitted: isAttemptSubmitted(state),\n    questionResponse: getQuestionResponse(state, questionId),\n    isCourseOnOnePage: isAllQuestionsOnOnePage(state),\n    showLearningHints: isShowLearningHintsEnabled(state),\n    isQuestionPool: isQuestionPoolEnabled(state),\n    questionPoolSize: getQuestionPoolSize(state),\n    poolQuestionIndex: getPoolQuestionIndex(state, questionId)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return { actions: bindActionCreators(questionActions, dispatch) };\n}\n\nfunction predicateForRedirect(props: any) {\n  return !props.sectionExists || !props.questionExists;\n}\n\nexport default withNavigation(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(withFallbackToNotFound(QuestionPageSubmitOnce, predicateForRedirect))\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { RootAppState } from '../../../../store/types';\nimport { shouldSubmitAllQuestions } from '../../../../store/settings/selectors';\nimport QuestionPage from '../../question/QuestionPage';\nimport QuestionPageSubmitOnce from '../../question/QuestionPageSubmitOnce';\n\ntype SinglePageCourseProps = {\n  isSubmitAtOnce: boolean;\n};\n\nexport class DefaultLayout extends Component<SinglePageCourseProps, {}> {\n  render() {\n    const { isSubmitAtOnce } = this.props;\n    if (isSubmitAtOnce) {\n      return <QuestionPageSubmitOnce {...this.props} />;\n    }\n    return <QuestionPage {...this.props} />;\n  }\n}\n\nfunction mapDispatchToProps() {\n  return {};\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    isSubmitAtOnce: shouldSubmitAllQuestions(state)\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(DefaultLayout);\n","import styled, { css } from 'styled-components';\nimport media from 'components/mixins/media';\nimport { transparentize } from 'utils/color';\nimport { getCustomScrollbars } from 'components/mixins/customScrollbars';\nimport { secondaryFont } from 'components/mixins/typography';\nimport { TOC } from 'constants/components';\nimport { MEDIA_SMALL } from 'constants/screenResolutions';\n\nexport const BLOCK_MARGIN_OFFSET = 80;\n\ntype CourseLogoProps = {\n  altText: string;\n  logoUrl: string;\n};\n\nexport const CourseLogo = styled.img.attrs((props: CourseLogoProps) => ({\n  alt: props.altText,\n  src: props.logoUrl\n}))<CourseLogoProps>`\n  padding-top: 90px;\n  max-width: 200px;\n  margin-bottom: 0;\n`;\n\ntype StickyContainerProps = {\n  background: any;\n};\n\ntype QuestionBlockProps = {\n  isFirstElement: boolean;\n};\n\ntype ProgressProps = {\n  progress: number;\n};\n\ntype StickyHeadProps = {\n  isExpanded: boolean;\n};\n\nexport const StickyContainer = styled.div.attrs({\n  'data-test': 'sticky-container'\n})<StickyContainerProps>`\n  ${props =>\n    !props.background &&\n    css`\n      background: white;\n    `};\n  overflow-x: hidden;\n  width: 100%;\n  height: 100%;\n  overflow-y: scroll !important;\n  position: relative;\n  ${getCustomScrollbars()};\n`;\n\nexport const StickyHead = styled.div.attrs({\n  'data-test': 'sticky-header'\n})<StickyHeadProps>`\n  background: white;\n  z-index: 11;\n  transition: left 1s linear;\n  position: fixed;\n  width: ${props => (props.isExpanded ? `calc(100% - ${TOC.EXPANDED_WIDTH}px)` : '100%')};\n\n  @media (max-width: ${MEDIA_SMALL}px) {\n    left: 0;\n    top: 0;\n    padding: 0 30px;\n\n    > div:first-of-type {\n      padding: 0 0 0 15px;\n    }\n  }\n`;\n\nexport const StickyBody = styled.div.attrs(() => ({\n  'data-test': 'sticky-body'\n}))`\n  width: 100%;\n  font-size: 15px;\n  margin: 0 auto;\n  padding: 0 10%;\n  ${media.small`\n    padding: 0;\n  `};\n`;\n\nexport const SectionTitle = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding: 0 10%;\n  ${media.small`\n    padding: 0;\n  `};\n`;\n\nexport const SectionNumber = styled.div.attrs(() => ({\n  'data-test': 'section-number'\n}))`\n  font-weight: bold;\n  font-size: 12px;\n  font-family: Qanelas-Soft, PT Serif, Serif;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.5)};\n  line-height: 1em;\n  padding: 15px 0 7px;\n`;\n\nexport const SectionName = styled.div.attrs(() => ({\n  'data-test': 'section-name'\n}))`\n  font-weight: bold;\n  font-size: 18px;\n  font-family: Qanelas-Soft, PT Serif, Serif;\n  color: ${props => transparentize(props.theme.colors.textColor, 1)};\n  line-height: 1.56em;\n  padding: 0 0 12px;\n`;\n\nexport const ProgressContainer = styled.div.attrs({\n  'data-test': 'progress-bar-container'\n})`\n  width: 100%;\n  background: ${props => transparentize(props.theme.colors.textColor, 0.08)};\n`;\n\nexport const Progress = styled.div.attrs({\n  'data-test': 'progress-bar'\n})<ProgressProps>`\n  height: 2px;\n  background: ${props => transparentize(props.theme.colors.mainColor, 1)};\n  width: ${props => (props.progress ? props.progress : 0)}%;\n`;\n\nexport const LearningObjectiveBlock = styled.div`\n  width: 100%;\n  font-size: 15px;\n  margin: 20px 0 31px 0;\n`;\n\nexport const QuestionBlock = styled.div<QuestionBlockProps>`\n  width: 100%;\n  font-size: 15px;\n  padding-top: ${props => (props.isFirstElement ? `90px` : `0px`)};\n  margin: 20px 0 ${BLOCK_MARGIN_OFFSET}px 0;\n`;\n\nexport const SectionSeparator = styled.div.attrs({\n  'data-test': 'section-separator'\n})`\n  margin: 80px 0 32px;\n`;\n\nexport const SectionCounter = styled.div`\n  ${secondaryFont};\n  color: ${props => transparentize(props.theme.colors.textColor, 0.5)};\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.4;\n\n  ${media.mobile`\n    font-size: 12px;\n  `}\n`;\n\nexport const SectionHeader = styled.div`\n  ${secondaryFont};\n  color: ${props => transparentize(props.theme.colors.textColor, 0.5)};\n  font-size: 32px;\n  margin: 15px 0 0;\n  font-weight: 900;\n  line-height: 44.8px;\n  ${media.medium`\n    padding-right: 22px;\n  `}\n`;\n","import React, { useEffect, useState, useCallback, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { RootAppState } from 'store/types';\nimport withNavigation from 'components/hocs/withNavigation';\nimport { getTreeOfContentVisibility } from 'store/treeOfContent/selectors';\nimport {\n  getSections,\n  getNonInfoContentQuestions,\n  getAffectProgressQuestionsCountInSection,\n  getAnsweredAffectProgressQuestionsCountInSection,\n  getSectionIndex,\n  getSection,\n  isLearningObjective\n} from 'store/sections/selectors';\nimport { localize } from 'core/localization';\nimport * as settingSelectors from 'store/settings/selectors';\nimport * as questionActions from 'store/questions/actions';\nimport * as courseTimerActions from 'store/timer/actions';\nimport { getTimerElapsed, getTimerStatus } from 'store/timer/selectors';\nimport { TimerStatus } from 'constants/timer';\nimport { Separator } from 'components/common';\nimport { getQuestionUrl, getLearningObjectiveUrl } from 'utils/navigation';\nimport { getCourseTitle } from 'store/course/selectors';\nimport { getElementIDInViewPort } from 'store/navigation/selectors';\nimport { getSectionId, getPoolQuestions } from 'store/questions/selectors';\nimport debounce from 'lodash.debounce';\nimport { DEBOUNCE_SCROLL_WAIT_TIME_MS, SKIP_TO_CONTENT_IDS } from 'constants/common';\nimport {\n  isLearningObjectiveView,\n  isQuestionView\n} from 'components/shell/RouteTransition/viewChecker';\nimport { getCurrentLocationHash } from 'utils/window';\nimport QuestionPage from '../../question/QuestionPage';\nimport QuestionPageSubmitOnce from '../../question/QuestionPageSubmitOnce';\nimport LearningObjective from '../../learningObjective/LearningObjective';\n\nimport {\n  StickyContainer,\n  StickyHead,\n  SectionTitle,\n  SectionNumber,\n  SectionName,\n  StickyBody,\n  LearningObjectiveBlock,\n  QuestionBlock,\n  CourseLogo,\n  ProgressContainer,\n  Progress,\n  SectionCounter,\n  SectionHeader,\n  SectionSeparator,\n  BLOCK_MARGIN_OFFSET\n} from './OnePageCourse.styled';\n\ntype OnePageCourseProps = {\n  sectionId: any;\n  questionId: any;\n  sections: any[];\n  isCourseOnOnePage: boolean;\n  isOverallMasteryScore: boolean;\n  shouldSubmitAllQuestions: boolean;\n  getSectionById(id: string): string;\n  scrollToId(id: string, offset?: number): void;\n  elementIdInViewport: string;\n  score: number;\n  navigateToUrl(url: string, isReplace: boolean): void;\n  logoShown: boolean;\n  logoUrl: string;\n  affectProgressQuestionsCountInSection(sectionId: string): number;\n  answeredAffectProgressQuestionsCountInSection(sectionId: string): number;\n  match: { [key: string]: any };\n  history: { [key: string]: any };\n  location: { [key: string]: any };\n  sectionIndex(sectionId: string): number;\n  section(sectionId: string): { [key: string]: any };\n  isExpanded: boolean;\n  actions: { [key: string]: any };\n  title: string;\n  isLearningObjective(sectionId: string): boolean;\n  timerActions: { [key: string]: any };\n  isTimerEnabled: boolean;\n  timerStatus: TimerStatus;\n  timeElapsed: number;\n  isQuestionPool: boolean;\n  questionsForPool: any[];\n};\n\ntype LocationMap = {\n  [key: string]: string;\n};\n\nconst calculateLocationMap = (props: any) => {\n  const locationMap: { [x: string]: string } = {};\n  const populateLocationMap = (id: string) => {\n    const elementEndPosition =\n      (document.getElementById(`block-end-${id}`)?.offsetTop || 0) - BLOCK_MARGIN_OFFSET;\n    locationMap[elementEndPosition.toString()] = id;\n    return locationMap;\n  };\n\n  if (!props.isQuestionPool) {\n    props.sections.forEach((section: any) => {\n      if (section.learningObjective) {\n        populateLocationMap(section.id);\n      }\n\n      section.questions.forEach((questionId: string) => {\n        populateLocationMap(questionId);\n      });\n    });\n\n    return locationMap;\n  }\n\n  props.questionsForPool.forEach((question: any) => {\n    populateLocationMap(question.id);\n  });\n\n  return locationMap;\n};\n\nconst Header = (props: {\n  match: { [key: string]: any };\n  sectionIndex(sectionId: string): number;\n  section(sectionId: string): { [key: string]: any };\n}) => {\n  const { match, sectionIndex, section } = props;\n  const { sectionId } = match.params;\n  return (\n    <SectionTitle>\n      <SectionNumber>Section {sectionIndex(sectionId) + 1}</SectionNumber>\n      <SectionName>{section(sectionId).title}</SectionName>\n    </SectionTitle>\n  );\n};\n\nconst ProgressBar = (props: {\n  match: { [key: string]: any };\n  affectProgressQuestionsCountInSection(sectionId: string): number;\n  answeredAffectProgressQuestionsCountInSection(sectionId: string): number;\n}) => {\n  const {\n    match,\n    answeredAffectProgressQuestionsCountInSection,\n    affectProgressQuestionsCountInSection\n  } = props;\n  const { sectionId } = match.params;\n  const answeredQuestionsCount = answeredAffectProgressQuestionsCountInSection(sectionId);\n  const allQuestionsCount = affectProgressQuestionsCountInSection(sectionId);\n  const progress = (answeredQuestionsCount / allQuestionsCount) * 100;\n  return (\n    <ProgressContainer>\n      <Progress progress={progress} />\n    </ProgressContainer>\n  );\n};\n\nconst SectionBreaker = (props: { sections: any[]; section: any; index: number }) => (\n  <SectionSeparator>\n    <SectionCounter>\n      {localize('[section x of y]', { index: props.index + 1, total: props.sections.length })}\n    </SectionCounter>\n    <SectionHeader>{props.section.title}</SectionHeader>\n    <Separator margin={48} opacity={0.1} color=\"textColor\" />\n  </SectionSeparator>\n);\n\nconst renderLearningObjective = (section: any, isQuestionPool: boolean) =>\n  section.learningObjective &&\n  !isQuestionPool && (\n    <LearningObjectiveBlock key={section.id} id={section.id}>\n      <LearningObjective className=\"LearningObjective\" sectionId={section.id} />\n      <div id={`block-end-${section.id}`} />\n    </LearningObjectiveBlock>\n  );\n\nconst getFirstElementId = (sections: any) => {\n  const [firstSection] = sections;\n  if (firstSection.learningObjective) {\n    return firstSection.id;\n  }\n  return firstSection.questions[0];\n};\n\nconst getLearningObjectiveTitlePosition = (id: string) => {\n  const learningObjectiveDiv = document.getElementById(id);\n  if (!learningObjectiveDiv) {\n    return 0;\n  }\n  const learningObjectiveTitle = learningObjectiveDiv.querySelectorAll('div')[0];\n  return learningObjectiveTitle\n    ? learningObjectiveTitle.offsetTop + learningObjectiveTitle.scrollHeight / 2\n    : 0;\n};\n\nconst getQuestionIndex = (\n  questionId: string,\n  sectionIndex: number,\n  props: { sections: any[]; questionsForPool: any[]; isQuestionPool: boolean }\n) => {\n  if (props.isQuestionPool) {\n    return props.questionsForPool.map(question => question.id).indexOf(questionId);\n  }\n  return props.sections[sectionIndex].nonInfoContentQuestions.indexOf(questionId);\n};\n\nconst getQuestionCount = (\n  sectionIndex: number,\n  props: { sections: any[]; questionsForPool: any[]; isQuestionPool: boolean }\n) => {\n  if (props.isQuestionPool) {\n    return props.questionsForPool.length;\n  }\n  return props.sections[sectionIndex].nonInfoContentQuestions.length;\n};\n\nconst questionProps = (\n  questionId: string,\n  sectionId: string,\n  index: number,\n  shouldRecalculateScrollLocation: any,\n  props: any\n) => {\n  const onePageIndex: any[] = [];\n  const { isQuestionPool, questionsForPool, sections } = props;\n  let theLastID: string;\n  if (isQuestionPool && questionsForPool.length) {\n    theLastID = questionsForPool[questionsForPool.length - 1].id;\n  } else {\n    sections.forEach((section: any) => {\n      if (section.learningObjective) {\n        onePageIndex.push(section.id);\n      }\n      section.questions.forEach((innerElement: any) => {\n        onePageIndex.push(innerElement);\n      });\n    });\n    theLastID = onePageIndex[onePageIndex.length - 1];\n    onePageIndex.shift();\n  }\n  return {\n    sectionId,\n    questionId,\n    currentScrollLocationId: questionId,\n    isLastBlock: questionId === theLastID,\n    onePageQuestionIndex: getQuestionIndex(questionId, index, props),\n    questionCountInOnePage: getQuestionCount(index, props),\n    shouldRecalculateScrollLocation,\n    match: props.match,\n    location: props.location,\n    history: props.history\n  };\n};\n\nconst renderQuestionBlock = (\n  props: any,\n  setShouldRecalculateScrollLocation: any,\n  questionId: string,\n  questionIndex: number,\n  section: any,\n  sectionIndex?: number\n) => {\n  const isFirstElement = props.isQuestionPool\n    ? questionIndex === 0 && !props.logoShown\n    : questionIndex === 0 &&\n      sectionIndex === 0 &&\n      !section.learningObjective &&\n      !props.logoShown &&\n      !props.isOverallMasteryScore;\n\n  return (\n    <QuestionBlock key={questionId} isFirstElement={isFirstElement} id={questionId}>\n      <div className=\"question-block\">\n        {props.shouldSubmitAllQuestions ? (\n          <QuestionPageSubmitOnce\n            {...questionProps(\n              questionId,\n              section.id,\n              sectionIndex || 0,\n              setShouldRecalculateScrollLocation,\n              props\n            )}\n          />\n        ) : (\n          <QuestionPage\n            {...questionProps(\n              questionId,\n              section.id,\n              sectionIndex || 0,\n              setShouldRecalculateScrollLocation,\n              props\n            )}\n          />\n        )}\n\n        <div id={`block-end-${questionId}`} />\n      </div>\n    </QuestionBlock>\n  );\n};\n\nexport const OnePageCourse = (props: OnePageCourseProps) => {\n  const [locationMap, setLocationMap] = useState<LocationMap>({});\n  const [shouldRecalculateScrollLocation, setShouldRecalculateScrollLocation] = useState(false);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [learningObjectiveQuestion, setLearningObjectiveQuestion] = useState(false);\n  const elementInViewportRef = useRef(\n    props.elementIdInViewport || getFirstElementId(props.sections)\n  );\n\n  const getActiveSectionID = (elementId: string) => {\n    if (props.isLearningObjective(elementId)) {\n      return elementId;\n    }\n    return props.getSectionById(elementId);\n  };\n  useEffect(() => {\n    document.title = `${localize('[course]')} | ${props.title}`;\n  });\n\n  useEffect(() => {\n    if (props.elementIdInViewport !== '') {\n      const isFirstSection =\n        props.sectionIndex(getActiveSectionID(props.elementIdInViewport)) === 0;\n      const getOffsetValue = () => (isFirstSection && props.logoShown ? 300 : 100);\n      props.scrollToId(props.elementIdInViewport, getOffsetValue());\n    }\n    const newLocationMap = calculateLocationMap(props);\n    setLocationMap(newLocationMap);\n    if (props.elementIdInViewport && props.elementIdInViewport !== elementInViewportRef.current) {\n      elementInViewportRef.current = props.elementIdInViewport;\n    }\n  }, [props.elementIdInViewport]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    const newLocationMap = calculateLocationMap(props);\n    setLocationMap(newLocationMap);\n    setShouldRecalculateScrollLocation(false);\n  }, [shouldRecalculateScrollLocation]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const navigateToUrl = useCallback(\n    debounce((url: string) => {\n      const currentPathname = getCurrentLocationHash().replace('#', '');\n      if (isQuestionView.test(currentPathname) || isLearningObjectiveView.test(currentPathname)) {\n        props.navigateToUrl(url, true);\n      }\n    }, DEBOUNCE_SCROLL_WAIT_TIME_MS),\n    []\n  ); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const getIdInViewport = (currentPosition: number) => {\n    const blockEndPositions = Object.keys(locationMap).map(position => parseFloat(position));\n    const scrollableContainer = document.getElementById('stickyContainer');\n    const lastPosition = blockEndPositions[blockEndPositions.length - 1];\n    if (scrollableContainer) {\n      const hasReachedBottom =\n        Math.floor(scrollableContainer.scrollHeight - scrollableContainer.scrollTop) ===\n        scrollableContainer.clientHeight;\n      if (hasReachedBottom && lastPosition) {\n        return locationMap[lastPosition];\n      }\n    }\n\n    const startPosition = blockEndPositions.reduce((acc, val) => {\n      if (val >= currentPosition && acc < currentPosition) {\n        return val;\n      }\n      return acc;\n    }, blockEndPositions[0]);\n\n    const pageTop = document.getElementById('stickyContainer')?.scrollTop || 0;\n    const selectedElement = document.getElementById(locationMap[startPosition]);\n    const elementTop = selectedElement?.offsetTop;\n    const isElementTopVisible = pageTop <= (elementTop || 0);\n\n    return isElementTopVisible ? locationMap[startPosition] : elementInViewportRef.current;\n  };\n\n  const stickyContainerOnScroll = () => {\n    const { isTimerEnabled, timerActions, timeElapsed, timerStatus } = props;\n    const stickyContainer: any = document.getElementById('stickyContainer');\n    const currentScrollPosition = stickyContainer.scrollTop;\n    const currentComponentId = getIdInViewport(currentScrollPosition);\n\n    setScrollPosition(currentScrollPosition);\n    setLearningObjectiveQuestion(\n      props.isLearningObjective(currentComponentId) &&\n        currentScrollPosition <= getLearningObjectiveTitlePosition(currentComponentId)\n    );\n\n    if (currentComponentId !== elementInViewportRef.current) {\n      elementInViewportRef.current = currentComponentId;\n\n      if (props.isLearningObjective(elementInViewportRef.current)) {\n        navigateToUrl(getLearningObjectiveUrl(elementInViewportRef.current));\n      } else {\n        const sectionId = (\n          props.sections.find(\n            (section: any) => section.questions.indexOf(elementInViewportRef.current) >= 0\n          ) || props.sections[0]\n        ).id;\n\n        if (elementInViewportRef.current) {\n          props.actions.markAsOpened(elementInViewportRef.current);\n          navigateToUrl(getQuestionUrl(sectionId, elementInViewportRef.current));\n          if (\n            isTimerEnabled &&\n            (timerStatus === TimerStatus.NOT_STARTED || timerStatus === TimerStatus.RESET)\n          ) {\n            timerActions.startTimer();\n            timerActions.setTimerElapsed(timeElapsed);\n          }\n        }\n      }\n    }\n  };\n\n  const { sections, isExpanded } = props;\n\n  const renderStickyBody = (section: any, index: number) => (\n    <div key={section.id}>\n      <StickyBody>\n        {props.logoShown && index === 0 && (\n          <CourseLogo logoUrl={props.logoUrl} altText={localize('[alt logo login]')} />\n        )}\n        {renderLearningObjective(section, props.isQuestionPool)}\n        {props.isOverallMasteryScore && !section.learningObjective && (\n          <SectionBreaker sections={props.sections} section={section} index={index} />\n        )}\n        {section.questions.map((innerElement: any, innerIndex: number) =>\n          renderQuestionBlock(\n            props,\n            setShouldRecalculateScrollLocation,\n            innerElement,\n            innerIndex,\n            section,\n            index\n          )\n        )}\n      </StickyBody>\n    </div>\n  );\n\n  const renderQuestionPoolStickyBody = () => (\n    <div>\n      <StickyBody>\n        {props.logoShown && (\n          <CourseLogo logoUrl={props.logoUrl} altText={localize('[alt logo login]')} />\n        )}\n        {props.questionsForPool.map((poolQuestion: any, index: number) =>\n          renderQuestionBlock(props, setShouldRecalculateScrollLocation, poolQuestion.id, index, {\n            id: poolQuestion.sectionId\n          })\n        )}\n      </StickyBody>\n    </div>\n  );\n\n  return (\n    <StickyContainer\n      id={SKIP_TO_CONTENT_IDS.ONE_PAGE_COURSE}\n      background={true}\n      onScroll={() => stickyContainerOnScroll()}\n    >\n      {!props.isOverallMasteryScore && scrollPosition !== 0 && !learningObjectiveQuestion && (\n        <StickyHead isExpanded={isExpanded}>\n          <Header match={props.match} sectionIndex={props.sectionIndex} section={props.section} />\n          <ProgressBar\n            match={props.match}\n            affectProgressQuestionsCountInSection={props.affectProgressQuestionsCountInSection}\n            answeredAffectProgressQuestionsCountInSection={\n              props.answeredAffectProgressQuestionsCountInSection\n            }\n          />\n        </StickyHead>\n      )}\n      {!props.isQuestionPool &&\n        sections.map((section: any, index: number) => renderStickyBody(section, index))}\n      {props.isQuestionPool && renderQuestionPoolStickyBody()}\n    </StickyContainer>\n  );\n};\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    logoUrl: settingSelectors.getLogo(state),\n    logoShown: settingSelectors.isMainLogoShown(state),\n    sections: getSections(state).map(section => ({\n      ...section,\n      nonInfoContentQuestions: getNonInfoContentQuestions(state, section.id)\n    })),\n    isCourseOnOnePage: settingSelectors.isAllQuestionsOnOnePage(state),\n    isOverallMasteryScore: settingSelectors.isOverallMasteryScore(state),\n    shouldSubmitAllQuestions: settingSelectors.shouldSubmitAllQuestions(state),\n    elementIdInViewport: getElementIDInViewPort(state),\n    sectionId: (questionId: string) => getSectionId(state, questionId),\n    getSectionById: (questionId: string) => getSectionId(state, questionId),\n    affectProgressQuestionsCountInSection: (sectionId: string) =>\n      getAffectProgressQuestionsCountInSection(state, sectionId),\n    answeredAffectProgressQuestionsCountInSection: (sectionId: string) =>\n      getAnsweredAffectProgressQuestionsCountInSection(state, sectionId),\n    sectionIndex: (sectionId: string) => getSectionIndex(state, sectionId),\n    section: (sectionId: string) => getSection(state, sectionId),\n    isExpanded: getTreeOfContentVisibility(state),\n    title: getCourseTitle(state),\n    isLearningObjective: (sectionId: string) => isLearningObjective(state, sectionId),\n    timerStatus: getTimerStatus(state),\n    isTimerEnabled: settingSelectors.getTimerEnabled(state),\n    timeElapsed: getTimerElapsed(state),\n    questionsForPool: getPoolQuestions(state),\n    isQuestionPool: settingSelectors.isQuestionPoolEnabled(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(questionActions, dispatch),\n    timerActions: bindActionCreators(courseTimerActions, dispatch)\n  };\n}\n\nexport default withRouter(\n  withNavigation(connect(mapStateToProps, mapDispatchToProps)(OnePageCourse))\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { RootAppState } from '../../../store/types';\nimport {\n  isAllQuestionsOnOnePage,\n  shouldSubmitAllQuestions\n} from '../../../store/settings/selectors';\nimport DefaultLayout from './defaultLayout/DefaultLayout';\nimport OnePageCourse from './singlePageLayout/OnePageCourse';\n\ntype CourseLayoutProps = {\n  isCourseOnOnePage: boolean;\n  isSubmitAtOnce: boolean;\n};\n\nexport class CourseLayout extends Component<CourseLayoutProps, {}> {\n  render() {\n    const { isCourseOnOnePage } = this.props;\n    if (isCourseOnOnePage) {\n      return <OnePageCourse {...this.props} />;\n    }\n    return <DefaultLayout {...this.props} />;\n  }\n}\n\nfunction mapDispatchToProps() {\n  return {};\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    isCourseOnOnePage: isAllQuestionsOnOnePage(state),\n    isSubmitAtOnce: shouldSubmitAllQuestions(state)\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(CourseLayout);\n","import React, { Fragment, Component } from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { getTreeOfContentVisibility } from 'store/treeOfContent/selectors';\nimport TreeOfContent from 'components/treeOfContent/TreeOfContent';\nimport { RESULTS_PATH, QUESTION_PATH, LEARNING_OBJECTIVE_PATH } from 'constants/navigation';\nimport * as actions from 'store/treeOfContent/actions';\nimport { RootAppState } from 'store/types';\nimport { getBackground, isMainLogoShown, isAllQuestionsOnOnePage } from 'store/settings/selectors';\nimport {\n  isLearningObjectiveView,\n  isQuestionView,\n  isResultsView\n} from 'components/shell/RouteTransition/viewChecker';\nimport withNavigation from 'components/hocs/withNavigation';\nimport { SKIP_TO_CONTENT_IDS } from 'constants/common';\nimport { getElementIDInViewPort } from 'store/navigation/selectors';\nimport LearningObjective from '../learningObjective/LearningObjective';\nimport ResultsPage from '../results/ResultsPage';\nimport CourseOverviewRouteTransition from './RouteTransition';\nimport NotFound from '../../../components/notFound/NotFound';\nimport CourseLayout from '../courseLayout/CourseLayout';\n\nimport {\n  Container,\n  PageContainer,\n  ContentContainer,\n  CourseOverviewSidebar,\n  Blockout\n} from './CourseOverview.styled';\nimport SkipToContent from '../../../components/common/SkipToContent';\nimport { getPopupVisibility } from '../../../store/popup/selectors';\n\ntype CourseOverviewProps = {\n  theme: { [key: string]: any };\n  isLowResolution: boolean;\n  isTreeOfContentExpanded: boolean;\n  actions: { [key: string]: any };\n  background: { [key: string]: any };\n  logoShown: boolean;\n  isCourseOnOnePage: boolean;\n  match: { [key: string]: any };\n  history: { [key: string]: any };\n  location: { [key: string]: any };\n  elementIdInViewport: string;\n  popupExpanded: boolean;\n};\nexport class CourseOverview extends Component<CourseOverviewProps, {}> {\n  getElement = (elementId: string) => document.getElementById(elementId);\n\n  getElementHeader = (elementId: string) => {\n    const element: HTMLElement | null = this.getElement(elementId);\n    if (element) {\n      return element.querySelectorAll('h1')[0];\n    }\n    return null;\n  };\n\n  focusContentId = () => {\n    const { isCourseOnOnePage = false, location, elementIdInViewport } = this.props;\n    if (isQuestionView.test(location.pathname)) {\n      if (isCourseOnOnePage) {\n        return this.getElementHeader(elementIdInViewport)?.focus();\n      }\n      return this.getElement(SKIP_TO_CONTENT_IDS.QUESTION_PAGE)?.focus();\n    }\n\n    if (isLearningObjectiveView.test(location.pathname)) {\n      if (isCourseOnOnePage) {\n        return this.getElementHeader(elementIdInViewport)?.focus();\n      }\n      return this.getElement(SKIP_TO_CONTENT_IDS.LEARNING_OBJECTIVE_PAGE)?.focus();\n    }\n\n    if (isResultsView.test(location.pathname)) {\n      return this.getElement(SKIP_TO_CONTENT_IDS.RESULT_PAGE)?.focus();\n    }\n\n    return this.getElement(SKIP_TO_CONTENT_IDS.QUESTION_PAGE)?.focus();\n  };\n\n  render() {\n    const {\n      isTreeOfContentExpanded,\n      background,\n      logoShown,\n      isCourseOnOnePage = false,\n      popupExpanded\n    } = this.props;\n    return (\n      <Fragment>\n        {!popupExpanded && <SkipToContent onClick={() => this.focusContentId()} />}\n        <CourseOverviewSidebar\n          background={background}\n          isTreeOfContentExpanded={isTreeOfContentExpanded}\n        >\n          <TreeOfContent />\n        </CourseOverviewSidebar>\n        <Blockout\n          isTreeOfContentExpanded={isTreeOfContentExpanded}\n          onClick={this.props.actions.toggleTreeOfContentVisibility}\n          ariaHidden={true}\n        />\n\n        <Route\n          render={({ location }) => (\n            <CourseOverviewRouteTransition\n              background={background}\n              isTreeOfContentExpanded={isTreeOfContentExpanded}\n              location={location}\n              isCourseOnOnePage={isCourseOnOnePage}\n            >\n              <Container>\n                <PageContainer>\n                  <ContentContainer\n                    isTreeOfContentExpanded={isTreeOfContentExpanded}\n                    logoShown={logoShown}\n                    isCourseOnOnePage={isCourseOnOnePage}\n                    dynamicHeight={document.documentElement.clientHeight}\n                    isOnOnePageView={\n                      isCourseOnOnePage &&\n                      (isQuestionView.test(location.pathname) ||\n                        isLearningObjectiveView.test(location.pathname))\n                    }\n                  >\n                    <Switch location={location}>\n                      <Route\n                        exact\n                        path={LEARNING_OBJECTIVE_PATH}\n                        component={isCourseOnOnePage ? CourseLayout : LearningObjective}\n                      />\n                      <Route exact path={QUESTION_PATH} component={CourseLayout} />\n\n                      <Route exact path={RESULTS_PATH} component={ResultsPage} />\n                      <Route exact path=\"*\" component={NotFound} />\n                    </Switch>\n                  </ContentContainer>\n                </PageContainer>\n              </Container>\n            </CourseOverviewRouteTransition>\n          )}\n        />\n      </Fragment>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return { actions: bindActionCreators(actions, dispatch) };\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    isLowResolution: state.app.isLowResolution,\n    isTreeOfContentExpanded: getTreeOfContentVisibility(state),\n    background: getBackground(state),\n    logoShown: isMainLogoShown(state),\n    isCourseOnOnePage: isAllQuestionsOnOnePage(state),\n    elementIdInViewport: getElementIDInViewPort(state),\n    popupExpanded: getPopupVisibility(state)\n  };\n}\nexport default withRouter(\n  withNavigation(connect(mapStateToProps, mapDispatchToProps)(CourseOverview))\n);\n","import styled from 'styled-components';\n\ntype FormProps = {\n  idElement: string;\n}\nexport const Form = styled.form.attrs((props: FormProps) => ({\n  id: props.idElement\n}))<FormProps>`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  justify-content: space-between;\n  position: relative;\n`;\n\nexport const FormContentWrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  justify-content: space-between;\n  position: relative;\n`;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getEmail, getName } from 'store/user/selectors';\nimport { Form } from './AuthForm.styled';\nimport { RootAppState } from 'store/types';\n\ntype AuthFormProps = {\n  renderContent: any;\n  onSubmit(e: any, data: any): Promise<void>;\n  formId: string;\n  userEmail: string;\n  userName: string;\n  shortTermAccess?: boolean;\n  agreementAccepted?: boolean;\n  isEmailPasswordCombinationNotExists?: boolean;\n  isUserExist?: boolean;\n  resetPasswordSendMessage?: boolean;\n  checkIsUserExist?(email: string): void;\n  hideMessage?(): void;\n  isUnknownError?: boolean;\n  setFieldRefs?(fieldRefs: any): void;\n};\ntype AuthFormState = {\n  [key: string]: any;\n  email: string;\n  name: string;\n  password: string;\n  agreement: string;\n  validationStatusBeforeSubmit: any;\n  fieldRefs: { [key: string]: any };\n};\n\nexport class AuthForm extends Component<AuthFormProps, AuthFormState> {\n  fieldRefs: { [key: string]: any };\n  constructor(props: AuthFormProps) {\n    super(props);\n\n    this.state = {\n      email: '',\n      name: '',\n      password: '',\n      agreement: '',\n      validationStatusBeforeSubmit: {\n        name: true,\n        email: true,\n        password: true,\n        agreement: true\n      },\n      fieldRefs: {},\n      shortTermAccess: true,\n      agreementAccepted: false\n    };\n    this.fieldRefs = {};\n  }\n\n  componentDidMount() {\n    const { userEmail, userName } = this.props;\n\n    if (userEmail || userName) {\n      this.setState({\n        email: userEmail || '',\n        name: userName || ''\n      });\n    }\n\n    this.setState({\n      fieldRefs: this.fieldRefs\n    });\n  }\n\n  onChange = (event: any) => {\n    event.target.classList.add('changed');\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  beforeSubmitValidation = (event: any, onSubmit: any) => {\n    event.preventDefault();\n    const { hideMessage, isUserExist } = this.props;\n    let validationStatusBeforeSubmit: { [key: string]: boolean } = {};\n    for (const ref in this.fieldRefs) {\n      validationStatusBeforeSubmit = {\n        ...validationStatusBeforeSubmit,\n        [ref]: this.returnValidationStatusElem(this.fieldRefs[ref])\n      };\n    }\n\n    this.setState({\n      validationStatusBeforeSubmit\n    });\n\n    for (const ref in validationStatusBeforeSubmit) {\n      if (!validationStatusBeforeSubmit[ref]) {\n        return;\n      }\n    }\n\n    if (typeof hideMessage === 'function') {\n      hideMessage();\n    }\n\n    if (!isUserExist) {\n      onSubmit(event, {\n        ...this.state,\n        email: this.state.email.toLowerCase(),\n        shortTermAccess: this.props.shortTermAccess\n      });\n    }\n  };\n\n  returnValidationStatusElem = (elem: any) => {\n    return elem ? elem.validity.valid : false;\n  };\n\n  setValidationStatusElem = (elem: any) => {\n    const elemValid = elem ? elem.validity.valid : false;\n    this.setState({ validationStatusBeforeSubmit: { [elem.name]: elemValid } });\n  };\n\n  setRefs = (element: any) => {\n    if (element) {\n      this.fieldRefs[element.name] = element;\n    }\n    if (this.props.setFieldRefs) {\n      this.props.setFieldRefs(this.fieldRefs);\n    }\n  };\n\n  render() {\n    const { fieldRefs } = this.state;\n    const {\n      formId,\n      onSubmit,\n      resetPasswordSendMessage,\n      shortTermAccess,\n      renderContent,\n      isEmailPasswordCombinationNotExists,\n      isUserExist,\n      isUnknownError,\n      agreementAccepted\n    } = this.props;\n    const props = {\n      refEmail: fieldRefs.email,\n      onChange: this.onChange,\n      setRefs: this.setRefs,\n      setValidationStatusElem: this.setValidationStatusElem,\n      validationStatusBeforeSubmit: this.state.validationStatusBeforeSubmit,\n      email: this.state.email,\n      isEmailPasswordCombinationNotExists,\n      resetPasswordSendMessage,\n      shortTermAccess,\n      isUserExist,\n      isUnknownError,\n      agreementAccepted\n    };\n    return (\n      <Form\n        idElement={formId}\n        onSubmit={event => {\n          this.beforeSubmitValidation(event, onSubmit);\n        }}\n        noValidate\n      >\n        {renderContent(props)}\n      </Form>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    userEmail: getEmail(state),\n    userName: getName(state)\n  };\n}\n\nexport default connect(mapStateToProps)(AuthForm);\n","import * as React from 'react';\nimport { localize } from 'core/localization';\nimport { INPUT_TYPE } from 'constants/components';\nimport Input from '../Input';\n\ntype EmailInputProps = {\n  userEmail: string;\n  email?: string;\n  textError: string;\n  isUserExist?: boolean;\n  validationStatusBeforeSubmit: boolean;\n  checkIsUserExist?(email: string): void;\n  onChange(e: any): void;\n  setRefs(n: any): void;\n  onFocus(e: any): void;\n  pattern?: any;\n};\n\nexport class EmailInput extends React.Component<EmailInputProps, {}> {\n  static defaultProps = {\n    onFocus: () => null\n  };\n\n  render() {\n    const {\n      userEmail,\n      email,\n      isUserExist,\n      checkIsUserExist,\n      onChange,\n      setRefs,\n      textError,\n      validationStatusBeforeSubmit,\n      onFocus,\n      pattern\n    } = this.props;\n    return (\n      <Input\n        idInput=\"email\"\n        type={INPUT_TYPE.EMAIL}\n        refInput={(node: any) => setRefs(node)}\n        name=\"email\"\n        labelText={localize('[email]')}\n        defaultValue={userEmail}\n        placeholder=\"john@example.com\"\n        autoComplete=\"new-email\"\n        onChange={(e: any) => onChange(e)}\n        validIcon={true}\n        validationStatusBeforeSubmit={validationStatusBeforeSubmit}\n        textError={textError}\n        onBlur={checkIsUserExist ? () => checkIsUserExist(email || '') : () => null}\n        isUserExist={isUserExist}\n        onFocus={(e: any) => onFocus(e)}\n        pattern={pattern}\n      />\n    );\n  }\n}\n\nexport default EmailInput;\n","import * as React from 'react';\nimport { localize } from 'core/localization';\nimport { INPUT_TYPE } from 'constants/components';\nimport Input from '../Input';\n\ntype NameInputProps = {\n  userName: string;\n  validationStatusBeforeSubmit: boolean;\n  onChange(): void;\n  setRefs(node: any): void;\n  onFocus?(e: any): void;\n};\n\nexport class NameInput extends React.Component<NameInputProps, {}> {\n  render() {\n    const { userName, onChange, setRefs, validationStatusBeforeSubmit, onFocus } = this.props;\n\n    return (\n      <Input\n        idInput=\"name\"\n        type={INPUT_TYPE.TEXT}\n        refInput={(node: any) => setRefs(node)}\n        name=\"name\"\n        labelText={localize('[name]')}\n        defaultValue={userName}\n        placeholder=\"John Doe\"\n        onChange={onChange}\n        validIcon={true}\n        pattern=\"(([a-zA-Z]|[\\xC0-\\uFFFF]|\\d|-)+\\s?)+\"\n        validationStatusBeforeSubmit={validationStatusBeforeSubmit}\n        onFocus={onFocus}\n      />\n    );\n  }\n}\n\nexport default NameInput;\n","import * as React from 'react';\nimport { localize } from 'core/localization';\nimport { INPUT_TYPE } from 'constants/components';\nimport Input from '../Input';\n\ntype PasswordInputProps = {\n  validationStatusBeforeSubmit: boolean;\n  pattern: string;\n  showValidationMessage: boolean;\n  onChange(e: any): void;\n  setRefs(node: any): void;\n  onFocus?(e: any): void;\n};\n\nexport class PasswordInput extends React.Component<PasswordInputProps, {}> {\n  render() {\n    const {\n      onChange,\n      setRefs,\n      validationStatusBeforeSubmit,\n      pattern,\n      showValidationMessage,\n      onFocus\n    } = this.props;\n\n    return (\n      <Input\n        idInput=\"password\"\n        type={INPUT_TYPE.PASSWORD}\n        refInput={(node: any) => setRefs(node)}\n        name=\"password\"\n        placeholder={localize('[password]')}\n        labelText={localize('[password]')}\n        autoComplete=\"new-password\"\n        onChange={onChange}\n        showValidationMessage={showValidationMessage}\n        pattern={pattern}\n        validationStatusBeforeSubmit={validationStatusBeforeSubmit}\n        onFocus={onFocus}\n      />\n    );\n  }\n}\n\nexport default PasswordInput;\n","import styled, { css } from 'styled-components';\nimport { shake } from 'components/mixins/interactivity';\nimport { transparentize } from 'utils/color';\nimport { Button } from 'components/common';\nimport media from 'components/mixins/media';\nimport buttonDefaultStyle from 'components/mixins/normalize';\nimport {\n  ButtonElement,\n  CheckIcon,\n  ButtonWrapper\n} from 'components/common/SwitchButton/SwitchButton.styled';\n\ntype InputContainerProps = {\n  size: number;\n}\nexport const InputContainer = styled.div<InputContainerProps>`\n  margin-bottom: ${props => props.size}px;\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n\nexport const ButtonSubmitSingUp = styled(Button)`\n  ${buttonDefaultStyle};\n  background-color: ${props => props.theme.colors.mainColor};\n  color: ${props => props.theme.colors.buttonTextColor};\n  margin-top: 24px;\n  min-width: 198px;\n  max-width: 320px;\n  text-overflow: ellipsis;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  ${media.mobile`\n    min-width: 160px;\n    max-width: 260px;\n  `};\n  & span {\n    font-size: 14px;\n  }\n  & .icon {\n    font-size: 8px;\n  }\n  &:hover {\n    background-color: ${props => transparentize(props.theme.colors.mainColor, 0.9)};\n  }\n  &:focus {\n    background-color: ${props => transparentize(props.theme.colors.mainColor, 0.9)};\n    outline: 1px solid black;\n  }\n  &:focus:not(:focus-visible) {\n    background-color: ${props => transparentize(props.theme.colors.mainColor, 0.9)};\n    outline: none;\n  }\n  &:active {\n    background-color: ${props => transparentize(props.theme.colors.mainColor)};\n  }\n  & > span:first-child {\n    position: relative;\n    width: auto;\n    padding: 0 10px;\n  }\n  & > span:first-child:after {\n    content: '*';\n    position: absolute;\n    top: -3px;\n    left: 91%;\n  }\n`;\n\nexport const AgreementCheckBox = styled.input.attrs({\n  type: 'checkbox',\n  required: true\n})`\n  display: none;\n  visibility: hidden;\n`;\n\nexport const AgreementLabel = styled.label``;\n\ntype CheckboxContainerProps = {\n  children?: any;\n  validationStatusBeforeSubmit: boolean;\n  isChecked: boolean;\n};\n\nexport const CheckboxContainer = styled.div<CheckboxContainerProps>`\n  user-select: none;\n  margin-top: 18px;\n  line-height: 2px;\n  display: flex;\n  align-item: center;\n  width: 420px;\n  ${media.mobile`\n      width: 360px;\n  `};\n  ${props =>\n    props.validationStatusBeforeSubmit === false &&\n    css`\n      & {\n        ${shake('horizontal', 0.2, '5')}\n      }\n    `};\n  ${ButtonWrapper} {\n    width: 30px;\n    outline: none;\n    ${ButtonElement} {\n      margin-top: -1px;\n      margin-left: 40px;\n      background-color: transparent;\n      border: 1px solid;\n      border-color: ${props =>\n        props.validationStatusBeforeSubmit === false && !props.isChecked\n          ? props.theme.colors.incorrectColor\n          : transparentize(props.theme.colors.textColor, 0.5)};\n    }\n    &[role='checkbox'] {\n      height: 30px;\n      cursor: pointer;\n      ${CheckIcon} {\n        color: black;\n      }\n      &:focus {\n        & ${ButtonElement} {\n          border-color: ${props => props.theme.colors.mainColor};\n        }\n      }\n      ${props =>\n        !props.isChecked &&\n        css`\n          &:hover {\n            & ${CheckIcon} {\n              opacity: 0.2;\n            }\n          }\n        `}\n      }\n    }\n  }\n\n  ${AgreementLabel} {\n    width: 290px;\n    margin-left: 5px;\n    margin-top: 10px;\n    ${media.mobile`\n      width: 220px;\n    `};\n  }\n`;\n","import styled, { css } from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport { Text, Button } from 'components/common';\nimport media from 'components/mixins/media';\nimport buttonDefaultStyle from 'components/mixins/normalize';\nimport { secondaryFont } from 'components/mixins/typography';\nimport {\n  ButtonElement,\n  TextElement,\n  CheckIcon,\n  ButtonWrapper\n} from 'components/common/SwitchButton/SwitchButton.styled';\n\ntype CheckboxContainerProps = {\n  children?: any;\n};\nexport const CheckboxContainer = styled.div<CheckboxContainerProps>`\n  user-select: none;\n  padding: 0;\n  cursor: pointer;\n\n  ${ButtonWrapper} {\n    padding: 0;\n    align-items: center;\n\n    ${ButtonElement} {\n      align-self: center;\n      background-color: transparent;\n      border: 1px solid ${props => transparentize(props.theme.colors.textColor, 0.2)};\n      ${props =>\n        props.children &&\n        props.children.props.selected &&\n        css`\n          background-color: ${props.theme.colors.correctColor};\n          border-color: ${props.theme.colors.correctColor};\n        `};\n    }\n\n    ${TextElement} {\n      ${secondaryFont};\n      font-size: 12px;\n      font-weight: normal;\n      line-height: normal;\n      opacity: 0.7;\n    }\n\n    &[role='checkbox'] {\n      padding: 3px 17px 3px 35px;\n    }\n    .show-on-hover {\n      left: 14px;\n      margin-top: -7px;\n      width: 13px;\n      height: 13px;\n    }\n\n    &:hover,\n    &:focus {\n      ${TextElement} {\n        opacity: 0.8;\n      }\n\n      ${ButtonElement} {\n        border-color: ${props => props.theme.colors.correctColor};\n\n        ${props =>\n          !props.children.props.selected &&\n          css`\n            ${CheckIcon} {\n              display: none;\n            }\n          `};\n      }\n    }\n  }\n`;\n\nexport const ButtonSubmit = styled(Button)`\n  ${buttonDefaultStyle};\n  background-color: ${props => props.theme.colors.mainColor};\n  color: ${props => props.theme.colors.buttonTextColor};\n  font-weight: 600;\n  min-width: 198px;\n  max-width: 320px;\n  text-overflow: ellipsis;\n  ${media.mobile`\n    min-width: 160px;\n    max-width: 260px;\n  `};\n  & span {\n    font-size: 14px;\n  }\n  & .icon {\n    font-size: 8px;\n  }\n  &:hover {\n    background-color: ${props => transparentize(props.theme.colors.mainColor, 0.9)};\n  }\n  &:focus {\n    background-color: ${props => transparentize(props.theme.colors.mainColor, 0.9)};\n    outline: 1px solid black;\n  }\n  &:focus:not(:focus-visible) {\n    background-color: ${props => transparentize(props.theme.colors.mainColor, 0.9)};\n    outline: none;\n  }\n  &:active {\n    background-color: ${props => transparentize(props.theme.colors.mainColor)};\n  }\n`;\n\nexport const ControlContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  height: 73px;\n  margin-top: 14px;\n  padding: 0 16px;\n  line-height: normal;\n`;\n\nexport const MessageText = styled(Text).attrs(props => {\n  return {};\n})`\n  ${secondaryFont};\n  && {\n    font-size: 10px;\n    font-weight: normal;\n    line-height: 1.5;\n    color: ${props => props.theme.colors.textColor};\n  }\n`;\n\nexport const MessageTextWrapper = styled.span`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const LinkWrapper = styled.div``;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { localize } from 'core/localization';\nimport { withTheme } from 'styled-components';\nimport { getEmail, getName, shouldSaveCrossDevice } from 'store/user/selectors';\nimport progressStorage from 'core/progressStorage';\nimport { STATUS_OK } from 'constants/progressStorage';\nimport { Link, SwitchButton, StatusTooltip } from 'components/common';\nimport { BUTTON, LINK, SIZES, TOOLTIP } from 'constants/components';\nimport { RootAppState } from 'store/types';\nimport AuthForm from '../AuthForm';\nimport EmailInput from '../AuthForm/EmailInput';\nimport NameInput from '../AuthForm/NameInput';\nimport PasswordInput from '../AuthForm/PasswordInput';\nimport { InputContainer } from '../SignUpForm/SignUpForm.styled';\nimport { FormContentWrapper } from '../AuthForm/AuthForm.styled';\nimport {\n  ButtonSubmit,\n  ControlContainer,\n  MessageText,\n  CheckboxContainer,\n  LinkWrapper,\n  MessageTextWrapper\n} from './LoginForm.styled';\n\ntype LoginFormProps = {\n  onSubmit(e: any, data: any): Promise<void>;\n  formId: string;\n  userEmail: string;\n  userName: string;\n  saveCrossDevice: boolean;\n  isEmailPasswordCombinationNotExists: boolean;\n  resetStatuses(): void;\n  theme?: any;\n  setFieldRefs?(fieldRefs: any): void;\n};\n\ntype LoginFormState = {\n  shortTermAccess: boolean;\n  resetPasswordSendMessage: boolean;\n};\n\nexport class LoginForm extends React.Component<LoginFormProps, LoginFormState> {\n  templateTheme: any;\n\n  constructor(props: LoginFormProps) {\n    super(props);\n    this.templateTheme = props.theme;\n    this.state = {\n      shortTermAccess: true,\n      resetPasswordSendMessage: false\n    };\n  }\n\n  static defaultProps = {\n    isEmailPasswordCombinationNotExists: false\n  };\n\n  hideMessage = () => {\n    this.setState({ resetPasswordSendMessage: false });\n  };\n\n  onPasswordRestore = async (refEmail: any, setValidationStatusElem: any) => {\n    const emailValid = refEmail ? refEmail.validity.valid : false;\n    setValidationStatusElem(refEmail);\n\n    if (!emailValid) {\n      return;\n    }\n\n    let status = await progressStorage.resetPassword(refEmail.value.toLowerCase());\n    this.setState({ resetPasswordSendMessage: status === STATUS_OK });\n  };\n\n  renderForgotPasswordLink(refEmail: any, setValidationStatusElem: any) {\n    return (\n      <LinkWrapper>\n        <Link\n          text={localize('[forgot pass]')}\n          layout={LINK.LAYOUT.FORM}\n          size={12}\n          onClick={() => this.onPasswordRestore(refEmail, setValidationStatusElem)}\n          onBlur={this.hideMessage}\n          data-test=\"forgot-password-link\"\n          opacity={0.7}\n        />\n      </LinkWrapper>\n    );\n  }\n\n  credentialsCombinationNotExistsMessage() {\n    return (\n      <MessageTextWrapper>\n        <MessageText theme={this.templateTheme} appearance=\"span\">\n          {localize('[error login email]')}\n        </MessageText>\n        <MessageText theme={this.templateTheme} appearance=\"span\">\n          {localize('[error login pass]')}\n        </MessageText>\n      </MessageTextWrapper>\n    );\n  }\n\n  renderLoginButton() {\n    return (\n      <ButtonSubmit layout={BUTTON.LAYOUT.PRIMARY} suffixIcon=\"arrow-right\" type=\"submit\">\n        {localize('[login button]')}\n      </ButtonSubmit>\n    );\n  }\n\n  renderContent = (props: any) => {\n    const { saveCrossDevice, resetStatuses, userEmail, userName } = this.props;\n    const {\n      refEmail,\n      isEmailPasswordCombinationNotExists,\n      onChange,\n      setRefs,\n      validationStatusBeforeSubmit,\n      setValidationStatusElem,\n      resetPasswordSendMessage,\n      shortTermAccess\n    } = props;\n\n    return (\n      <FormContentWrapper>\n        <InputContainer size={40}>\n          <EmailInput\n            userEmail={userEmail}\n            onChange={onChange}\n            setRefs={setRefs}\n            textError={localize('[error email input]')}\n            validationStatusBeforeSubmit={validationStatusBeforeSubmit.email}\n            onFocus={resetStatuses}\n          />\n        </InputContainer>\n        {!saveCrossDevice && (\n          <InputContainer size={40}>\n            <NameInput\n              userName={userName}\n              onChange={onChange}\n              setRefs={setRefs}\n              validationStatusBeforeSubmit={validationStatusBeforeSubmit.name}\n              onFocus={resetStatuses}\n            />\n          </InputContainer>\n        )}\n        {saveCrossDevice && (\n          <InputContainer size={12}>\n            <PasswordInput\n              onChange={onChange}\n              setRefs={setRefs}\n              validationStatusBeforeSubmit={validationStatusBeforeSubmit.password}\n              pattern=\"\\S+\"\n              showValidationMessage={false}\n              onFocus={resetStatuses}\n            />\n            <ControlContainer>\n              {this.renderWithTooltip(\n                TOOLTIP.CORRECT,\n                resetPasswordSendMessage,\n                localize('[reset password link sent success]'),\n                this.renderForgotPasswordLink(refEmail, setValidationStatusElem),\n                false,\n                this.hideMessage\n              )}\n              <CheckboxContainer>\n                <SwitchButton\n                  multiple={true}\n                  text={localize('[remember me]')}\n                  selected={!shortTermAccess}\n                  aria-checked={!shortTermAccess}\n                  size={SIZES.SMALL}\n                  tabIndex={0}\n                  onClick={() => this.setState({ shortTermAccess: !shortTermAccess })}\n                  onKeyDown={(event: any) => {\n                    if (event.key === ` ` || event.key === 'Enter') {\n                      event.preventDefault();\n                      this.setState({ shortTermAccess: !shortTermAccess });\n                    }\n                  }}\n                />\n              </CheckboxContainer>\n            </ControlContainer>\n          </InputContainer>\n        )}\n        {this.renderWithTooltip(\n          TOOLTIP.INCORRECT,\n          isEmailPasswordCombinationNotExists,\n          this.credentialsCombinationNotExistsMessage(),\n          this.renderLoginButton(),\n          false\n        )}\n      </FormContentWrapper>\n    );\n  };\n\n  render() {\n    const { resetPasswordSendMessage, shortTermAccess } = this.state;\n    const { onSubmit, formId, isEmailPasswordCombinationNotExists, setFieldRefs } = this.props;\n\n    return (\n      <AuthForm\n        shortTermAccess={shortTermAccess}\n        resetPasswordSendMessage={resetPasswordSendMessage}\n        formId={formId}\n        onSubmit={onSubmit}\n        isEmailPasswordCombinationNotExists={isEmailPasswordCombinationNotExists}\n        hideMessage={this.hideMessage}\n        renderContent={this.renderContent}\n        setFieldRefs={setFieldRefs}\n      />\n    );\n  }\n\n  renderWithTooltip = (\n    status: any,\n    showTooltip: any,\n    message: any,\n    actionElement: any,\n    interactive: boolean,\n    hideMessage: any = () => null\n  ) => (\n    <StatusTooltip\n      popoverPosition={'top'}\n      layout={status}\n      onRequestClose={hideMessage}\n      showTooltip={showTooltip}\n      message={message}\n      popoverButton={actionElement}\n      transitionDuration={0.2}\n      eventHandler={'click'}\n      interactive={interactive}\n    />\n  );\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    userEmail: getEmail(state),\n    userName: getName(state),\n    saveCrossDevice: shouldSaveCrossDevice(state)\n  };\n}\n\nexport default withTheme(connect(mapStateToProps)(LoginForm));\n","import styled, { css } from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport { secondaryFont } from 'components/mixins/typography';\nimport Icon from 'components/common/Icon';\nimport Text from 'components/common/Text';\n\nconst variables = {\n  colors: {\n    facebook: '#4267b2',\n    linkedin: '#0077b5',\n    google: '#ea4335'\n  }\n};\n\nexport const IconElement = styled(Icon)`\n  font-size: 13px;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.5)};\n`;\n\ntype LinkElement = {\n  href: string;\n  ariaLabel: string;\n  name: string;\n}\nexport const LinkElement = styled.a.attrs((props: LinkElement) => ({\n  href: props.href,\n  'aria-label': props.ariaLabel\n}))<LinkElement>`\n  text-decoration: none;\n  text-align: center;\n  border-radius: 100px;\n  padding: 8px;\n  background-color: ${props => props.theme.colors.contentBodyColor};\n  border: 1px solid ${props => transparentize(props.theme.colors.textColor, 0.1)};\n  width: 53px;\n  height: 31px;\n  margin: 0 8px;\n  &:hover {\n    cursor: pointer;\n  }\n  &:focus {\n    outline: none;\n  }\n  ${props =>\n    props.name === 'facebook'\n      ? css`\n          &:hover,\n          &:focus {\n            border: 1px solid ${variables.colors.facebook};\n          }\n          &:hover ${IconElement}, &:focus ${IconElement} {\n            color: ${variables.colors.facebook};\n          }\n          &:active {\n            background-color: ${transparentize(variables.colors.facebook, 0.1)};\n          }\n        `\n      : css``};\n  ${props =>\n    props.name === 'linkedin'\n      ? css`\n          &:hover,\n          &:focus {\n            border: 1px solid ${variables.colors.linkedin};\n          }\n          &:hover ${IconElement}, &:focus ${IconElement} {\n            color: ${variables.colors.linkedin};\n          }\n          &:active {\n            background-color: ${transparentize(variables.colors.linkedin, 0.1)};\n          }\n        `\n      : css``};\n  ${props =>\n    props.name === 'google'\n      ? css`\n          &:hover,\n          &:focus {\n            border: 1px solid ${variables.colors.google};\n          }\n          &:hover ${IconElement}, &:focus ${IconElement} {\n            color: ${variables.colors.google};\n          }\n          &:active {\n            background-color: ${transparentize(variables.colors.google, 0.1)};\n          }\n        `\n      : css``};\n`;\n\nexport const SocialLoginContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const TextSocial = styled(Text)`\n  ${secondaryFont};\n  font-size: 14px;\n  text-align: center;\n  font-weight: normal;\n  color: ${props => transparentize(props.theme.colors.textColor, 0.5)};\n  line-height: 1;\n  padding: 10px 16px;\n  flex-shrink: 0;\n`;\n\nexport const SeparatorContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n`;\n","import * as React from 'react';\nimport Separator from 'components/common/Separator';\nimport { localize } from 'core/localization';\nimport progressStorage from 'core/progressStorage';\nimport {\n  LinkElement,\n  SocialLoginContainer,\n  IconElement,\n  TextSocial,\n  SeparatorContainer\n} from './SocialLogin.styled';\n\ntype SocialLoginProps = {\n  title: string;\n};\nexport class SocialLogin extends React.Component<SocialLoginProps, {}> {\n  render() {\n    const { title } = this.props;\n    return (\n      <React.Fragment>\n        <SeparatorContainer>\n          <Separator opacity={0.05} color=\"textColor\" />\n          <TextSocial appearance=\"span\">{title}</TextSocial>\n          <Separator opacity={0.05} color=\"textColor\" />\n        </SeparatorContainer>\n        <SocialLoginContainer>\n          <LinkElement\n            name=\"facebook\"\n            ariaLabel={localize('[btn FB label]')}\n            href={progressStorage.getSocialNetworkAuthLink('facebook')}\n          >\n            <IconElement name=\"facebook\" />\n          </LinkElement>\n          <LinkElement\n            name=\"linkedin\"\n            ariaLabel={localize('[btn LI label]')}\n            href={progressStorage.getSocialNetworkAuthLink('linkedin')}\n          >\n            <IconElement name=\"linkedin\" />\n          </LinkElement>\n          <LinkElement\n            name=\"google\"\n            ariaLabel={localize('[btn G label]')}\n            href={progressStorage.getSocialNetworkAuthLink('google')}\n          >\n            <IconElement name=\"google\" />\n          </LinkElement>\n        </SocialLoginContainer>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SocialLogin;\n","import styled from 'styled-components';\nimport { transparentize } from 'utils/color';\nimport { transition } from 'components/mixins/interactivity';\nimport { secondaryFont } from 'components/mixins/typography';\n\ntype ListItemElementsProps = {\n  ariaCurrent: string | boolean;\n};\nexport const ListItemElements = styled.li.attrs((props: ListItemElementsProps) => ({\n  'aria-current': props.ariaCurrent\n}))<ListItemElementsProps>`\n  ${secondaryFont};\n  font-size: 14px;\n  font-weight: normal;\n  overflow: visible;\n  margin: 0 21px;\n  & a {\n    display: inline-block;\n    text-decoration: none;\n    color: ${props => transparentize(props.theme.colors.textColor, 0.7)};\n  }\n  &.active a {\n    color: ${props => props.theme.colors.mainColor};\n  }\n  &:hover {\n    cursor: pointer;\n  }\n  &::after {\n    content: '';\n    position: relative;\n    top: 16px;\n    display: block;\n  }\n  &.active {\n    pointer-events: none;\n  }\n  &.inactive::after {\n    width: 0;\n    left: 50%;\n    border-top: 1px solid ${props => transparentize(props.theme.colors.textColor, 0.5)};\n    ${transition('width, left')};\n  }\n  &.inactive:hover::after {\n    width: 100%;\n    left: 0;\n  }\n  &.active::after {\n    width: 100%;\n    border-top: 1px solid ${props => props.theme.colors.mainColor};\n  }\n`;\n\nexport const ListElement = styled.ul`\n  display: flex;\n`;\n\nexport const LinksWrapper = styled.nav`\n  display: flex;\n  justify-content: center;\n`;\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { localize } from 'core/localization';\nimport { LOGIN_PATH, SIGNUP_PATH } from 'constants/navigation';\nimport { LinksWrapper, ListElement, ListItemElements } from './SwitcherForm.styled';\n\n\ntype SwitcherFormProps = {\n  signUp: boolean;\n  logIn: boolean;\n}\nexport class SwitcherForm extends React.Component<SwitcherFormProps, {}> {\n\n  static defaultProps = {\n    signUp: false,\n    logIn: false\n  };\n  render() {\n    const { signUp, logIn } = this.props;\n    // eslint-disable-next-line\n    return (\n      <LinksWrapper>\n        <ListElement>\n          <ListItemElements\n            ariaCurrent={signUp ? 'page' : false}\n            className={signUp ? 'active' : 'inactive'}\n          >\n            <Link to={SIGNUP_PATH}>{localize('[signup]')}</Link>\n          </ListItemElements>\n          <ListItemElements\n            ariaCurrent={logIn ? 'page' : false}\n            className={logIn ? 'active' : 'inactive'}\n          >\n            <Link to={LOGIN_PATH}>{localize('[login]')}</Link>\n          </ListItemElements>\n        </ListElement>\n      </LinksWrapper>\n    );\n  }\n}\n\nexport default SwitcherForm;\n","import styled from 'styled-components';\nimport media from 'components/mixins/media';\nimport { transparentize } from 'utils/color';\nimport Text from 'components/common/Text';\n\nexport const MobileFooterContainer = styled.div.attrs({\n  'data-test': 'mobile-footer'\n})`\n  display: none;\n  width: 100%;\n  ${media.tablet`\n    display: block;\n    padding-bottom: 100px;\n  `};\n  ${media.mobile`\n    display: block;\n    padding-bottom: 70px;\n  `};\n`;\n\nexport const LinkToPageContainer = styled.div`\n  width: 100%;\n  height: 100px;\n  background: ${props => props.theme.colors.contentBodyColor};\n  display: flex;\n  position: fixed;\n  bottom: 0;\n  justify-content: center;\n  align-items: center;\n  font-weight: normal;\n\n  & a {\n    color: ${props => props.theme.colors.mainColor};\n    margin-left: 5px;\n  }\n\n  ${media.mobile`\n    height: 70px;\n  `};\n\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    background: ${props => transparentize(props.theme.colors.textColor, 0.02)};\n    z-index: -1;\n  }\n`;\n\nexport const LinkToPageText = styled(Text)`\n  color: ${props => props.theme.colors.textColor};\n`;\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { localize } from 'core/localization';\nimport { MobileFooterContainer, LinkToPageContainer, LinkToPageText } from './MobileFooter.styled';\n\ntype MobileFooterProps = {\n  navigationTextKey: string;\n  navigateTo: string;\n  navigationToTextKey: string;\n};\n\nexport class MobileFooter extends React.Component<MobileFooterProps, {}> {\n  render() {\n    const { navigationTextKey, navigateTo, navigationToTextKey } = this.props;\n    return (\n      <MobileFooterContainer>\n        <LinkToPageContainer>\n          <LinkToPageText>\n            {localize(navigationTextKey)}\n            <Link to={navigateTo}>{localize(navigationToTextKey)}</Link>\n          </LinkToPageText>\n        </LinkToPageContainer>\n      </MobileFooterContainer>\n    );\n  }\n}\n\nexport default MobileFooter;\n","import styled from 'styled-components';\nimport media from 'components/mixins/media';\nimport { transparentize } from 'utils/color';\nimport { Text, Link } from 'components/common';\n\nexport const LearnerAgreementText = styled(Text).attrs({\n  'data-test': 'agreement-text'\n})`\n  && {\n    font-size: 14px;\n    text-align: center;\n    font-weight: normal;\n    line-height: 1.6;\n    width: 320px;\n    color: ${props => transparentize(props.theme.colors.textColor, 0.7)};\n    ${media.mobile`\n      width: 220px;\n    `};\n  }\n`;\n\n\nexport const EulaLinkText = styled(Link).attrs({\n  'data-test': 'eula-link-text'\n})`\n  font-size: 14px;\n  text-align: center;\n  font-weight: normal;\n  margin-bottom: 36px;\n  overflow-wrap: break-word;\n  line-height: 1.6;\n  width: 320px;\n  color: ${props => props.theme.colors.ctaButtonColor};\n  ${media.mobile`\n    width: 220px;\n  `};\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline;\n    color: ${props => props.theme.colors.ctaButtonColor};\n  }\n`;\n","import React, { useState } from 'react';\nimport { localize } from 'core/localization';\nimport { LINK } from 'constants/components';\nimport { EULA_PDF_LINK } from 'constants/common';\nimport PdfDocument from 'components/common/embeddables/PdfDocument';\nimport { LearnerAgreementText, EulaLinkText } from './LearnerAgreements.styled';\n\ntype LearnerAgreementsProps = {\n  isSignUpPage?: boolean;\n  saveCrossDevice?: boolean;\n  loginViaSocialMediaEnabled?: boolean;\n  allowToSkipTrackingAndTracingEnabled?: boolean;\n};\n\nexport const LearnerAgreements = (props: LearnerAgreementsProps) => {\n  const [shouldDisplayAgreement, setShouldDisplayAgreement] = useState(false);\n  const { isSignUpPage = false } = props;\n\n  const onClick = () => {\n    setShouldDisplayAgreement(!shouldDisplayAgreement);\n  };\n\n  return (\n    <React.Fragment>\n      {isSignUpPage && (\n        <LearnerAgreementText>{localize('[learner agreement signup]')}{' '} </LearnerAgreementText>\n      )}\n      <EulaLinkText\n        text={localize('[eula]')}\n        onClick={onClick}\n        opacity={0.7}\n        layout={LINK.LAYOUT.FORM}\n        href={EULA_PDF_LINK}\n      />\n      {shouldDisplayAgreement && (\n        <PdfDocument url={EULA_PDF_LINK} toggle={setShouldDisplayAgreement} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default LearnerAgreements;\n","import styled from 'styled-components';\nimport media from 'components/mixins/media';\nimport { bodyBackground } from 'components/mixins/backgrounds';\nimport { BasicStyledSidebar, PageContent } from 'components/shell/Layout';\nimport { transparentize } from 'utils/color';\nimport { centerAbsoluteElement } from 'components/mixins/placement';\nimport Text from 'components/common/Text';\nimport Icon from 'components/common/Icon';\nimport { secondaryFont } from 'components/mixins/typography';\nimport { getCustomScrollbars } from 'components/mixins/customScrollbars';\n\nexport const AuthPageSidebar = styled(BasicStyledSidebar)``;\n\ntype AuthPageContentProps = {\n  background: any;\n};\nexport const AuthPageContent = styled(PageContent)<AuthPageContentProps>`\n  position: absolute;\n  top: 0;\n  left: 50%;\n  height: 100%;\n  width: 50%;\n  left: 50%;\n  overflow-y: auto;\n  ${getCustomScrollbars()}\n  ${props => bodyBackground(props.background.body)};\n  ${media.tablet`\n    position: relative;\n    width: 100%;\n    left: 0;\n  `};\n`;\n\nexport const AuthContainer = styled.div`\n  width: 300px;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  ${media.mobile`\n    width: 260px;\n  `};\n`;\n\nexport const AuthSection = styled.section`\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n`;\n\ntype CourseLogoProps = {\n  altText: string;\n  logoUrl: string;\n};\nexport const CourseLogo = styled.img.attrs((props: CourseLogoProps) => ({\n  alt: props.altText,\n  src: props.logoUrl\n}))<CourseLogoProps>`\n  display: none;\n  margin: 56px auto;\n  max-width: 200px;\n  max-height: 80px;\n\n  ${media.tablet`\n    display: block;\n  `};\n`;\n\nexport const CourseLogoSidebarWrapper = styled.div`\n  width: 360px;\n  height: 200px;\n  position: absolute;\n  ${centerAbsoluteElement};\n`;\n\ntype CourseLogoSidebarProps = {\n  altText: string;\n  logoUrl: string;\n};\nexport const CourseLogoSidebar = styled.img.attrs((props: CourseLogoSidebarProps) => ({\n  alt: props.altText,\n  src: props.logoUrl\n}))<CourseLogoSidebarProps>`\n  display: block;\n  max-width: 100%;\n  max-height: 100%;\n  margin: 0 auto;\n`;\n\nexport const FormHeading = styled.h1`\n  ${secondaryFont};\n  display: inline-block;\n  font-size: 36px;\n  font-weight: 300;\n  line-height: 1.03;\n  text-align: center;\n  color: ${props => props.theme.colors.textColor};\n  margin-top: 100px;\n\n  ${media.tablet`\n    margin-top: 0;\n  `};\n`;\n\nexport const AuthTextForm = styled(Text)`\n  && {\n    ${secondaryFont};\n    font-size: 14px;\n    text-align: center;\n    font-weight: normal;\n    margin: 32px auto;\n    color: ${props => transparentize(props.theme.colors.textColor, 0.7)};\n    line-height: 1.6;\n    ${media.mobile`\n      width: 220px;\n    `};\n  }\n`;\n\nexport const AuthSocialLoginContainer = styled.div`\n  position: relative;\n  width: 320px;\n`;\n\nexport const SwitcherFormContainer = styled.div`\n  ${media.tablet`\n    display: none;\n  `};\n  ${media.mobile`\n    display: none;\n  `};\n`;\n\ntype GdprProps = {\n  addTopMargin?: boolean;\n  isSignupPage?: boolean;\n};\n\nexport const Gdpr = styled.div.attrs({\n  'data-test': 'gdpr'\n})<GdprProps>`\n  display: flex;\n  align-items: center;\n  width: 320px;\n  height: 48px;\n  margin-bottom: ${props => (props.isSignupPage ? '50' : '0')}px;\n  ${media.mobile`\n    width: 260px;\n  `};\n  margin-top: ${props => (props.addTopMargin ? '30' : '8')}px;\n`;\n\ntype AgreementIconProps = {\n  name: string;\n};\n\nexport const AgreementIcon = styled(Icon).attrs((props: AgreementIconProps) => ({\n  name: props.name\n}))<AgreementIconProps>`\n  font-size: 48px;\n  opacity: 0.3;\n`;\n\nexport const GdprText = styled(Text)`\n  && {\n    ${secondaryFont};\n    font-size: 14px;\n    font-weight: normal;\n    margin: 18px;\n    color: ${props => transparentize(props.theme.colors.textColor, 0.7)};\n    ${media.mobile`\n      width: 220px;\n    `};\n    text-align: left;\n  }\n`;\n","import styled from 'styled-components';\nimport {\n  AuthContainer,\n  AuthTextForm,\n  AuthSocialLoginContainer,\n  AuthSection\n} from '../auth/auth.styled';\n\nexport const LoginSection = styled(AuthSection)`\n  justify-content: center;\n  padding: 40px 0;\n`;\n\nexport const LoginContainer = styled(AuthContainer)`\n  justify-content: center;\n`;\n\nexport const TextForm = styled(AuthTextForm)`\n  width: 300px;\n`;\n\nexport const SocialLoginContainer = styled(AuthSocialLoginContainer)`\n  margin-bottom: 40px;\n`;\n\nexport const SkipLinkContainer = styled.div.attrs({\n  'data-test': 'skip-login'\n})`\n  margin-top: 25px;\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { SIGNUP_PATH } from 'constants/navigation';\nimport Separator from 'components/common/Separator';\nimport withNavigation from 'components/hocs/withNavigation';\nimport {\n  getBackground,\n  getLogo,\n  getAlternativeLogo,\n  isCrossDeviceSavingEnabled,\n  isLoginViaSocialMediaEnabled,\n  isAccessLimited,\n  isAllowToSkipTrackingAndTracingEnabled,\n  getAllowedUsers\n} from 'store/settings/selectors';\nimport { getCourseTitle, getCourseIntroductions } from 'store/course/selectors';\nimport { localize } from 'core/localization';\nimport * as userActions from 'store/user/actions';\nimport * as appActions from 'store/app/actions';\nimport LoginForm from 'components/login/LoginForm';\nimport SocialLogin from 'components/login/SocialLogin';\nimport SwitcherForm from 'components/login/SwitcherForm';\nimport MobileFooter from 'components/login/MobileFooter';\nimport { LINK } from 'constants/components';\nimport LinkText from 'components/common/Link';\nimport {\n  EMAIL_PASSWORD_COMBINATION_NOT_EXISTS,\n  UNKNOWN_ERROR,\n  STATUS_OK\n} from 'constants/progressStorage';\nimport { RootAppState } from 'store/types';\nimport LearnerAgreements from 'components/login/LearnerAgreements';\nimport {\n  AuthPageContent,\n  AuthPageSidebar,\n  CourseLogo,\n  CourseLogoSidebar,\n  CourseLogoSidebarWrapper,\n  FormHeading,\n  SwitcherFormContainer,\n  Gdpr,\n  AgreementIcon,\n  GdprText\n} from '../auth/auth.styled';\nimport {\n  LoginSection,\n  TextForm,\n  SocialLoginContainer,\n  SkipLinkContainer,\n  LoginContainer\n} from './LoginPage.styled';\nimport SkipToContent from '../../components/common/SkipToContent';\n\ntype LoginPageProps = {\n  navigateToUrl(url: string): void;\n  userActions: { [key: string]: any };\n  appActions: { [key: string]: any };\n  isUserAuthenticated: boolean;\n  theme: { [key: string]: any };\n  background: { [key: string]: any };\n  logoUrl: string;\n  alternativeLogoUrl: string;\n  isAuthenticated?: boolean;\n  isCrossDeviceSavingEnabled: boolean;\n  loginViaSocialMediaEnabled: boolean;\n  title: string;\n  accessLimitationEnable: boolean;\n  allowToSkipTrackingAndTracingEnabled: boolean;\n  allowedUsers: any[];\n};\ntype LoginPageState = {\n  isEmailPasswordCombinationNotExists: boolean;\n  isUnknownError: boolean;\n};\n\nexport class LoginPage extends React.Component<LoginPageProps, LoginPageState> {\n  loginFormFieldRefs: { [key: string]: any };\n\n  constructor(props: LoginPageProps) {\n    super(props);\n\n    this.state = {\n      isEmailPasswordCombinationNotExists: false,\n      isUnknownError: false\n    };\n    this.loginFormFieldRefs = {};\n  }\n\n  resetStatuses = () => {\n    this.setState({\n      isEmailPasswordCombinationNotExists: false,\n      isUnknownError: false\n    });\n  };\n\n  onSubmit = async (event: any, signInData: any) => {\n    event.preventDefault();\n\n    const status = await this.props.userActions.authorizeUser(signInData);\n\n    if (status === STATUS_OK) {\n      await this.launch();\n      return;\n    }\n\n    this.setState({\n      isEmailPasswordCombinationNotExists: status === EMAIL_PASSWORD_COMBINATION_NOT_EXISTS,\n      isUnknownError: status === UNKNOWN_ERROR\n    });\n  };\n\n  async launch() {\n    const urlToNavigate = await this.props.appActions.launchMaterial();\n    this.props.navigateToUrl(urlToNavigate);\n  }\n\n  onAuthorizationSkip = async () => {\n    await this.props.userActions.skipAuthentication();\n    await this.launch();\n  };\n\n  componentDidMount() {\n    document.title = `${localize('[title for login page]')} | ${this.props.title}`;\n  }\n\n  setFieldRefs = (fieldRefs: any) => {\n    this.loginFormFieldRefs = fieldRefs;\n  };\n\n  setEmailFocus = () => {\n    this.loginFormFieldRefs.email.focus();\n  };\n\n  render() {\n    const {\n      background,\n      logoUrl,\n      alternativeLogoUrl,\n      isCrossDeviceSavingEnabled,\n      loginViaSocialMediaEnabled,\n      allowToSkipTrackingAndTracingEnabled,\n      accessLimitationEnable\n    } = this.props;\n    const signInFormId = 'formLogin';\n    return (\n      <React.Fragment>\n        <SkipToContent onClick={this.setEmailFocus} />\n        <AuthPageSidebar background={background}>\n          <CourseLogoSidebarWrapper>\n            <CourseLogoSidebar\n              altText={localize('[alt logo login]')}\n              logoUrl={alternativeLogoUrl}\n            />\n          </CourseLogoSidebarWrapper>\n        </AuthPageSidebar>\n        <AuthPageContent background={background}>\n          <LoginSection>\n            <LoginContainer>\n              {isCrossDeviceSavingEnabled && (\n                <SwitcherFormContainer>\n                  <SwitcherForm logIn />\n                </SwitcherFormContainer>\n              )}\n              <CourseLogo altText={localize('[alt logo login]')} logoUrl={logoUrl} />\n              <FormHeading id={signInFormId}>\n                {isCrossDeviceSavingEnabled\n                  ? localize('[welcome]')\n                  : localize('[welcome without LS]')}\n              </FormHeading>\n              <TextForm appearance=\"p\">\n                {isCrossDeviceSavingEnabled\n                  ? localize('[login form text]')\n                  : localize('[login form text without LS]')}\n              </TextForm>\n              <LoginForm\n                formId={signInFormId}\n                onSubmit={this.onSubmit}\n                isEmailPasswordCombinationNotExists={this.state.isEmailPasswordCombinationNotExists}\n                resetStatuses={this.resetStatuses}\n                setFieldRefs={this.setFieldRefs}\n              />\n              {isCrossDeviceSavingEnabled && loginViaSocialMediaEnabled && (\n                <SocialLoginContainer>\n                  <SocialLogin title={localize('[login with]')} />\n                </SocialLoginContainer>\n              )}\n              {!accessLimitationEnable && allowToSkipTrackingAndTracingEnabled && (\n                <SkipLinkContainer>\n                  <LinkText\n                    text={localize('[skip step]')}\n                    layout={LINK.LAYOUT.FORM}\n                    onClick={this.onAuthorizationSkip}\n                    opacity={0.7}\n                  />\n                </SkipLinkContainer>\n              )}\n              <Gdpr\n                addTopMargin={\n                  !loginViaSocialMediaEnabled ||\n                  allowToSkipTrackingAndTracingEnabled ||\n                  !isCrossDeviceSavingEnabled\n                }\n              >\n                <AgreementIcon name={'agreement-lock'} />\n                <GdprText appearance=\"p\">{localize('[gdpr text]')}</GdprText>\n              </Gdpr>\n              <Separator opacity={0.05} color=\"textColor\" />\n            </LoginContainer>\n            <LearnerAgreements />\n            {isCrossDeviceSavingEnabled && (\n              <MobileFooter\n                navigationTextKey=\"[dont have account]\"\n                navigateTo={SIGNUP_PATH}\n                navigationToTextKey=\"[signup here]\"\n              />\n            )}\n          </LoginSection>\n        </AuthPageContent>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    title: getCourseTitle(state),\n    introductions: getCourseIntroductions(state),\n    background: getBackground(state),\n    logoUrl: getLogo(state),\n    alternativeLogoUrl: getAlternativeLogo(state),\n    isCrossDeviceSavingEnabled: isCrossDeviceSavingEnabled(state),\n    loginViaSocialMediaEnabled: isLoginViaSocialMediaEnabled(state),\n    accessLimitationEnable: isAccessLimited(state),\n    allowToSkipTrackingAndTracingEnabled: isAllowToSkipTrackingAndTracingEnabled(state),\n    allowedUsers: getAllowedUsers(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    userActions: bindActionCreators(userActions, dispatch),\n    appActions: bindActionCreators(appActions, dispatch)\n  };\n}\n\nexport default withNavigation(connect(mapStateToProps, mapDispatchToProps)(LoginPage));\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { localize } from 'core/localization';\nimport progressStorage from 'core/progressStorage';\nimport { getEmail, getName } from 'store/user/selectors';\nimport { BUTTON, TOOLTIP, SIZES } from 'constants/components';\nimport { KEYS } from 'constants/common';\nimport { withTheme } from 'styled-components';\nimport { RootAppState } from 'store/types';\nimport LearnerAgreements from 'components/login/LearnerAgreements';\nimport AuthForm from '../AuthForm';\nimport EmailInput from '../AuthForm/EmailInput';\nimport NameInput from '../AuthForm/NameInput';\nimport PasswordInput from '../AuthForm/PasswordInput';\nimport { FormContentWrapper } from '../AuthForm/AuthForm.styled';\nimport {\n  ButtonSubmitSingUp,\n  InputContainer,\n  CheckboxContainer,\n  AgreementCheckBox,\n  AgreementLabel\n} from './SignUpForm.styled';\nimport { MessageText, MessageTextWrapper } from '../LoginForm/LoginForm.styled';\nimport { StatusTooltip, SwitchButton } from '../../common';\nimport { EMAIL_REGEX, PASSWORD_REGEX } from '../../../constants/common';\n\ntype SignUpProps = {\n  onSubmit(e: any, data: any): Promise<void>;\n  userEmail?: string;\n  userName?: string;\n  formId: string;\n  validationStatusBeforeSubmit?: any;\n  isUnknownError: boolean;\n  theme?: any;\n  resetErrorStatus(): void;\n  setFieldRefs?(fieldRefs: any): void;\n};\n\ntype SignUpState = {\n  isUserExist: boolean;\n  agreementAccepted: boolean;\n};\n\nexport class SignUp extends React.Component<SignUpProps, SignUpState> {\n  templateTheme: any;\n\n  constructor(props: SignUpProps) {\n    super(props);\n    this.templateTheme = props.theme;\n    this.state = {\n      isUserExist: false,\n      agreementAccepted: false\n    };\n  }\n\n  checkIsUserExist = async (email: string) => {\n    if (email && EMAIL_REGEX.test(email)) {\n      const status = await progressStorage.userExists(email.toLowerCase());\n      this.setState({ isUserExist: status.exists });\n    } else {\n      this.setState({ isUserExist: false });\n    }\n  };\n\n  signUpCommonErrorMessage = () => (\n    <MessageTextWrapper>\n      <MessageText theme={this.templateTheme} appearance=\"span\">\n        {localize('[error signup common]')}\n      </MessageText>\n    </MessageTextWrapper>\n  );\n\n  renderSignUpButton = () => (\n    <ButtonSubmitSingUp layout={BUTTON.LAYOUT.PRIMARY} suffixIcon=\"arrow-right\" type=\"submit\">\n      {localize('[sign up button]')}\n    </ButtonSubmitSingUp>\n  );\n\n  renderWithTooltip = (\n    status: any,\n    showTooltip: any,\n    message: any,\n    actionElement: any,\n    interactive: boolean\n  ) => (\n    <StatusTooltip\n      popoverPosition={'top'}\n      layout={status}\n      showTooltip={showTooltip}\n      message={message}\n      popoverButton={actionElement}\n      transitionDuration={0.2}\n      eventHandler={'click'}\n      interactive={interactive}\n    />\n  );\n\n  renderContent = (props: any) => {\n    const { userEmail = '', userName = '', resetErrorStatus } = this.props;\n    const {\n      onChange,\n      setRefs,\n      validationStatusBeforeSubmit,\n      email,\n      isUserExist,\n      isUnknownError,\n      agreementAccepted\n    } = props;\n    return (\n      <FormContentWrapper>\n        <InputContainer size={40}>\n          <NameInput\n            userName={userName}\n            onChange={onChange}\n            setRefs={setRefs}\n            validationStatusBeforeSubmit={validationStatusBeforeSubmit.name}\n            onFocus={resetErrorStatus}\n          />\n        </InputContainer>\n        <InputContainer size={40}>\n          <EmailInput\n            userEmail={userEmail}\n            isUserExist={isUserExist}\n            checkIsUserExist={this.checkIsUserExist}\n            onChange={onChange}\n            setRefs={setRefs}\n            email={email}\n            textError={\n              isUserExist && email ? localize('[user exist]') : localize('[error email input]')\n            }\n            validationStatusBeforeSubmit={validationStatusBeforeSubmit.email}\n            onFocus={resetErrorStatus}\n            pattern={EMAIL_REGEX.source}\n          />\n        </InputContainer>\n        <InputContainer size={17}>\n          <PasswordInput\n            onChange={onChange}\n            setRefs={setRefs}\n            validationStatusBeforeSubmit={validationStatusBeforeSubmit.password}\n            pattern={PASSWORD_REGEX}\n            showValidationMessage={true}\n            onFocus={resetErrorStatus}\n          />\n        </InputContainer>\n        <CheckboxContainer\n          isChecked={agreementAccepted}\n          validationStatusBeforeSubmit={validationStatusBeforeSubmit.agreement}\n        >\n          <AgreementCheckBox\n            checked={agreementAccepted}\n            id={'agreementCheckbox'}\n            name={'agreement'}\n            ref={(node: any) => setRefs(node)}\n            onChange={() => this.setState({ agreementAccepted: !agreementAccepted })}\n          />\n          <SwitchButton\n            multiple={true}\n            selected={agreementAccepted}\n            aria-checked={agreementAccepted}\n            size={SIZES.SMALL}\n            tabIndex={0}\n            onClick={() => this.setState({ agreementAccepted: !agreementAccepted })}\n            onKeyDown={(event: any) => {\n              if (\n                [KEYS.ENTER.toLowerCase(), KEYS.SPACEBAR.toLowerCase()].includes(\n                  event.key.toLowerCase()\n                )\n              ) {\n                event.preventDefault();\n                this.setState({ agreementAccepted: !agreementAccepted });\n              }\n            }}\n          />\n          <AgreementLabel htmlFor={'agreementCheckbox'}>\n            <LearnerAgreements isSignUpPage={true} />\n          </AgreementLabel>\n        </CheckboxContainer>\n        {this.renderWithTooltip(\n          TOOLTIP.INCORRECT,\n          isUnknownError,\n          this.signUpCommonErrorMessage(),\n          this.renderSignUpButton(),\n          false\n        )}\n      </FormContentWrapper>\n    );\n  };\n\n  render() {\n    const { isUserExist, agreementAccepted } = this.state;\n    const { onSubmit, formId, isUnknownError, setFieldRefs } = this.props;\n\n    return (\n      <AuthForm\n        isUserExist={isUserExist}\n        checkIsUserExist={this.checkIsUserExist}\n        formId={formId}\n        onSubmit={onSubmit}\n        renderContent={this.renderContent}\n        isUnknownError={isUnknownError}\n        setFieldRefs={setFieldRefs}\n        agreementAccepted={agreementAccepted}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    userEmail: getEmail(state),\n    userName: getName(state)\n  };\n}\n\nexport default withTheme(connect(mapStateToProps)(SignUp));\n","import styled from 'styled-components';\nimport Text from 'components/common/Text';\nimport { secondaryFont } from 'components/mixins/typography';\nimport {\n  AuthContainer,\n  AuthTextForm,\n  AuthSocialLoginContainer,\n  AuthSection\n} from '../auth/auth.styled';\n\nexport const SignupSection = styled(AuthSection)`\n  justify-content: space-between;\n  padding-top: 40px;\n`;\n\nexport const SignupContainer = styled(AuthContainer)`\n  justify-content: space-between;\n`;\n\nexport const TextForm = styled(AuthTextForm)`\n  width: 320px;\n`;\n\nexport const SocialLoginContainer = styled(AuthSocialLoginContainer)`\n  margin-bottom: 50px;\n`;\n\nexport const FootNoteText = styled(Text)`\n  ${secondaryFont};\n  && {\n    position: absolute;\n    bottom: 47px;\n    color: ${props => props.theme.colors.coverBgOverlayTextColor};\n    width: 400px;\n    left: 50%;\n    transform: translateX(-50%);\n    font-weight: normal;\n    font-size: 12px;\n    line-height: 1.5;\n    text-align: center;\n  }\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { LOGIN_PATH } from 'constants/navigation';\nimport withNavigation from 'components/hocs/withNavigation';\nimport * as appActions from 'store/app/actions';\nimport {\n  getBackground,\n  getLogo,\n  isLoginViaSocialMediaEnabled,\n  getAlternativeLogo\n} from 'store/settings/selectors';\nimport { getCourseTitle, getCourseIntroductions } from 'store/course/selectors';\nimport { localize } from 'core/localization';\nimport * as userActions from 'store/user/actions';\nimport { isAuthenticated } from 'store/user/selectors';\nimport SignUpForm from 'components/login/SignUpForm';\nimport SocialLogin from 'components/login/SocialLogin';\nimport SwitcherForm from 'components/login/SwitcherForm';\nimport MobileFooter from 'components/login/MobileFooter';\nimport { UNKNOWN_ERROR, STATUS_OK } from 'constants/progressStorage';\nimport { RootAppState } from 'store/types';\nimport {\n  AuthPageContent,\n  AuthPageSidebar,\n  CourseLogo,\n  CourseLogoSidebar,\n  CourseLogoSidebarWrapper,\n  FormHeading,\n  SwitcherFormContainer,\n  Gdpr,\n  AgreementIcon,\n  GdprText\n} from '../auth/auth.styled';\nimport {\n  SignupSection,\n  TextForm,\n  SocialLoginContainer,\n  FootNoteText,\n  SignupContainer\n} from './SignUpPage.styled';\nimport SkipToContent from '../../components/common/SkipToContent';\n\ntype SignUpPageProps = {\n  navigateToUrl(url: string): void;\n  actions: { [key: string]: any };\n  appActions: { [key: string]: any };\n  isUserAuthenticated: boolean;\n  theme: { [key: string]: any };\n  background: { [key: string]: any };\n  logoUrl: string;\n  alternativeLogoUrl: string;\n  loginViaSocialMediaEnabled: boolean;\n  title: string;\n  courseAccessLimited: boolean;\n};\n\ntype SignUpPageState = {\n  isUnknownError: boolean;\n};\n\nexport class SignUpPage extends React.Component<SignUpPageProps, SignUpPageState> {\n  signupFormFieldRefs: { [key: string]: any };\n\n  constructor(props: SignUpPageProps) {\n    super(props);\n    const { isUserAuthenticated } = props;\n\n    this.state = {\n      isUnknownError: false\n    };\n    this.signupFormFieldRefs = {};\n    if (isUserAuthenticated) {\n      this.launch();\n    }\n  }\n\n  componentDidMount() {\n    document.title = `${localize('[title for signup page]')} | ${this.props.title}`;\n  }\n\n  onSubmit = async (event: any, signUpData: any): Promise<void> => {\n    event.preventDefault();\n\n    const status = await this.props.actions.registerUser(signUpData);\n\n    if (status === STATUS_OK) {\n      await this.launch();\n      return;\n    }\n\n    this.setState({\n      isUnknownError: status === UNKNOWN_ERROR\n    });\n  };\n\n  resetErrorStatus = () => {\n    this.setState({ isUnknownError: false });\n  };\n\n  async launch() {\n    await this.props.appActions.launchMaterial();\n  }\n\n  setFieldRefs = (fieldRefs: any) => {\n    this.signupFormFieldRefs = fieldRefs;\n  };\n\n  setNameFocus = () => {\n    this.signupFormFieldRefs.name.focus();\n  };\n\n  render() {\n    const { background, logoUrl, loginViaSocialMediaEnabled, alternativeLogoUrl } = this.props;\n    const signUpFormId = 'signUp';\n\n    return (\n      <React.Fragment>\n        <SkipToContent onClick={this.setNameFocus} />\n        <AuthPageSidebar background={background}>\n          <CourseLogoSidebarWrapper>\n            <CourseLogoSidebar\n              altText={localize('[alt logo login]')}\n              logoUrl={alternativeLogoUrl}\n            />\n          </CourseLogoSidebarWrapper>\n          <FootNoteText appearance=\"p\">{localize('[footnote]')}</FootNoteText>\n        </AuthPageSidebar>\n        <AuthPageContent background={background}>\n          <SignupSection>\n            <SignupContainer>\n              <SwitcherFormContainer>\n                <SwitcherForm signUp />\n              </SwitcherFormContainer>\n              <CourseLogo altText={localize('[alt logo login]')} logoUrl={logoUrl} />\n              <FormHeading id={signUpFormId}>{localize('[create account]')}</FormHeading>\n              <TextForm appearance=\"p\">{localize('[sign up form text]')}</TextForm>\n              <SignUpForm\n                formId={signUpFormId}\n                onSubmit={this.onSubmit}\n                isUnknownError={this.state.isUnknownError}\n                resetErrorStatus={this.resetErrorStatus}\n                setFieldRefs={this.setFieldRefs}\n              />\n              {loginViaSocialMediaEnabled && (\n                <SocialLoginContainer>\n                  <SocialLogin title={localize('[sign up with]')} />\n                </SocialLoginContainer>\n              )}\n              <Gdpr isSignupPage={true} addTopMargin={!loginViaSocialMediaEnabled}>\n                <AgreementIcon name={'agreement-lock'} />\n                <GdprText appearance=\"p\">{localize('[gdpr text]')}</GdprText>\n              </Gdpr>\n            </SignupContainer>\n            <MobileFooter\n              navigationTextKey=\"[have account]\"\n              navigateTo={LOGIN_PATH}\n              navigationToTextKey=\"[login]\"\n            />\n          </SignupSection>\n        </AuthPageContent>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    title: getCourseTitle(state),\n    introductions: getCourseIntroductions(state),\n    background: getBackground(state),\n    logoUrl: getLogo(state),\n    alternativeLogoUrl: getAlternativeLogo(state),\n    isUserAuthenticated: isAuthenticated(state),\n    loginViaSocialMediaEnabled: isLoginViaSocialMediaEnabled(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    actions: bindActionCreators(userActions, dispatch),\n    appActions: bindActionCreators(appActions, dispatch)\n  };\n}\n\nexport default withNavigation(connect(mapStateToProps, mapDispatchToProps)(SignUpPage));\n","import React from 'react';\nimport { localize } from 'core/localization';\nimport { Figure } from './Figure.styled';\n\nexport const StartOver = () => (\n  <Figure\n    width=\"260px\"\n    height=\"127px\"\n    viewBox=\"0 0 260 127\"\n    version=\"1.1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    role=\"img\"\n    arialabel={`${localize('[start over]')}`}\n  >\n    <title>22A00D1A-3369-4516-81AB-CC2786BABD7B</title>\n    <desc>Created with sketchtool.</desc>\n    <defs>\n      <path id=\"dvpdj70tgb\" d=\"M12.88 0h52.628c2.761 0 5 2.239 5 5v85c0 2.761-2.239 5-5 5H5c-2.761 0-5-2.239-5-5V12.96L12.88 0z\"/>\n      <path id=\"uv596r90gc\" d=\"M91 22c2.761 0 5 2.239 5 5v44c0 2.761-2.239 5-5 5H47c-2.761 0-5-2.239-5-5l-.001-10H33l8.999-9.999L42 27c0-2.761 2.239-5 5-5h44z\"/>\n      <filter id=\"98ia7jy47a\" width=\"100%\" height=\"100%\" x=\"0%\" y=\"0%\" filterUnits=\"objectBoundingBox\">\n        <feGaussianBlur in=\"SourceGraphic\"/>\n      </filter>\n    </defs>\n    <g fill=\"none\" fillRule=\"evenodd\">\n      <g>\n        <g transform=\"translate(-590 -164) translate(590 164)\">\n          <g fill=\"#363E4E\" opacity=\".02\">\n            <g>\n              <path\n                d=\"M74.48.423H20.984s-9.378 1.012-9.378 8.467c0 7.454 9.378 8.466 9.378 8.466l31.828.06s7.447 1.452 7.447\n                7.983c0 6.53-7.447 8.466-7.447 8.466H36.368s-13.348.815-13.348 8.89c0 8.074 13.348 9.312 13.348 9.312H9.479S0\n                53.7 0 60.473C0 67.246 9.48 69 9.48 69h207.865s11.703-1.33\n                11.703-8.527c0-7.196-11.703-8.406-11.703-8.406H197.02s-11.868-.707-12.08-8.042c-.211-7.336 12.08-8.709\n                12.08-8.709l23.586-.816s12.31 1.814 12.31-8.376-11.325-8.768-11.325-8.768l28.253.06S260 16.806 260 8.89C260\n                .973 249.844 0 249.844 0L74.479.423z\"\n                filter=\"url(#98ia7jy47a)\"\n                transform=\"translate(0 37)\"\n              />\n            </g>\n          </g>\n          <g>\n            <g transform=\"translate(88)\">\n              <use fill=\"#FFF\" xlinkHref=\"#dvpdj70tgb\"/>\n              <use fill=\"#FC794B\" fillOpacity=\".2\" xlinkHref=\"#dvpdj70tgb\"/>\n            </g>\n            <path\n              fill=\"#FBCCBC\"\n              d=\"M8 24H33V28H8zM8 34H33V38H8zM8 54H33V58H8zM8 44H33V48H8zM8 64H33V68H8zM8 74H33V78H8z\"\n              transform=\"translate(88)\"\n            />\n            <g transform=\"translate(88)\">\n              <use fill=\"#FFF\" xlinkHref=\"#uv596r90gc\"/>\n              <use fill=\"#FC794B\" fillOpacity=\".9\" xlinkHref=\"#uv596r90gc\"/>\n              <use stroke=\"#FFF\" xlinkHref=\"#uv596r90gc\"/>\n              <use stroke=\"#FFF\" strokeWidth=\"3\" xlinkHref=\"#uv596r90gc\"/>\n            </g>\n            <path\n              fill=\"#FFF\"\n              d=\"M69.125 46.77c5.592 0 10.125 4.533 10.125 10.125v6.885H59v-6.885c0-5.592 4.533-10.125 10.125-10.125zm0-13.77c3.802 0 6.885 3.083 6.885 6.885 0 3.802-3.083\n              6.885-6.885 6.885-3.802 0-6.885-3.083-6.885-6.885 0-3.802 3.083-6.885 6.885-6.885z\"\n              transform=\"translate(88)\"\n            />\n            <path\n              fill=\"#EE6C3F\"\n              fillOpacity=\".2\"\n              d=\"M12.881 12.96L0 12.96 12.881 0z\"\n              transform=\"translate(88)\"\n            />\n          </g>\n          <ellipse cx=\"131\" cy=\"123\" fill=\"#F5F7FB\" rx=\"43\" ry=\"4\" />\n          <circle cx=\"165.5\" cy=\"59.5\" r=\"5.5\" fill=\"#FFF\" stroke=\"#FD875D\" strokeWidth=\"2\" />\n          <path\n            fill=\"#FC865D\"\n            fillRule=\"nonzero\"\n            d=\"M165.952 58.064l.984.984-2.46 2.46-.984-.984\n            2.46-2.46zm1.967-.492c-.147.099-.59-.344-.491-.491-.361-.197-.69-.033-.984.491l.984.984c.524-.295.688-.623.491-.984zM163 62h.984l-.984-.984V62z\"\n          />\n        </g>\n      </g>\n    </g>\n  </Figure>\n);\n\nexport default StartOver;\n","import styled from 'styled-components';\nimport media from 'components/mixins/media';\nimport { mainFont } from 'components/mixins/typography';\nimport { Button } from '../../common';\nimport buttonDefaultStyle from '../../mixins/normalize';\nimport { transparentize } from '../../../utils/color';\n\nexport const Content = styled.div`\n  ${mainFont};\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const Figure = styled.div`\n  margin: 0 auto;\n`;\n\nexport const Description = styled.p`\n  max-width: 652px;\n  font-size: 32px;\n  line-height: 1.4;\n  text-align: center;\n  color: ${props => props.theme.colors.textColor};\n  margin: 85px auto 40px;\n  ${media.mobile`\n    font-size: 30px;\n    max-width: 260px;\n    margin-top: 52px;\n  `};\n`;\n\nexport const ButtonElement = styled(Button)`\n  ${buttonDefaultStyle};\n  flex: 0 0 auto;\n  width: 140px;\n  background-color: ${props => props.theme.colors.mainColor};\n  &:hover,\n  &:focus {\n    background-color: ${props => transparentize(props.theme.colors.mainColor, 0.9)};\n  }\n  > span {\n    font-size: 14px;\n    line-height: 1;\n  }\n`;\n","import React from 'react';\nimport StartOverIcon from 'assets/figures/StartOver';\nimport { ButtonElement, Description, Figure, Content } from './StartOver.styled';\nimport { BUTTON } from '../../../constants/components';\nimport { localize } from '../../../core/localization';\n\ntype StartOverProps = {\n  closePopup(): void;\n  popupSettings: { [key: string]: any };\n};\n\nexport const StartOver = (props: StartOverProps) => {\n  const [restoreAttemptStarted, setRestoreAttemptStarted] = React.useState<boolean>(false);\n\n  const startNewAttempt = async () => {\n    if (!restoreAttemptStarted) {\n      setRestoreAttemptStarted(true);\n      props.popupSettings.navigateToIndex();\n      await props.popupSettings.startNewAttempt();\n      props.closePopup();\n    }\n  };\n\n  return (\n    <Content>\n      <Figure>\n        <StartOverIcon />\n      </Figure>\n      <Description>{localize('[start over description]')}</Description>\n      <ButtonElement layout={BUTTON.LAYOUT.PRIMARY} onClick={startNewAttempt}>\n        {localize('[start over]')}\n      </ButtonElement>\n    </Content>\n  );\n};\n\nexport default StartOver;\n","import React from 'react';\n\ntype ErrorBoundaryProps = {\n  component?: any;\n  popup?: any;\n  children: any;\n};\n\ntype ErrorBoundaryState = {\n  error: any;\n  errorInfo: any;\n};\n\nclass ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: any) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    this.setState({\n      error,\n      errorInfo\n    });\n\n    if (this.props.popup) {\n      this.props.popup();\n    }\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      return this.props.component || <div />;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router';\nimport { ThemeProvider } from 'styled-components';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { isProgressRestoreFailed } from 'store/course/selectors';\nimport { getTimerStatus } from 'store/timer/selectors';\nimport { TimerStatus } from 'constants/timer';\nimport { RootAppState } from 'store/types';\nimport { MATERIAL_TYPES } from 'constants/common';\nimport TimedOut from 'components/popups/timedOut';\nimport RouteTransition from '../../components/shell/RouteTransition/RouteTransition';\nimport Layout from '../../components/shell/Layout/Layout';\nimport { PrivateRoute, RouteWithRedirect } from '../../components/common';\nimport {\n  INDEX_PATH,\n  LOGIN_PATH,\n  RESULTS_PATH,\n  SECTION_PATH,\n  SECTIONS_PATH,\n  SIGNUP_PATH\n} from '../../constants/navigation';\nimport Sections from './sections/SectionsPage';\nimport NoAccess from '../errors/noAccess/LimitAccessPage';\nimport CourseOverview from './courseOverview/CourseOverview';\nimport Login from '../login/LoginPage';\nimport SignUp from '../signUp/SignUpPage';\nimport NotFoundPage from '../errors/notFound/NotFoundPage';\nimport * as courseActions from '../../store/course/actions';\nimport { IS_NO_ACCESS, IS_NOT_AUTHORIZED, IS_SUCCESSFUL_ACCESS } from '../../constants/typeAccess';\nimport { POPUP_ID_START_OVER, POPUP_ID_TIMED_OUT } from '../../constants/popups';\nimport StartOverPopup from '../../components/popups/startOver/StartOver';\nimport * as popupActions from '../../store/popup/actions';\nimport ErrorBoundary from '../../components/errorBoundary/ErrorBoundary';\nimport { getQuestionPoolSize, isQuestionPoolEnabled } from '../../store/settings/selectors';\n\ntype CourseProps = {\n  colors: { [key: string]: any };\n  fonts: { [key: string]: any };\n  background: { [key: string]: any };\n  isLowResolution: boolean;\n  isTocExpanded: boolean;\n  isUserAuthenticated: boolean;\n  location: { [key: string]: any };\n  navigateToUrl(url: string): void;\n  courseActions: { [key: string]: any };\n  userAccessIsLimited: boolean;\n  navigateToIndex(): void;\n  popupActions: { [key: string]: any };\n  isCourseProgressRestoreFailed?: boolean;\n  timerStatus: TimerStatus;\n  isQuestionPoolEnabled: boolean;\n  questionPoolSize: number;\n};\n\nconst Course = (props: CourseProps) => {\n  const {\n    colors,\n    fonts,\n    background,\n    isLowResolution,\n    isTocExpanded,\n    isUserAuthenticated,\n    userAccessIsLimited,\n    isCourseProgressRestoreFailed,\n    timerStatus,\n    isQuestionPoolEnabled,\n    questionPoolSize\n  } = props;\n  let typeAccess = IS_SUCCESSFUL_ACCESS;\n\n  if (userAccessIsLimited || !isUserAuthenticated) {\n    typeAccess = userAccessIsLimited && isUserAuthenticated ? IS_NO_ACCESS : IS_NOT_AUTHORIZED;\n  }\n\n  const openStartOverPopup = () => {\n    props.popupActions.openPopup({\n      popupId: POPUP_ID_START_OVER,\n      popupAriaLabelKey: '[aria label start over popup]',\n      component: StartOverPopup,\n      startNewAttempt: props.courseActions.startNewAttempt,\n      navigateToIndex: props.navigateToIndex,\n      disablePopupClosing: true,\n      disableBottomLine: true\n    });\n  };\n\n  const openTimedOutPopup = () => {\n    props.popupActions.openPopup({\n      popupId: POPUP_ID_TIMED_OUT,\n      popupAriaLabelKey: '[aria label timed out popup]',\n      component: TimedOut,\n      disablePopupClosing: true\n    });\n  };\n\n  useEffect(() => {\n    if (isUserAuthenticated) {\n      const navigate = async () => {\n        const urlToNavigate: any = await props.courseActions.launch();\n        props.navigateToUrl(urlToNavigate);\n      };\n\n      navigate();\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (isCourseProgressRestoreFailed) {\n      if (isQuestionPoolEnabled && questionPoolSize <= 0) {\n        return;\n      }\n      openStartOverPopup();\n    }\n\n    if (timerStatus === TimerStatus.TIMED_OUT && !isCourseProgressRestoreFailed) {\n      openTimedOutPopup();\n    }\n\n    // eslint-disable-next-line\n  }, [isCourseProgressRestoreFailed, timerStatus, isQuestionPoolEnabled, questionPoolSize]);\n\n  return (\n    <Route\n      render={({ location }) => (\n        <ThemeProvider theme={{ colors, fonts }}>\n          <RouteTransition\n            location={location}\n            isLowResolution={isLowResolution}\n            isTocExpanded={isTocExpanded}\n            background={background}\n          >\n            <Layout className=\"layout\">\n              <ErrorBoundary popup={openStartOverPopup}>\n                <Switch location={location}>\n                  <PrivateRoute\n                    exact\n                    path={INDEX_PATH}\n                    component={Sections}\n                    componentNoAccess={NoAccess}\n                    typeAccess={typeAccess}\n                    materialType={MATERIAL_TYPES.COURSE}\n                  />\n                  <PrivateRoute\n                    exact\n                    path={SECTIONS_PATH}\n                    component={Sections}\n                    componentNoAccess={NoAccess}\n                    typeAccess={typeAccess}\n                    materialType={MATERIAL_TYPES.COURSE}\n                  />\n                  <PrivateRoute\n                    exact\n                    path={RESULTS_PATH}\n                    component={CourseOverview}\n                    componentNoAccess={NoAccess}\n                    typeAccess={typeAccess}\n                    materialType={MATERIAL_TYPES.COURSE}\n                  />\n                  <PrivateRoute\n                    path={SECTION_PATH}\n                    component={CourseOverview}\n                    componentNoAccess={NoAccess}\n                    typeAccess={typeAccess}\n                    materialType={MATERIAL_TYPES.COURSE}\n                  />\n                  <RouteWithRedirect\n                    exact\n                    path={LOGIN_PATH}\n                    shouldRedirect={isUserAuthenticated}\n                    component={Login}\n                  />\n                  <RouteWithRedirect\n                    exact\n                    path={SIGNUP_PATH}\n                    shouldRedirect={isUserAuthenticated}\n                    component={SignUp}\n                  />\n                  <Route path=\"*\" exact component={NotFoundPage} />\n                </Switch>\n              </ErrorBoundary>\n            </Layout>\n          </RouteTransition>\n        </ThemeProvider>\n      )}\n    />\n  );\n};\n\nfunction mapStateToProps(state: RootAppState) {\n  return {\n    isCourseProgressRestoreFailed: isProgressRestoreFailed(state),\n    timerStatus: getTimerStatus(state),\n    isQuestionPoolEnabled: isQuestionPoolEnabled(state),\n    questionPoolSize: getQuestionPoolSize(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    courseActions: bindActionCreators(courseActions, dispatch),\n    popupActions: bindActionCreators(popupActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Course);\n"],"sourceRoot":""}